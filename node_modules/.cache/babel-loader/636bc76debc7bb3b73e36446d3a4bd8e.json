{"ast":null,"code":"import { useState, useRef, useEffect } from 'react';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\nfunction useTransition(_ref) {\n  let {\n    duration,\n    exitDuration,\n    timingFunction,\n    mounted,\n    onEnter,\n    onExit,\n    onEntered,\n    onExited\n  } = _ref;\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState(mounted ? \"entered\" : \"exited\");\n  const timeoutRef = useRef(-1);\n  const handleStateChange = shouldMount => {\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    setStatus(shouldMount ? \"pre-entering\" : \"pre-exiting\");\n    window.clearTimeout(timeoutRef.current);\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n    if (newTransitionDuration === 0) {\n      typeof preHandler === \"function\" && preHandler();\n      typeof handler === \"function\" && handler();\n      setStatus(shouldMount ? \"entered\" : \"exited\");\n    } else {\n      const preStateTimeout = window.setTimeout(() => {\n        typeof preHandler === \"function\" && preHandler();\n        setStatus(shouldMount ? \"entering\" : \"exiting\");\n      }, 10);\n      timeoutRef.current = window.setTimeout(() => {\n        window.clearTimeout(preStateTimeout);\n        typeof handler === \"function\" && handler();\n        setStatus(shouldMount ? \"entered\" : \"exited\");\n      }, newTransitionDuration);\n    }\n  };\n  useDidUpdate(() => {\n    handleStateChange(mounted);\n  }, [mounted]);\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), []);\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || theme.transitionTimingFunction\n  };\n}\nexport { useTransition };","map":{"version":3,"sources":["../../src/Transition/use-transition.ts"],"names":[],"mappings":";;;AAGO,SAAS,aAAa,CAAA,IAAA,EAS1B;EAAA,IAT2B;IAC5B,QAAQ;IACR,YAAY;IACZ,cAAc;IACd,OAAO;IACP,OAAO;IACP,MAAM;IACN,SAAS;IACT;EACF,CAAC,GAAA,IAAA;EACC,MAAM,KAAK,GAAG,eAAe,CAAA,CAAE;EAC/B,MAAM,kBAAkB,GAAG,gBAAgB,CAAA,CAAE;EAC7C,MAAM,YAAY,GAAG,KAAK,CAAC,oBAAoB,GAAG,kBAAkB,GAAG,KAAK;EAC5E,MAAM,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,GAAG,QAAQ,CAAC,YAAY,GAAG,CAAC,GAAG,QAAQ,CAAC;EACzF,MAAM,CAAC,gBAAgB,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC;EAC9E,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC7B,MAAM,iBAAiB,GAAI,WAAW,IAAK;IACzC,MAAM,UAAU,GAAG,WAAW,GAAG,OAAO,GAAG,MAAM;IACjD,MAAM,OAAO,GAAG,WAAW,GAAG,SAAS,GAAG,QAAQ;IAClD,SAAS,CAAC,WAAW,GAAG,cAAc,GAAG,aAAa,CAAC;IACvD,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC;IACvC,MAAM,qBAAqB,GAAG,YAAY,GAAG,CAAC,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY;IACtF,qBAAqB,CAAC,qBAAqB,CAAC;IAC5C,IAAI,qBAAqB,KAAK,CAAC,EAAE;MAC/B,OAAO,UAAU,KAAK,UAAU,IAAI,UAAU,CAAA,CAAE;MAChD,OAAO,OAAO,KAAK,UAAU,IAAI,OAAO,CAAA,CAAE;MAC1C,SAAS,CAAC,WAAW,GAAG,SAAS,GAAG,QAAQ,CAAC;IACnD,CAAK,MAAM;MACL,MAAM,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM;QAC9C,OAAO,UAAU,KAAK,UAAU,IAAI,UAAU,CAAA,CAAE;QAChD,SAAS,CAAC,WAAW,GAAG,UAAU,GAAG,SAAS,CAAC;MACvD,CAAO,EAAE,EAAE,CAAC;MACN,UAAU,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM;QAC3C,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC;QACpC,OAAO,OAAO,KAAK,UAAU,IAAI,OAAO,CAAA,CAAE;QAC1C,SAAS,CAAC,WAAW,GAAG,SAAS,GAAG,QAAQ,CAAC;MACrD,CAAO,EAAE,qBAAqB,CAAC;IAC/B;EACA,CAAG;EACD,YAAY,CAAC,MAAM;IACjB,iBAAiB,CAAC,OAAO,CAAC;EAC9B,CAAG,EAAE,CAAC,OAAO,CAAC,CAAC;EACb,SAAS,CAAC,MAAM,MAAM,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;EAClE,OAAO;IACL,kBAAkB;IAClB,gBAAgB;IAChB,wBAAwB,EAAE,cAAc,IAAI,KAAK,CAAC;EACtD,CAAG;AACH","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { useMantineTheme } from '@mantine/styles';\n\nexport type TransitionStatus =\n  | 'entered'\n  | 'exited'\n  | 'entering'\n  | 'exiting'\n  | 'pre-exiting'\n  | 'pre-entering';\n\ninterface UseTransition {\n  duration: number;\n  exitDuration: number;\n  timingFunction: string;\n  mounted: boolean;\n  onEnter?(): void;\n  onExit?(): void;\n  onEntered?(): void;\n  onExited?(): void;\n}\n\nexport function useTransition({\n  duration,\n  exitDuration,\n  timingFunction,\n  mounted,\n  onEnter,\n  onExit,\n  onEntered,\n  onExited,\n}: UseTransition) {\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState<TransitionStatus>(mounted ? 'entered' : 'exited');\n  const timeoutRef = useRef<number>(-1);\n\n  const handleStateChange = (shouldMount: boolean) => {\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n\n    setStatus(shouldMount ? 'pre-entering' : 'pre-exiting');\n    window.clearTimeout(timeoutRef.current);\n\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n\n    if (newTransitionDuration === 0) {\n      typeof preHandler === 'function' && preHandler();\n      typeof handler === 'function' && handler();\n      setStatus(shouldMount ? 'entered' : 'exited');\n    } else {\n      const preStateTimeout = window.setTimeout(() => {\n        typeof preHandler === 'function' && preHandler();\n        setStatus(shouldMount ? 'entering' : 'exiting');\n      }, 10);\n\n      timeoutRef.current = window.setTimeout(() => {\n        window.clearTimeout(preStateTimeout);\n        typeof handler === 'function' && handler();\n        setStatus(shouldMount ? 'entered' : 'exited');\n      }, newTransitionDuration);\n    }\n  };\n\n  useDidUpdate(() => {\n    handleStateChange(mounted);\n  }, [mounted]);\n\n  useEffect(() => () => window.clearTimeout(timeoutRef.current), []);\n\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || theme.transitionTimingFunction,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}