{"ast":null,"code":"import { useRef } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\nconst MIME_TYPES = {\n  ico: \"image/x-icon\",\n  png: \"image/png\",\n  svg: \"image/svg+xml\",\n  gif: \"image/gif\"\n};\nfunction useFavicon(url) {\n  const link = useRef();\n  useIsomorphicEffect(() => {\n    if (!url) {\n      return;\n    }\n    if (!link.current) {\n      const existingElements = document.querySelectorAll('link[rel*=\"icon\"]');\n      existingElements.forEach(element2 => document.head.removeChild(element2));\n      const element = document.createElement(\"link\");\n      element.rel = \"shortcut icon\";\n      link.current = element;\n      document.querySelector(\"head\").appendChild(element);\n    }\n    const splittedUrl = url.split(\".\");\n    link.current.setAttribute(\"type\", MIME_TYPES[splittedUrl[splittedUrl.length - 1].toLowerCase()]);\n    link.current.setAttribute(\"href\", url);\n  }, [url]);\n}\nexport { useFavicon };","map":{"version":3,"sources":["../../src/use-favicon/use-favicon.ts"],"names":[],"mappings":";;AAEA,MAAM,UAAU,GAAG;EACjB,GAAG,EAAE,cAAc;EACnB,GAAG,EAAE,WAAW;EAChB,GAAG,EAAE,eAAe;EACpB,GAAG,EAAE;AACP,CAAC;AACM,SAAS,UAAU,CAAC,GAAG,EAAE;EAC9B,MAAM,IAAI,GAAG,MAAM,CAAA,CAAE;EACrB,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAAC,GAAG,EAAE;MACR;IACN;IACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;MACjB,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC,mBAAmB,CAAC;MACvE,gBAAgB,CAAC,OAAO,CAAE,QAAQ,IAAK,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;MAC3E,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;MAC9C,OAAO,CAAC,GAAG,GAAG,eAAe;MAC7B,IAAI,CAAC,OAAO,GAAG,OAAO;MACtB,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC;IACzD;IACI,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;IAClC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,WAAW,CAAA,CAAE,CAAC,CAAC;IAChG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC;EAC1C,CAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AACX","sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nconst MIME_TYPES = {\n  ico: 'image/x-icon',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  gif: 'image/gif',\n};\n\nexport function useFavicon(url: string) {\n  const link = useRef<HTMLLinkElement>();\n\n  useIsomorphicEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    if (!link.current) {\n      const existingElements = document.querySelectorAll<HTMLLinkElement>('link[rel*=\"icon\"]');\n      existingElements.forEach((element) => document.head.removeChild(element));\n\n      const element = document.createElement('link');\n      element.rel = 'shortcut icon';\n      link.current = element;\n      document.querySelector('head').appendChild(element);\n    }\n\n    const splittedUrl = url.split('.');\n    link.current.setAttribute(\n      'type',\n      MIME_TYPES[splittedUrl[splittedUrl.length - 1].toLowerCase()]\n    );\n    link.current.setAttribute('href', url);\n  }, [url]);\n}\n"]},"metadata":{},"sourceType":"module"}