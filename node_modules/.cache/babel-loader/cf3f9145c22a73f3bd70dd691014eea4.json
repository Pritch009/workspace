{"ast":null,"code":"import React from 'react';\nimport { usePaginationContext } from '../Pagination.context.js';\nimport { PaginationControl } from '../PaginationControl/PaginationControl.js';\nimport { PaginationDots } from '../PaginationDots/PaginationDots.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nfunction PaginationItems(_ref) {\n  let {\n    dotsIcon\n  } = _ref;\n  const ctx = usePaginationContext();\n  const items = ctx.range.map((page, index) => {\n    var _a;\n    if (page === \"dots\") {\n      return /* @__PURE__ */React.createElement(PaginationDots, {\n        icon: dotsIcon,\n        key: index\n      });\n    }\n    return /* @__PURE__ */React.createElement(PaginationControl, __spreadValues({\n      key: index,\n      active: page === ctx.active,\n      \"aria-current\": page === ctx.active ? \"page\" : void 0,\n      onClick: () => ctx.onChange(page),\n      disabled: ctx.disabled\n    }, (_a = ctx.getItemProps) == null ? void 0 : _a.call(ctx, page)), page);\n  });\n  return /* @__PURE__ */React.createElement(React.Fragment, null, items);\n}\nPaginationItems.displayName = \"@mantine/core/PaginationItems\";\nexport { PaginationItems };","map":{"version":3,"sources":["../../../src/Pagination/PaginationItems/PaginationItems.tsx"],"names":[],"mappings":";;;;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc;AACrC,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAqB;AACtD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;AAClD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB;AACxD,IAAI,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;EAAE,UAAU,EAAE,IAAI;EAAE,YAAY,EAAE,IAAI;EAAE,QAAQ,EAAE,IAAI;EAAE;AAAK,CAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AAC/J,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EAC7B,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAA,CAAE,CAAC,EAC5B,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACrC,IAAI,mBAAmB,EACrB,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;IACvC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACzC;EACE,OAAO,CAAC;AACV,CAAC;AAKM,SAAS,eAAe,CAAA,IAAA,EAAe;EAAA,IAAd;IAAE;EAAQ,CAAE,GAAA,IAAA;EAC1C,MAAM,GAAG,GAAG,oBAAoB,CAAA,CAAE;EAClC,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK;IAC3C,IAAI,EAAE;IACN,IAAI,IAAI,KAAK,MAAM,EAAE;MACnB,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE;QACzD,IAAI,EAAE,QAAQ;QACd,GAAG,EAAE;MACb,CAAO,CAAC;IACR;IACI,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,iBAAiB,EAAE,cAAc,CAAC;MAC3E,GAAG,EAAE,KAAK;MACV,MAAM,EAAE,IAAI,KAAK,GAAG,CAAC,MAAM;MAC3B,cAAc,EAAE,IAAI,KAAK,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;MACrD,OAAO,EAAE,CAAA,KAAM,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACjC,QAAQ,EAAE,GAAG,CAAC;IACpB,CAAK,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,YAAY,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC;EAC5E,CAAG,CAAC;EACF,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,CAAC;AACzE;AACA,eAAe,CAAC,WAAW,GAAG,+BAA+B","sourcesContent":["import React from 'react';\nimport { usePaginationContext } from '../Pagination.context';\nimport { PaginationControl } from '../PaginationControl/PaginationControl';\nimport { PaginationDots } from '../PaginationDots/PaginationDots';\nimport { PaginationIcon } from '../Pagination.icons';\n\nexport interface PaginationItemsProps {\n  /** Dots icon component */\n  dotsIcon?: PaginationIcon;\n}\n\nexport function PaginationItems({ dotsIcon }: PaginationItemsProps) {\n  const ctx = usePaginationContext();\n\n  const items = ctx.range.map((page, index) => {\n    if (page === 'dots') {\n      return <PaginationDots icon={dotsIcon} key={index} />;\n    }\n\n    return (\n      <PaginationControl\n        key={index}\n        active={page === ctx.active}\n        aria-current={page === ctx.active ? 'page' : undefined}\n        onClick={() => ctx.onChange(page)}\n        disabled={ctx.disabled}\n        {...ctx.getItemProps?.(page)}\n      >\n        {page}\n      </PaginationControl>\n    );\n  });\n  return <>{items}</>;\n}\n\nPaginationItems.displayName = '@mantine/core/PaginationItems';\n"]},"metadata":{},"sourceType":"module"}