{"ast":null,"code":"import { createStyles, em, rem, getBreakpointValue, getSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    height,\n    width,\n    fixed,\n    position,\n    hiddenBreakpoint,\n    zIndex,\n    section,\n    withBorder,\n    layout\n  } = _ref;\n  const breakpoints = typeof width === \"object\" && width !== null ? getSortedBreakpoints(width, theme).reduce((acc, _ref2) => {\n    let [breakpoint, breakpointSize] = _ref2;\n    acc[`@media (min-width: ${em(breakpoint)})`] = {\n      width: rem(breakpointSize),\n      minWidth: rem(breakpointSize)\n    };\n    return acc;\n  }, {}) : null;\n  const borderStyles = withBorder ? {\n    [section === \"navbar\" ? \"borderRight\" : \"borderLeft\"]: `${rem(1)} solid ${theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[2]}`\n  } : {};\n  return {\n    root: __spreadProps(__spreadValues(__spreadValues(__spreadProps(__spreadValues(__spreadValues({}, theme.fn.fontStyles()), position), {\n      top: layout === \"alt\" ? 0 : (position == null ? void 0 : position.top) || \"var(--mantine-header-height)\",\n      bottom: 0,\n      zIndex,\n      height: height ? rem(height) : layout === \"alt\" ? \"auto\" : \"calc(100vh - var(--mantine-header-height, 0rem) - var(--mantine-footer-height, 0rem))\",\n      width: (width == null ? void 0 : width.base) ? rem(width == null ? void 0 : width.base) : \"100%\",\n      position: fixed ? \"fixed\" : \"static\",\n      boxSizing: \"border-box\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white\n    }), borderStyles), breakpoints), {\n      \"&[data-hidden]\": {\n        [`@media (max-width: ${em(getBreakpointValue(getSize({\n          size: hiddenBreakpoint,\n          sizes: theme.breakpoints\n        })) - 1)})`]: {\n          display: \"none\"\n        }\n      }\n    })\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/AppShell/HorizontalSection/HorizontalSection.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  getSize,\n  rem,\n  getBreakpointValue,\n  em,\n} from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport type HorizontalSectionWidth = Partial<Record<string, string | number>>;\n\nexport interface HorizontalSectionPosition {\n  top?: number;\n  left?: number;\n  bottom?: number;\n  right?: number;\n}\n\ninterface HorizontalSectionStyles {\n  width: Partial<Record<string, string | number>>;\n  height: string | number;\n  position: HorizontalSectionPosition;\n  hiddenBreakpoint: MantineNumberSize;\n  fixed: boolean;\n  zIndex: React.CSSProperties['zIndex'];\n  section: 'navbar' | 'aside';\n  layout: 'default' | 'alt';\n  withBorder: boolean;\n}\n\nexport default createStyles(\n  (\n    theme,\n    {\n      height,\n      width,\n      fixed,\n      position,\n      hiddenBreakpoint,\n      zIndex,\n      section,\n      withBorder,\n      layout,\n    }: HorizontalSectionStyles\n  ) => {\n    const breakpoints =\n      typeof width === 'object' && width !== null\n        ? getSortedBreakpoints(width, theme).reduce((acc, [breakpoint, breakpointSize]) => {\n            acc[`@media (min-width: ${em(breakpoint)})`] = {\n              width: rem(breakpointSize),\n              minWidth: rem(breakpointSize),\n            };\n\n            return acc;\n          }, {})\n        : null;\n\n    const borderStyles = withBorder\n      ? {\n          [section === 'navbar' ? 'borderRight' : 'borderLeft']: `${rem(1)} solid ${\n            theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[2]\n          }`,\n        }\n      : {};\n\n    return {\n      root: {\n        ...theme.fn.fontStyles(),\n        ...position,\n        top: layout === 'alt' ? 0 : position?.top || 'var(--mantine-header-height)',\n        bottom: 0,\n        zIndex,\n        height: height\n          ? rem(height)\n          : layout === 'alt'\n          ? 'auto'\n          : 'calc(100vh - var(--mantine-header-height, 0rem) - var(--mantine-footer-height, 0rem))',\n        width: width?.base ? rem(width?.base) : '100%',\n        position: fixed ? 'fixed' : 'static',\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n        ...borderStyles,\n        ...breakpoints,\n\n        '&[data-hidden]': {\n          [`@media (max-width: ${em(\n            getBreakpointValue(\n              getSize({\n                size: hiddenBreakpoint,\n                sizes: theme.breakpoints,\n              })\n            ) - 1\n          )})`]: {\n            display: 'none',\n          },\n        },\n      },\n    };\n  }\n);\n"]},"metadata":{},"sourceType":"module"}