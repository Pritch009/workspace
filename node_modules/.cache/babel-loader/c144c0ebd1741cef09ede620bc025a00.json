{"ast":null,"code":"import { useRef, useEffect } from 'react';\nfunction useDelayedHover(_ref) {\n  let {\n    open,\n    close,\n    openDelay,\n    closeDelay\n  } = _ref;\n  const openTimeout = useRef(-1);\n  const closeTimeout = useRef(-1);\n  const clearTimeouts = () => {\n    window.clearTimeout(openTimeout.current);\n    window.clearTimeout(closeTimeout.current);\n  };\n  const openDropdown = () => {\n    clearTimeouts();\n    if (openDelay === 0) {\n      open();\n    } else {\n      openTimeout.current = window.setTimeout(open, openDelay);\n    }\n  };\n  const closeDropdown = () => {\n    clearTimeouts();\n    if (closeDelay === 0) {\n      close();\n    } else {\n      closeTimeout.current = window.setTimeout(close, closeDelay);\n    }\n  };\n  useEffect(() => clearTimeouts, []);\n  return {\n    openDropdown,\n    closeDropdown\n  };\n}\nexport { useDelayedHover };","map":{"version":3,"sources":["../../src/Floating/use-delayed-hover.ts"],"names":[],"mappings":";AACO,SAAS,eAAe,CAAA,IAAA,EAAyC;EAAA,IAAxC;IAAE,IAAI;IAAE,KAAK;IAAE,SAAS;IAAE;EAAU,CAAE,GAAA,IAAA;EACpE,MAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,aAAa,GAAG,CAAA,KAAM;IAC1B,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC;IACxC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC;EAC7C,CAAG;EACD,MAAM,YAAY,GAAG,CAAA,KAAM;IACzB,aAAa,CAAA,CAAE;IACf,IAAI,SAAS,KAAK,CAAC,EAAE;MACnB,IAAI,CAAA,CAAE;IACZ,CAAK,MAAM;MACL,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC;IAC9D;EACA,CAAG;EACD,MAAM,aAAa,GAAG,CAAA,KAAM;IAC1B,aAAa,CAAA,CAAE;IACf,IAAI,UAAU,KAAK,CAAC,EAAE;MACpB,KAAK,CAAA,CAAE;IACb,CAAK,MAAM;MACL,YAAY,CAAC,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,UAAU,CAAC;IACjE;EACA,CAAG;EACD,SAAS,CAAC,MAAM,aAAa,EAAE,EAAE,CAAC;EAClC,OAAO;IAAE,YAAY;IAAE;EAAa,CAAE;AACxC","sourcesContent":["import { useRef, useEffect } from 'react';\n\ninterface UseDelayedHoverInput {\n  open(): void;\n  close(): void;\n  openDelay: number;\n  closeDelay: number;\n}\n\nexport function useDelayedHover({ open, close, openDelay, closeDelay }: UseDelayedHoverInput) {\n  const openTimeout = useRef(-1);\n  const closeTimeout = useRef(-1);\n\n  const clearTimeouts = () => {\n    window.clearTimeout(openTimeout.current);\n    window.clearTimeout(closeTimeout.current);\n  };\n\n  const openDropdown = () => {\n    clearTimeouts();\n\n    if (openDelay === 0) {\n      open();\n    } else {\n      openTimeout.current = window.setTimeout(open, openDelay);\n    }\n  };\n\n  const closeDropdown = () => {\n    clearTimeouts();\n\n    if (closeDelay === 0) {\n      close();\n    } else {\n      closeTimeout.current = window.setTimeout(close, closeDelay);\n    }\n  };\n\n  useEffect(() => clearTimeouts, []);\n\n  return { openDropdown, closeDropdown };\n}\n"]},"metadata":{},"sourceType":"module"}