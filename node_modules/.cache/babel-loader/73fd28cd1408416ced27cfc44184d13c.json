{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport useStyles from './Badge.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  variant: \"light\",\n  size: \"md\",\n  radius: \"xl\"\n};\nconst _Badge = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Badge\", defaultProps, props),\n    {\n      className,\n      color,\n      variant,\n      fullWidth,\n      children,\n      size,\n      leftSection,\n      rightSection,\n      radius,\n      gradient,\n      classNames,\n      styles,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"className\", \"color\", \"variant\", \"fullWidth\", \"children\", \"size\", \"leftSection\", \"rightSection\", \"radius\", \"gradient\", \"classNames\", \"styles\", \"unstyled\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    fullWidth,\n    color,\n    radius,\n    gradient\n  }, {\n    classNames,\n    styles,\n    name: \"Badge\",\n    unstyled,\n    variant,\n    size\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), leftSection && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.leftSection\n  }, leftSection), /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.inner\n  }, children), rightSection && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.rightSection\n  }, rightSection));\n});\n_Badge.displayName = \"@mantine/core/Badge\";\nconst Badge = createPolymorphicComponent(_Badge);\nexport { Badge, _Badge };","map":{"version":3,"sources":["../../src/Badge/Badge.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineSize,\n  MantineNumberSize,\n  MantineGradient,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n  Variants,\n} from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Box } from '../Box';\nimport useStyles, { BadgeStylesParams } from './Badge.styles';\n\nexport type BadgeStylesNames = Selectors<typeof useStyles>;\nexport type BadgeVariant = Variants<'light' | 'filled' | 'outline' | 'dot' | 'gradient'>;\n\nexport interface BadgeProps extends DefaultProps<BadgeStylesNames, BadgeStylesParams> {\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Controls appearance */\n  variant?: BadgeVariant;\n\n  /** Controls gradient, applied to gradient variant only */\n  gradient?: MantineGradient;\n\n  /** Badge height and font size */\n  size?: MantineSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, \"xl\" by default */\n  radius?: MantineNumberSize;\n\n  /** Sets badge width to 100% of parent element, hides overflow text with text-overflow: ellipsis */\n  fullWidth?: boolean;\n\n  /** Section rendered on the left side of label */\n  leftSection?: React.ReactNode;\n\n  /** Section rendered on the right side of label */\n  rightSection?: React.ReactNode;\n\n  /** Badge label */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<BadgeProps> = {\n  variant: 'light',\n  size: 'md',\n  radius: 'xl',\n};\n\nexport const _Badge = forwardRef<HTMLDivElement, BadgeProps>((props, ref) => {\n  const {\n    className,\n    color,\n    variant,\n    fullWidth,\n    children,\n    size,\n    leftSection,\n    rightSection,\n    radius,\n    gradient,\n    classNames,\n    styles,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Badge', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { fullWidth, color, radius, gradient },\n    { classNames, styles, name: 'Badge', unstyled, variant, size }\n  );\n\n  return (\n    <Box className={cx(classes.root, className)} ref={ref} {...others}>\n      {leftSection && <span className={classes.leftSection}>{leftSection}</span>}\n      <span className={classes.inner}>{children}</span>\n      {rightSection && <span className={classes.rightSection}>{rightSection}</span>}\n    </Box>\n  );\n});\n\n_Badge.displayName = '@mantine/core/Badge';\n\nexport const Badge = createPolymorphicComponent<'div', BadgeProps>(_Badge);\n"]},"metadata":{},"sourceType":"module"}