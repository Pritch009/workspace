{"ast":null,"code":"import { createStyles, getSize, rem } from '@mantine/styles';\nconst sizes = {\n  xs: rem(14),\n  sm: rem(18),\n  md: rem(20),\n  lg: rem(28),\n  xl: rem(32)\n};\nvar useStyles = createStyles((theme, _ref, _ref2) => {\n  let {\n    type,\n    color\n  } = _ref;\n  let {\n    size\n  } = _ref2;\n  const emptyColor = theme.colorScheme === \"light\" ? theme.colors.gray[3] : theme.colors.gray[8];\n  const fullColor = theme.fn.variant({\n    variant: \"filled\",\n    color,\n    primaryFallback: false\n  }).background;\n  return {\n    icon: {\n      stroke: type === \"empty\" ? emptyColor : fullColor,\n      fill: type === \"empty\" ? emptyColor : fullColor,\n      width: getSize({\n        size,\n        sizes\n      }),\n      height: getSize({\n        size,\n        sizes\n      })\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/Rating/StarSymbol/StarSymbol.styles.ts"],"names":[],"mappings":";AACA,MAAM,KAAK,GAAG;EACZ,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE;AACZ,CAAC;AACD,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAK,EAAA,IAAA,EAAA,KAAA,KAAgC;EAAA,IAA9B;IAAE,IAAI;IAAE;EAAK,CAAE,GAAA,IAAA;EAAA,IAAE;IAAE;EAAI,CAAE,GAAA,KAAA;EAC3D,MAAM,UAAU,GAAG,KAAK,CAAC,WAAW,KAAK,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9F,MAAM,SAAS,GAAG,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC;IACjC,OAAO,EAAE,QAAQ;IACjB,KAAK;IACL,eAAe,EAAE;EACrB,CAAG,CAAC,CAAC,UAAU;EACb,OAAO;IACL,IAAI,EAAE;MACJ,MAAM,EAAE,IAAI,KAAK,OAAO,GAAG,UAAU,GAAG,SAAS;MACjD,IAAI,EAAE,IAAI,KAAK,OAAO,GAAG,UAAU,GAAG,SAAS;MAC/C,KAAK,EAAE,OAAO,CAAC;QAAE,IAAI;QAAE;MAAK,CAAE,CAAC;MAC/B,MAAM,EAAE,OAAO,CAAC;QAAE,IAAI;QAAE;MAAK,CAAE;IACrC;EACA,CAAG;AACH,CAAC,CAAC","sourcesContent":["import { createStyles, MantineColor, rem, getSize } from '@mantine/styles';\n\nexport interface StarSymbolStylesParams {\n  type: 'empty' | 'full';\n  color: MantineColor;\n}\n\nconst sizes = {\n  xs: rem(14),\n  sm: rem(18),\n  md: rem(20),\n  lg: rem(28),\n  xl: rem(32),\n};\n\nexport default createStyles((theme, { type, color }: StarSymbolStylesParams, { size }) => {\n  const emptyColor = theme.colorScheme === 'light' ? theme.colors.gray[3] : theme.colors.gray[8];\n  const fullColor = theme.fn.variant({\n    variant: 'filled',\n    color,\n    primaryFallback: false,\n  }).background;\n\n  return {\n    icon: {\n      stroke: type === 'empty' ? emptyColor : fullColor,\n      fill: type === 'empty' ? emptyColor : fullColor,\n      width: getSize({ size, sizes }),\n      height: getSize({ size, sizes }),\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}