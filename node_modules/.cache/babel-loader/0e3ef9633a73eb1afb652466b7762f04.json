{"ast":null,"code":"import React, { forwardRef, cloneElement } from 'react';\nimport { isElement, createEventHandler } from '@mantine/utils';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useMenuContext } from '../Menu.context.js';\nimport { MENU_ERRORS } from '../Menu.errors.js';\nimport { Popover } from '../../Popover/Popover.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  refProp: \"ref\"\n};\nconst MenuTarget = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"MenuTarget\", defaultProps, props),\n    {\n      children,\n      refProp\n    } = _a,\n    others = __objRest(_a, [\"children\", \"refProp\"]);\n  if (!isElement(children)) {\n    throw new Error(MENU_ERRORS.children);\n  }\n  const ctx = useMenuContext();\n  const onClick = createEventHandler(children.props.onClick, () => ctx.trigger === \"click\" && ctx.toggleDropdown());\n  const onMouseEnter = createEventHandler(children.props.onMouseEnter, () => ctx.trigger === \"hover\" && ctx.openDropdown());\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, () => ctx.trigger === \"hover\" && ctx.closeDropdown());\n  return /* @__PURE__ */React.createElement(Popover.Target, __spreadValues({\n    refProp,\n    popupType: \"menu\",\n    ref\n  }, others), cloneElement(children, {\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    \"data-expanded\": ctx.opened ? true : void 0\n  }));\n});\nMenuTarget.displayName = \"@mantine/core/MenuTarget\";\nexport { MenuTarget };","map":{"version":3,"sources":["../../../src/Menu/MenuTarget/MenuTarget.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, forwardRef } from 'react';\nimport { isElement, createEventHandler } from '@mantine/utils';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useMenuContext } from '../Menu.context';\nimport { Popover } from '../../Popover';\nimport { MENU_ERRORS } from '../Menu.errors';\n\nexport interface MenuTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to get element ref */\n  refProp?: string;\n}\n\nconst defaultProps: Partial<MenuTargetProps> = {\n  refProp: 'ref',\n};\n\nexport const MenuTarget = forwardRef<HTMLElement, MenuTargetProps>((props, ref) => {\n  const { children, refProp, ...others } = useComponentDefaultProps(\n    'MenuTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(MENU_ERRORS.children);\n  }\n\n  const ctx = useMenuContext();\n\n  const onClick = createEventHandler(\n    children.props.onClick,\n    () => ctx.trigger === 'click' && ctx.toggleDropdown()\n  );\n\n  const onMouseEnter = createEventHandler(\n    children.props.onMouseEnter,\n    () => ctx.trigger === 'hover' && ctx.openDropdown()\n  );\n\n  const onMouseLeave = createEventHandler(\n    children.props.onMouseLeave,\n    () => ctx.trigger === 'hover' && ctx.closeDropdown()\n  );\n\n  return (\n    <Popover.Target refProp={refProp} popupType=\"menu\" ref={ref} {...others}>\n      {cloneElement(children, {\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        'data-expanded': ctx.opened ? true : undefined,\n      })}\n    </Popover.Target>\n  );\n});\n\nMenuTarget.displayName = '@mantine/core/MenuTarget';\n"]},"metadata":{},"sourceType":"module"}