{"ast":null,"code":"import React, { forwardRef, useState, useRef } from 'react';\nimport { useUncontrolled, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectItems } from '../Select/SelectItems/SelectItems.js';\nimport { DefaultItem } from '../Select/DefaultItem/DefaultItem.js';\nimport { SelectPopover } from '../Select/SelectPopover/SelectPopover.js';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea.js';\nimport { filterData } from './filter-data/filter-data.js';\nimport useStyles from './Autocomplete.styles.js';\nimport { useInputProps } from '../Input/use-input-props.js';\nimport { Input } from '../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction defaultFilter(value, item) {\n  return item.value.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\nconst defaultProps = {\n  required: false,\n  size: \"sm\",\n  shadow: \"sm\",\n  limit: 5,\n  itemComponent: DefaultItem,\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  initiallyOpened: false,\n  filter: defaultFilter,\n  switchDirectionOnFlip: false,\n  zIndex: getDefaultZIndex(\"popover\"),\n  dropdownPosition: \"flip\",\n  maxDropdownHeight: \"auto\",\n  positionDependencies: []\n};\nconst Autocomplete = forwardRef((props, ref) => {\n  const _a = useInputProps(\"Autocomplete\", defaultProps, props),\n    {\n      inputProps,\n      wrapperProps,\n      shadow,\n      data,\n      limit,\n      value,\n      defaultValue,\n      onChange,\n      unstyled,\n      itemComponent,\n      onItemSubmit,\n      onKeyDown,\n      onFocus,\n      onBlur,\n      onClick,\n      transitionProps,\n      initiallyOpened,\n      classNames,\n      styles,\n      filter,\n      nothingFound,\n      onDropdownClose,\n      onDropdownOpen,\n      withinPortal,\n      switchDirectionOnFlip,\n      zIndex,\n      dropdownPosition,\n      maxDropdownHeight,\n      dropdownComponent,\n      positionDependencies,\n      readOnly,\n      hoverOnSearchChange\n    } = _a,\n    others = __objRest(_a, [\"inputProps\", \"wrapperProps\", \"shadow\", \"data\", \"limit\", \"value\", \"defaultValue\", \"onChange\", \"unstyled\", \"itemComponent\", \"onItemSubmit\", \"onKeyDown\", \"onFocus\", \"onBlur\", \"onClick\", \"transitionProps\", \"initiallyOpened\", \"classNames\", \"styles\", \"filter\", \"nothingFound\", \"onDropdownClose\", \"onDropdownOpen\", \"withinPortal\", \"switchDirectionOnFlip\", \"zIndex\", \"dropdownPosition\", \"maxDropdownHeight\", \"dropdownComponent\", \"positionDependencies\", \"readOnly\", \"hoverOnSearchChange\"]);\n  const {\n    classes\n  } = useStyles(null, {\n    classNames,\n    styles,\n    name: \"Autocomplete\",\n    unstyled\n  });\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const [direction, setDirection] = useState(\"column\");\n  const inputRef = useRef(null);\n  const [IMEOpen, setIMEOpen] = useState(false);\n  const [_value, handleChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const setDropdownOpened = opened => {\n    _setDropdownOpened(opened);\n    const handler = opened ? onDropdownOpen : onDropdownClose;\n    typeof handler === \"function\" && handler();\n  };\n  useDidUpdate(() => {\n    if (hoverOnSearchChange && _value) {\n      setHovered(0);\n    } else {\n      setHovered(-1);\n    }\n  }, [_value, hoverOnSearchChange]);\n  const handleItemClick = item => {\n    handleChange(item.value);\n    typeof onItemSubmit === \"function\" && onItemSubmit(item);\n    setDropdownOpened(false);\n  };\n  const formattedData = data.map(item => typeof item === \"string\" ? {\n    value: item\n  } : item);\n  const filteredData = groupOptions({\n    data: filterData({\n      data: formattedData,\n      value: _value,\n      limit,\n      filter\n    })\n  });\n  const handleInputKeydown = event => {\n    if (IMEOpen) {\n      return;\n    }\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n    const isColumn = direction === \"column\";\n    const handleNext = () => {\n      setHovered(current => current < filteredData.length - 1 ? current + 1 : current);\n    };\n    const handlePrevious = () => {\n      setHovered(current => current > 0 ? current - 1 : current);\n    };\n    switch (event.key) {\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          isColumn ? handlePrevious() : handleNext();\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          isColumn ? handleNext() : handlePrevious();\n          break;\n        }\n      case \"Enter\":\n        {\n          if (filteredData[hovered] && dropdownOpened) {\n            event.preventDefault();\n            handleChange(filteredData[hovered].value);\n            typeof onItemSubmit === \"function\" && onItemSubmit(filteredData[hovered]);\n            setDropdownOpened(false);\n          }\n          break;\n        }\n      case \"Escape\":\n        {\n          if (dropdownOpened) {\n            event.preventDefault();\n            setDropdownOpened(false);\n          }\n        }\n    }\n  };\n  const handleInputFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n    setDropdownOpened(true);\n  };\n  const handleInputBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    setDropdownOpened(false);\n  };\n  const handleInputClick = event => {\n    typeof onClick === \"function\" && onClick(event);\n    setDropdownOpened(true);\n  };\n  const shouldRenderDropdown = dropdownOpened && (filteredData.length > 0 || filteredData.length === 0 && !!nothingFound);\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadProps(__spreadValues({}, wrapperProps), {\n    __staticSelector: \"Autocomplete\"\n  }), /* @__PURE__ */React.createElement(SelectPopover, {\n    opened: shouldRenderDropdown,\n    transitionProps,\n    shadow: \"sm\",\n    withinPortal,\n    __staticSelector: \"Autocomplete\",\n    onDirectionChange: setDirection,\n    switchDirectionOnFlip,\n    zIndex,\n    dropdownPosition,\n    positionDependencies,\n    classNames,\n    styles,\n    unstyled,\n    readOnly,\n    variant: inputProps.variant\n  }, /* @__PURE__ */React.createElement(SelectPopover.Target, null, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.wrapper,\n    \"aria-controls\": inputProps.id,\n    onMouseLeave: () => setHovered(-1),\n    tabIndex: -1\n  }, /* @__PURE__ */React.createElement(Input, __spreadProps(__spreadValues(__spreadValues({\n    type: \"search\",\n    autoComplete: \"off\"\n  }, inputProps), others), {\n    readOnly,\n    \"data-mantine-stop-propagation\": dropdownOpened,\n    ref: useMergedRef(ref, inputRef),\n    onKeyDown: handleInputKeydown,\n    classNames,\n    styles,\n    __staticSelector: \"Autocomplete\",\n    value: _value,\n    onChange: event => {\n      handleChange(event.currentTarget.value);\n      setDropdownOpened(true);\n    },\n    onFocus: handleInputFocus,\n    onBlur: handleInputBlur,\n    onClick: handleInputClick,\n    onCompositionStart: () => setIMEOpen(true),\n    onCompositionEnd: () => setIMEOpen(false),\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": shouldRenderDropdown ? `${inputProps.id}-items` : null,\n    \"aria-expanded\": shouldRenderDropdown,\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": shouldRenderDropdown ? `${inputProps.id}-items` : null,\n    \"aria-activedescendant\": hovered >= 0 ? `${inputProps.id}-${hovered}` : null\n  })))), /* @__PURE__ */React.createElement(SelectPopover.Dropdown, {\n    component: dropdownComponent || SelectScrollArea,\n    maxHeight: maxDropdownHeight,\n    direction,\n    id: inputProps.id,\n    __staticSelector: \"Autocomplete\",\n    classNames,\n    styles\n  }, /* @__PURE__ */React.createElement(SelectItems, {\n    data: filteredData,\n    hovered,\n    classNames,\n    styles,\n    uuid: inputProps.id,\n    __staticSelector: \"Autocomplete\",\n    onItemHover: setHovered,\n    onItemSelect: handleItemClick,\n    itemComponent,\n    size: inputProps.size,\n    nothingFound,\n    variant: inputProps.variant\n  }))));\n});\nAutocomplete.displayName = \"@mantine/core/Autocomplete\";\nexport { Autocomplete, defaultFilter };","map":{"version":3,"sources":["../../src/Autocomplete/Autocomplete.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, forwardRef, useRef } from 'react';\nimport { useUncontrolled, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { DefaultProps, getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { Input, InputWrapperBaseProps, InputSharedProps, useInputProps } from '../Input';\nimport { SelectStylesNames } from '../Select';\nimport { SelectItems } from '../Select/SelectItems/SelectItems';\nimport { DefaultItem } from '../Select/DefaultItem/DefaultItem';\nimport { SelectPopover } from '../Select/SelectPopover/SelectPopover';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea';\nimport { filterData } from './filter-data/filter-data';\nimport useStyles from './Autocomplete.styles';\nimport { SelectSharedProps } from '../Select/Select';\n\nexport type AutocompleteStylesNames = SelectStylesNames;\n\nexport interface AutocompleteItem {\n  value: string;\n  [key: string]: any;\n}\n\nexport interface AutocompleteProps\n  extends DefaultProps<AutocompleteStylesNames>,\n    InputSharedProps,\n    InputWrapperBaseProps,\n    SelectSharedProps<AutocompleteItem, string>,\n    Omit<React.ComponentPropsWithoutRef<'input'>, 'size' | 'onChange' | 'value' | 'defaultValue'> {\n  /** Maximum dropdown height */\n  maxDropdownHeight?: number | string;\n\n  /** Change dropdown component, can be used to add native scrollbars */\n  dropdownComponent?: any;\n\n  /** Called when item from dropdown was selected */\n  onItemSubmit?(item: AutocompleteItem): void;\n\n  /** Hovers the first result when input changes */\n  hoverOnSearchChange?: boolean;\n}\n\nexport function defaultFilter(value: string, item: AutocompleteItem) {\n  return item.value.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\n\nconst defaultProps: Partial<AutocompleteProps> = {\n  required: false,\n  size: 'sm',\n  shadow: 'sm',\n  limit: 5,\n  itemComponent: DefaultItem,\n  transitionProps: { transition: 'fade', duration: 0 },\n  initiallyOpened: false,\n  filter: defaultFilter,\n  switchDirectionOnFlip: false,\n  zIndex: getDefaultZIndex('popover'),\n  dropdownPosition: 'flip',\n  maxDropdownHeight: 'auto',\n  positionDependencies: [],\n};\n\nexport const Autocomplete = forwardRef<HTMLInputElement, AutocompleteProps>((props, ref) => {\n  const {\n    inputProps,\n    wrapperProps,\n    shadow,\n    data,\n    limit,\n    value,\n    defaultValue,\n    onChange,\n    unstyled,\n    itemComponent,\n    onItemSubmit,\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onClick,\n    transitionProps,\n    initiallyOpened,\n    classNames,\n    styles,\n    filter,\n    nothingFound,\n    onDropdownClose,\n    onDropdownOpen,\n    withinPortal,\n    switchDirectionOnFlip,\n    zIndex,\n    dropdownPosition,\n    maxDropdownHeight,\n    dropdownComponent,\n    positionDependencies,\n    readOnly,\n    hoverOnSearchChange,\n    ...others\n  } = useInputProps('Autocomplete', defaultProps, props);\n  const { classes } = useStyles(null, { classNames, styles, name: 'Autocomplete', unstyled });\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const [direction, setDirection] = useState<React.CSSProperties['flexDirection']>('column');\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [IMEOpen, setIMEOpen] = useState(false);\n  const [_value, handleChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const setDropdownOpened = (opened: boolean) => {\n    _setDropdownOpened(opened);\n    const handler = opened ? onDropdownOpen : onDropdownClose;\n    typeof handler === 'function' && handler();\n  };\n\n  useDidUpdate(() => {\n    if (hoverOnSearchChange && _value) {\n      setHovered(0);\n    } else {\n      setHovered(-1);\n    }\n  }, [_value, hoverOnSearchChange]);\n\n  const handleItemClick = (item: AutocompleteItem) => {\n    handleChange(item.value);\n    typeof onItemSubmit === 'function' && onItemSubmit(item);\n    setDropdownOpened(false);\n  };\n\n  const formattedData = data.map((item) => (typeof item === 'string' ? { value: item } : item));\n  const filteredData = groupOptions({\n    data: filterData({ data: formattedData, value: _value, limit, filter }),\n  });\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (IMEOpen) {\n      return;\n    }\n\n    typeof onKeyDown === 'function' && onKeyDown(event);\n\n    const isColumn = direction === 'column';\n\n    const handleNext = () => {\n      setHovered((current) => (current < filteredData.length - 1 ? current + 1 : current));\n    };\n\n    const handlePrevious = () => {\n      setHovered((current) => (current > 0 ? current - 1 : current));\n    };\n\n    switch (event.key) {\n      case 'ArrowUp': {\n        event.preventDefault();\n        isColumn ? handlePrevious() : handleNext();\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n        isColumn ? handleNext() : handlePrevious();\n        break;\n      }\n\n      case 'Enter': {\n        if (filteredData[hovered] && dropdownOpened) {\n          event.preventDefault();\n          handleChange(filteredData[hovered].value);\n          typeof onItemSubmit === 'function' && onItemSubmit(filteredData[hovered]);\n          setDropdownOpened(false);\n        }\n        break;\n      }\n\n      case 'Escape': {\n        if (dropdownOpened) {\n          event.preventDefault();\n          setDropdownOpened(false);\n        }\n      }\n    }\n  };\n\n  const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onFocus === 'function' && onFocus(event);\n    setDropdownOpened(true);\n  };\n\n  const handleInputBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    setDropdownOpened(false);\n  };\n\n  const handleInputClick = (event: React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n    typeof onClick === 'function' && onClick(event);\n    setDropdownOpened(true);\n  };\n\n  const shouldRenderDropdown =\n    dropdownOpened && (filteredData.length > 0 || (filteredData.length === 0 && !!nothingFound));\n\n  return (\n    <Input.Wrapper {...wrapperProps} __staticSelector=\"Autocomplete\">\n      <SelectPopover\n        opened={shouldRenderDropdown}\n        transitionProps={transitionProps}\n        shadow=\"sm\"\n        withinPortal={withinPortal}\n        __staticSelector=\"Autocomplete\"\n        onDirectionChange={setDirection}\n        switchDirectionOnFlip={switchDirectionOnFlip}\n        zIndex={zIndex}\n        dropdownPosition={dropdownPosition}\n        positionDependencies={positionDependencies}\n        classNames={classNames}\n        styles={styles}\n        unstyled={unstyled}\n        readOnly={readOnly}\n        variant={inputProps.variant}\n      >\n        <SelectPopover.Target>\n          <div\n            className={classes.wrapper}\n            aria-controls={inputProps.id}\n            onMouseLeave={() => setHovered(-1)}\n            tabIndex={-1}\n          >\n            <Input<'input'>\n              type=\"search\"\n              autoComplete=\"off\"\n              {...inputProps}\n              {...others}\n              readOnly={readOnly}\n              data-mantine-stop-propagation={dropdownOpened}\n              ref={useMergedRef(ref, inputRef)}\n              onKeyDown={handleInputKeydown}\n              classNames={classNames}\n              styles={styles}\n              __staticSelector=\"Autocomplete\"\n              value={_value}\n              onChange={(event) => {\n                handleChange(event.currentTarget.value);\n                setDropdownOpened(true);\n              }}\n              onFocus={handleInputFocus}\n              onBlur={handleInputBlur}\n              onClick={handleInputClick}\n              onCompositionStart={() => setIMEOpen(true)}\n              onCompositionEnd={() => setIMEOpen(false)}\n              role=\"combobox\"\n              aria-haspopup=\"listbox\"\n              aria-owns={shouldRenderDropdown ? `${inputProps.id}-items` : null}\n              aria-expanded={shouldRenderDropdown}\n              aria-autocomplete=\"list\"\n              aria-controls={shouldRenderDropdown ? `${inputProps.id}-items` : null}\n              aria-activedescendant={hovered >= 0 ? `${inputProps.id}-${hovered}` : null}\n            />\n          </div>\n        </SelectPopover.Target>\n\n        <SelectPopover.Dropdown\n          component={dropdownComponent || SelectScrollArea}\n          maxHeight={maxDropdownHeight}\n          direction={direction}\n          id={inputProps.id}\n          __staticSelector=\"Autocomplete\"\n          classNames={classNames}\n          styles={styles}\n        >\n          <SelectItems\n            data={filteredData}\n            hovered={hovered}\n            classNames={classNames}\n            styles={styles}\n            uuid={inputProps.id}\n            __staticSelector=\"Autocomplete\"\n            onItemHover={setHovered}\n            onItemSelect={handleItemClick}\n            itemComponent={itemComponent}\n            size={inputProps.size}\n            nothingFound={nothingFound}\n            variant={inputProps.variant}\n          />\n        </SelectPopover.Dropdown>\n      </SelectPopover>\n    </Input.Wrapper>\n  );\n});\n\nAutocomplete.displayName = '@mantine/core/Autocomplete';\n"]},"metadata":{},"sourceType":"module"}