{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useScrollIntoView, useUncontrolled, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from './SelectScrollArea/SelectScrollArea.js';\nimport { DefaultItem } from './DefaultItem/DefaultItem.js';\nimport { getSelectRightSectionProps } from './SelectRightSection/get-select-right-section-props.js';\nimport { SelectItems } from './SelectItems/SelectItems.js';\nimport { SelectPopover } from './SelectPopover/SelectPopover.js';\nimport { filterData } from './filter-data/filter-data.js';\nimport useStyles from './Select.styles.js';\nimport { useInputProps } from '../Input/use-input-props.js';\nimport { Input } from '../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction defaultFilter(value, item) {\n  return item.label.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\nfunction defaultShouldCreate(query, data) {\n  return !!query && !data.some(item => item.label.toLowerCase() === query.toLowerCase());\n}\nconst defaultProps = {\n  required: false,\n  size: \"sm\",\n  shadow: \"sm\",\n  itemComponent: DefaultItem,\n  transitionProps: {\n    transition: \"fade\",\n    duration: 0\n  },\n  initiallyOpened: false,\n  filter: defaultFilter,\n  maxDropdownHeight: 220,\n  searchable: false,\n  clearable: false,\n  limit: Infinity,\n  disabled: false,\n  creatable: false,\n  shouldCreate: defaultShouldCreate,\n  selectOnBlur: false,\n  switchDirectionOnFlip: false,\n  filterDataOnExactSearchMatch: false,\n  zIndex: getDefaultZIndex(\"popover\"),\n  positionDependencies: [],\n  dropdownPosition: \"flip\"\n};\nconst Select = forwardRef((props, ref) => {\n  const _a = useInputProps(\"Select\", defaultProps, props),\n    {\n      inputProps,\n      wrapperProps,\n      shadow,\n      data,\n      value,\n      defaultValue,\n      onChange,\n      itemComponent,\n      onKeyDown,\n      onBlur,\n      onFocus,\n      transitionProps,\n      initiallyOpened,\n      unstyled,\n      classNames,\n      styles,\n      filter,\n      maxDropdownHeight,\n      searchable,\n      clearable,\n      nothingFound,\n      limit,\n      disabled,\n      onSearchChange,\n      searchValue,\n      rightSection,\n      rightSectionWidth,\n      creatable,\n      getCreateLabel,\n      shouldCreate,\n      selectOnBlur,\n      onCreate,\n      dropdownComponent,\n      onDropdownClose,\n      onDropdownOpen,\n      withinPortal,\n      portalProps,\n      switchDirectionOnFlip,\n      zIndex,\n      name,\n      dropdownPosition,\n      allowDeselect,\n      placeholder,\n      filterDataOnExactSearchMatch,\n      form,\n      positionDependencies,\n      readOnly,\n      clearButtonProps,\n      hoverOnSearchChange\n    } = _a,\n    others = __objRest(_a, [\"inputProps\", \"wrapperProps\", \"shadow\", \"data\", \"value\", \"defaultValue\", \"onChange\", \"itemComponent\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"transitionProps\", \"initiallyOpened\", \"unstyled\", \"classNames\", \"styles\", \"filter\", \"maxDropdownHeight\", \"searchable\", \"clearable\", \"nothingFound\", \"limit\", \"disabled\", \"onSearchChange\", \"searchValue\", \"rightSection\", \"rightSectionWidth\", \"creatable\", \"getCreateLabel\", \"shouldCreate\", \"selectOnBlur\", \"onCreate\", \"dropdownComponent\", \"onDropdownClose\", \"onDropdownOpen\", \"withinPortal\", \"portalProps\", \"switchDirectionOnFlip\", \"zIndex\", \"name\", \"dropdownPosition\", \"allowDeselect\", \"placeholder\", \"filterDataOnExactSearchMatch\", \"form\", \"positionDependencies\", \"readOnly\", \"clearButtonProps\", \"hoverOnSearchChange\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles();\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const inputRef = useRef();\n  const itemsRefs = useRef({});\n  const [direction, setDirection] = useState(\"column\");\n  const isColumn = direction === \"column\";\n  const {\n    scrollIntoView,\n    targetRef,\n    scrollableRef\n  } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true\n  });\n  const isDeselectable = allowDeselect === void 0 ? clearable : allowDeselect;\n  const setDropdownOpened = opened => {\n    if (dropdownOpened !== opened) {\n      _setDropdownOpened(opened);\n      const handler = opened ? onDropdownOpen : onDropdownClose;\n      typeof handler === \"function\" && handler();\n    }\n  };\n  const isCreatable = creatable && typeof getCreateLabel === \"function\";\n  let createLabel = null;\n  const formattedData = data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n  const sortedData = groupOptions({\n    data: formattedData\n  });\n  const [_value, handleChange, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange\n  });\n  const selectedValue = sortedData.find(item => item.value === _value);\n  const [inputValue, setInputValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: (selectedValue == null ? void 0 : selectedValue.label) || \"\",\n    finalValue: void 0,\n    onChange: onSearchChange\n  });\n  const handleSearchChange = val => {\n    setInputValue(val);\n    if (searchable && typeof onSearchChange === \"function\") {\n      onSearchChange(val);\n    }\n  };\n  const handleClear = () => {\n    var _a2;\n    if (!readOnly) {\n      handleChange(null);\n      if (!controlled) {\n        handleSearchChange(\"\");\n      }\n      (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n    }\n  };\n  useEffect(() => {\n    const newSelectedValue = sortedData.find(item => item.value === _value);\n    if (newSelectedValue) {\n      handleSearchChange(newSelectedValue.label);\n    } else if (!isCreatable || !_value) {\n      handleSearchChange(\"\");\n    }\n  }, [_value]);\n  useEffect(() => {\n    if (selectedValue && (!searchable || !dropdownOpened)) {\n      handleSearchChange(selectedValue.label);\n    }\n  }, [selectedValue == null ? void 0 : selectedValue.label]);\n  const handleItemSelect = item => {\n    if (!readOnly) {\n      if (isDeselectable && (selectedValue == null ? void 0 : selectedValue.value) === item.value) {\n        handleChange(null);\n        setDropdownOpened(false);\n      } else {\n        if (item.creatable && typeof onCreate === \"function\") {\n          const createdItem = onCreate(item.value);\n          if (typeof createdItem !== \"undefined\" && createdItem !== null) {\n            if (typeof createdItem === \"string\") {\n              handleChange(createdItem);\n            } else {\n              handleChange(createdItem.value);\n            }\n          }\n        } else {\n          handleChange(item.value);\n        }\n        if (!controlled) {\n          handleSearchChange(item.label);\n        }\n        setHovered(-1);\n        setDropdownOpened(false);\n        inputRef.current.focus();\n      }\n    }\n  };\n  const filteredData = filterData({\n    data: sortedData,\n    searchable,\n    limit,\n    searchValue: inputValue,\n    filter,\n    filterDataOnExactSearchMatch,\n    value: _value\n  });\n  if (isCreatable && shouldCreate(inputValue, filteredData)) {\n    createLabel = getCreateLabel(inputValue);\n    filteredData.push({\n      label: inputValue,\n      value: inputValue,\n      creatable: true\n    });\n  }\n  const getNextIndex = (index, nextItem, compareFn) => {\n    let i = index;\n    while (compareFn(i)) {\n      i = nextItem(i);\n      if (!filteredData[i].disabled) return i;\n    }\n    return index;\n  };\n  useDidUpdate(() => {\n    if (hoverOnSearchChange && inputValue) {\n      setHovered(0);\n    } else {\n      setHovered(-1);\n    }\n  }, [inputValue, hoverOnSearchChange]);\n  const selectedItemIndex = _value ? filteredData.findIndex(el => el.value === _value) : 0;\n  const shouldShowDropdown = !readOnly && (filteredData.length > 0 ? dropdownOpened : dropdownOpened && !!nothingFound);\n  const handlePrevious = () => {\n    setHovered(current => {\n      var _a2;\n      const nextIndex = getNextIndex(current, index => index - 1, index => index > 0);\n      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];\n      shouldShowDropdown && scrollIntoView({\n        alignment: isColumn ? \"start\" : \"end\"\n      });\n      return nextIndex;\n    });\n  };\n  const handleNext = () => {\n    setHovered(current => {\n      var _a2;\n      const nextIndex = getNextIndex(current, index => index + 1, index => index < filteredData.length - 1);\n      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];\n      shouldShowDropdown && scrollIntoView({\n        alignment: isColumn ? \"end\" : \"start\"\n      });\n      return nextIndex;\n    });\n  };\n  const scrollSelectedItemIntoView = () => window.setTimeout(() => {\n    var _a2;\n    targetRef.current = itemsRefs.current[(_a2 = filteredData[selectedItemIndex]) == null ? void 0 : _a2.value];\n    scrollIntoView({\n      alignment: isColumn ? \"end\" : \"start\"\n    });\n  }, 50);\n  useDidUpdate(() => {\n    if (shouldShowDropdown) scrollSelectedItemIntoView();\n  }, [shouldShowDropdown]);\n  const handleInputKeydown = event => {\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n    switch (event.key) {\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          if (!dropdownOpened) {\n            setHovered(selectedItemIndex);\n            setDropdownOpened(true);\n            scrollSelectedItemIntoView();\n          } else {\n            isColumn ? handlePrevious() : handleNext();\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          if (!dropdownOpened) {\n            setHovered(selectedItemIndex);\n            setDropdownOpened(true);\n            scrollSelectedItemIntoView();\n          } else {\n            isColumn ? handleNext() : handlePrevious();\n          }\n          break;\n        }\n      case \"Home\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n            if (!dropdownOpened) {\n              setDropdownOpened(true);\n            }\n            const firstItemIndex = filteredData.findIndex(item => !item.disabled);\n            setHovered(firstItemIndex);\n            shouldShowDropdown && scrollIntoView({\n              alignment: isColumn ? \"end\" : \"start\"\n            });\n          }\n          break;\n        }\n      case \"End\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n            if (!dropdownOpened) {\n              setDropdownOpened(true);\n            }\n            const lastItemIndex = filteredData.map(item => !!item.disabled).lastIndexOf(false);\n            setHovered(lastItemIndex);\n            shouldShowDropdown && scrollIntoView({\n              alignment: isColumn ? \"end\" : \"start\"\n            });\n          }\n          break;\n        }\n      case \"Escape\":\n        {\n          event.preventDefault();\n          setDropdownOpened(false);\n          setHovered(-1);\n          break;\n        }\n      case \" \":\n        {\n          if (!searchable) {\n            event.preventDefault();\n            if (filteredData[hovered] && dropdownOpened) {\n              handleItemSelect(filteredData[hovered]);\n            } else {\n              setDropdownOpened(true);\n              setHovered(selectedItemIndex);\n              scrollSelectedItemIntoView();\n            }\n          }\n          break;\n        }\n      case \"Enter\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n          }\n          if (filteredData[hovered] && dropdownOpened) {\n            event.preventDefault();\n            handleItemSelect(filteredData[hovered]);\n          }\n        }\n    }\n  };\n  const handleInputBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    const selected = sortedData.find(item => item.value === _value);\n    if (selectOnBlur && filteredData[hovered] && dropdownOpened) {\n      handleItemSelect(filteredData[hovered]);\n    }\n    handleSearchChange((selected == null ? void 0 : selected.label) || \"\");\n    setDropdownOpened(false);\n  };\n  const handleInputFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n    if (searchable) {\n      setDropdownOpened(true);\n    }\n  };\n  const handleInputChange = event => {\n    if (!readOnly) {\n      handleSearchChange(event.currentTarget.value);\n      if (clearable && event.currentTarget.value === \"\") {\n        handleChange(null);\n      }\n      setHovered(-1);\n      setDropdownOpened(true);\n    }\n  };\n  const handleInputClick = () => {\n    if (!readOnly) {\n      setDropdownOpened(!dropdownOpened);\n      if (_value && !dropdownOpened) {\n        setHovered(selectedItemIndex);\n      }\n    }\n  };\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadProps(__spreadValues({}, wrapperProps), {\n    __staticSelector: \"Select\"\n  }), /* @__PURE__ */React.createElement(SelectPopover, {\n    opened: shouldShowDropdown,\n    transitionProps,\n    shadow,\n    withinPortal,\n    portalProps,\n    __staticSelector: \"Select\",\n    onDirectionChange: setDirection,\n    switchDirectionOnFlip,\n    zIndex,\n    dropdownPosition,\n    positionDependencies: [...positionDependencies, inputValue],\n    classNames,\n    styles,\n    unstyled,\n    variant: inputProps.variant\n  }, /* @__PURE__ */React.createElement(SelectPopover.Target, null, /* @__PURE__ */React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": shouldShowDropdown ? `${inputProps.id}-items` : null,\n    \"aria-controls\": inputProps.id,\n    \"aria-expanded\": shouldShowDropdown,\n    onMouseLeave: () => setHovered(-1),\n    tabIndex: -1\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name,\n    value: _value || \"\",\n    form,\n    disabled\n  }), /* @__PURE__ */React.createElement(Input, __spreadValues(__spreadProps(__spreadValues(__spreadValues({\n    autoComplete: \"off\",\n    type: \"search\"\n  }, inputProps), others), {\n    ref: useMergedRef(ref, inputRef),\n    onKeyDown: handleInputKeydown,\n    __staticSelector: \"Select\",\n    value: inputValue,\n    placeholder,\n    onChange: handleInputChange,\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": shouldShowDropdown ? `${inputProps.id}-items` : null,\n    \"aria-activedescendant\": hovered >= 0 ? `${inputProps.id}-${hovered}` : null,\n    onMouseDown: handleInputClick,\n    onBlur: handleInputBlur,\n    onFocus: handleInputFocus,\n    readOnly: !searchable || readOnly,\n    disabled,\n    \"data-mantine-stop-propagation\": shouldShowDropdown,\n    name: null,\n    classNames: __spreadProps(__spreadValues({}, classNames), {\n      input: cx({\n        [classes.input]: !searchable\n      }, classNames == null ? void 0 : classNames.input)\n    })\n  }), getSelectRightSectionProps({\n    theme,\n    rightSection,\n    rightSectionWidth,\n    styles,\n    size: inputProps.size,\n    shouldClear: clearable && !!selectedValue,\n    onClear: handleClear,\n    error: wrapperProps.error,\n    clearButtonProps,\n    disabled,\n    readOnly\n  }))))), /* @__PURE__ */React.createElement(SelectPopover.Dropdown, {\n    component: dropdownComponent || SelectScrollArea,\n    maxHeight: maxDropdownHeight,\n    direction,\n    id: inputProps.id,\n    innerRef: scrollableRef,\n    __staticSelector: \"Select\",\n    classNames,\n    styles\n  }, /* @__PURE__ */React.createElement(SelectItems, {\n    data: filteredData,\n    hovered,\n    classNames,\n    styles,\n    isItemSelected: val => val === _value,\n    uuid: inputProps.id,\n    __staticSelector: \"Select\",\n    onItemHover: setHovered,\n    onItemSelect: handleItemSelect,\n    itemsRefs,\n    itemComponent,\n    size: inputProps.size,\n    nothingFound,\n    creatable: isCreatable && !!createLabel,\n    createLabel,\n    \"aria-label\": wrapperProps.label,\n    unstyled,\n    variant: inputProps.variant\n  }))));\n});\nSelect.displayName = \"@mantine/core/Select\";\nexport { Select, defaultFilter, defaultShouldCreate };","map":{"version":3,"sources":["../../src/Select/Select.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useUncontrolled, useMergedRef, useDidUpdate, useScrollIntoView } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, MantineShadow, getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from './SelectScrollArea/SelectScrollArea';\nimport { PortalProps } from '../Portal';\nimport { Input, useInputProps } from '../Input';\nimport { TransitionOverride } from '../Transition';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { getSelectRightSectionProps } from './SelectRightSection/get-select-right-section-props';\nimport { SelectItems } from './SelectItems/SelectItems';\nimport { SelectPopover } from './SelectPopover/SelectPopover';\nimport { SelectItem, BaseSelectStylesNames, BaseSelectProps } from './types';\nimport { filterData } from './filter-data/filter-data';\nimport useStyles from './Select.styles';\n\nexport interface SelectSharedProps<Item, Value> {\n  /** Select data used to render items in dropdown */\n  data: ReadonlyArray<string | Item>;\n\n  /** Controlled input value */\n  value?: Value;\n\n  /** Uncontrolled input defaultValue */\n  defaultValue?: Value;\n\n  /** Controlled input onChange handler */\n  onChange?(value: Value): void;\n\n  /** Function based on which items in dropdown are filtered */\n  filter?(value: string, item: Item): boolean;\n\n  /** Input size */\n  size?: MantineSize;\n\n  /** Props added to Transition component that used to animate dropdown presence, use to configure duration and animation type, { duration: 0, transition: 'fade' } by default */\n  transitionProps?: TransitionOverride;\n\n  /** Dropdown shadow from theme or any value to set box-shadow */\n  shadow?: MantineShadow;\n\n  /** Initial dropdown opened state */\n  initiallyOpened?: boolean;\n\n  /** Change item renderer */\n  itemComponent?: React.FC<any>;\n\n  /** Called when dropdown is opened */\n  onDropdownOpen?(): void;\n\n  /** Called when dropdown is closed */\n  onDropdownClose?(): void;\n\n  /** Whether to render the dropdown in a Portal */\n  withinPortal?: boolean;\n\n  /** Props to pass down to the portal when withinPortal is true */\n  portalProps?: Omit<PortalProps, 'children' | 'withinPortal'>;\n\n  /** Limit amount of items displayed at a time for searchable select */\n  limit?: number;\n\n  /** Nothing found label */\n  nothingFound?: React.ReactNode;\n\n  /** Dropdown z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Dropdown positioning behavior */\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n\n  /** Whether to switch item order and keyboard navigation on dropdown position flip */\n  switchDirectionOnFlip?: boolean;\n\n  /** useEffect dependencies to force update dropdown position */\n  positionDependencies?: any[];\n}\n\nexport interface SelectProps\n  extends DefaultProps<BaseSelectStylesNames>,\n    BaseSelectProps,\n    SelectSharedProps<SelectItem, string | null> {\n  /** Maximum dropdown height */\n  maxDropdownHeight?: number;\n\n  /** Set to true to enable search */\n  searchable?: boolean;\n\n  /** Allow to clear item */\n  clearable?: boolean;\n\n  /** Called each time search value changes */\n  onSearchChange?(query: string): void;\n\n  /** Controlled search input value */\n  searchValue?: string;\n\n  /** Hovers the first result when search query changes */\n  hoverOnSearchChange?: boolean;\n\n  /** Allow creatable option  */\n  creatable?: boolean;\n\n  /** Function to get create Label */\n  getCreateLabel?(query: string): React.ReactNode;\n\n  /** Function to determine if create label should be displayed */\n  shouldCreate?(query: string, data: SelectItem[]): boolean;\n\n  /** Called when create option is selected */\n  onCreate?(query: string): SelectItem | string | null | undefined;\n\n  /** Change dropdown component, can be used to add native scrollbars */\n  dropdownComponent?: any;\n\n  /** Select highlighted item on blur */\n  selectOnBlur?: boolean;\n\n  /** Allow deselecting items on click */\n  allowDeselect?: boolean;\n\n  /** Should data be filtered when search value exactly matches selected item */\n  filterDataOnExactSearchMatch?: boolean;\n\n  /** Props added to clear button */\n  clearButtonProps?: React.ComponentPropsWithoutRef<'button'>;\n}\n\nexport function defaultFilter(value: string, item: SelectItem) {\n  return item.label.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\n\nexport function defaultShouldCreate(query: string, data: SelectItem[]) {\n  return !!query && !data.some((item) => item.label.toLowerCase() === query.toLowerCase());\n}\n\nconst defaultProps: Partial<SelectProps> = {\n  required: false,\n  size: 'sm',\n  shadow: 'sm',\n  itemComponent: DefaultItem,\n  transitionProps: { transition: 'fade', duration: 0 },\n  initiallyOpened: false,\n  filter: defaultFilter,\n  maxDropdownHeight: 220,\n  searchable: false,\n  clearable: false,\n  limit: Infinity,\n  disabled: false,\n  creatable: false,\n  shouldCreate: defaultShouldCreate,\n  selectOnBlur: false,\n  switchDirectionOnFlip: false,\n  filterDataOnExactSearchMatch: false,\n  zIndex: getDefaultZIndex('popover'),\n  positionDependencies: [],\n  dropdownPosition: 'flip',\n};\n\nexport const Select = forwardRef<HTMLInputElement, SelectProps>((props, ref) => {\n  const {\n    inputProps,\n    wrapperProps,\n    shadow,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    itemComponent,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    transitionProps,\n    initiallyOpened,\n    unstyled,\n    classNames,\n    styles,\n    filter,\n    maxDropdownHeight,\n    searchable,\n    clearable,\n    nothingFound,\n    limit,\n    disabled,\n    onSearchChange,\n    searchValue,\n    rightSection,\n    rightSectionWidth,\n    creatable,\n    getCreateLabel,\n    shouldCreate,\n    selectOnBlur,\n    onCreate,\n    dropdownComponent,\n    onDropdownClose,\n    onDropdownOpen,\n    withinPortal,\n    portalProps,\n    switchDirectionOnFlip,\n    zIndex,\n    name,\n    dropdownPosition,\n    allowDeselect,\n    placeholder,\n    filterDataOnExactSearchMatch,\n    form,\n    positionDependencies,\n    readOnly,\n    clearButtonProps,\n    hoverOnSearchChange,\n    ...others\n  } = useInputProps('Select', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles();\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const inputRef = useRef<HTMLInputElement>();\n  const itemsRefs = useRef<Record<string, HTMLDivElement>>({});\n  const [direction, setDirection] = useState<React.CSSProperties['flexDirection']>('column');\n  const isColumn = direction === 'column';\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  const isDeselectable = allowDeselect === undefined ? clearable : allowDeselect;\n\n  const setDropdownOpened = (opened: boolean) => {\n    if (dropdownOpened !== opened) {\n      _setDropdownOpened(opened);\n      const handler = opened ? onDropdownOpen : onDropdownClose;\n      typeof handler === 'function' && handler();\n    }\n  };\n\n  const isCreatable = creatable && typeof getCreateLabel === 'function';\n  let createLabel = null;\n\n  const formattedData = data.map((item) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const sortedData = groupOptions({ data: formattedData });\n\n  const [_value, handleChange, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const selectedValue = sortedData.find((item) => item.value === _value);\n\n  const [inputValue, setInputValue] = useUncontrolled({\n    value: searchValue,\n    defaultValue: selectedValue?.label || '',\n    finalValue: undefined,\n    onChange: onSearchChange,\n  });\n\n  const handleSearchChange = (val: string) => {\n    setInputValue(val);\n    if (searchable && typeof onSearchChange === 'function') {\n      onSearchChange(val);\n    }\n  };\n\n  const handleClear = () => {\n    if (!readOnly) {\n      handleChange(null);\n      if (!controlled) {\n        handleSearchChange('');\n      }\n      inputRef.current?.focus();\n    }\n  };\n\n  useEffect(() => {\n    const newSelectedValue = sortedData.find((item) => item.value === _value);\n\n    if (newSelectedValue) {\n      handleSearchChange(newSelectedValue.label);\n    } else if (!isCreatable || !_value) {\n      handleSearchChange('');\n    }\n  }, [_value]);\n\n  useEffect(() => {\n    if (selectedValue && (!searchable || !dropdownOpened)) {\n      handleSearchChange(selectedValue.label);\n    }\n  }, [selectedValue?.label]);\n\n  const handleItemSelect = (item: SelectItem) => {\n    if (!readOnly) {\n      if (isDeselectable && selectedValue?.value === item.value) {\n        handleChange(null);\n        setDropdownOpened(false);\n      } else {\n        if (item.creatable && typeof onCreate === 'function') {\n          const createdItem = onCreate(item.value);\n          if (typeof createdItem !== 'undefined' && createdItem !== null) {\n            if (typeof createdItem === 'string') {\n              handleChange(createdItem);\n            } else {\n              handleChange(createdItem.value);\n            }\n          }\n        } else {\n          handleChange(item.value);\n        }\n\n        if (!controlled) {\n          handleSearchChange(item.label);\n        }\n\n        setHovered(-1);\n        setDropdownOpened(false);\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  const filteredData = filterData({\n    data: sortedData,\n    searchable,\n    limit,\n    searchValue: inputValue,\n    filter,\n    filterDataOnExactSearchMatch,\n    value: _value,\n  });\n\n  if (isCreatable && shouldCreate(inputValue, filteredData)) {\n    createLabel = getCreateLabel(inputValue);\n    filteredData.push({ label: inputValue, value: inputValue, creatable: true });\n  }\n\n  const getNextIndex = (\n    index: number,\n    nextItem: (index: number) => number,\n    compareFn: (index: number) => boolean\n  ) => {\n    let i = index;\n    while (compareFn(i)) {\n      i = nextItem(i);\n      if (!filteredData[i].disabled) return i;\n    }\n    return index;\n  };\n\n  useDidUpdate(() => {\n    if (hoverOnSearchChange && inputValue) {\n      setHovered(0);\n    } else {\n      setHovered(-1);\n    }\n  }, [inputValue, hoverOnSearchChange]);\n\n  const selectedItemIndex = _value ? filteredData.findIndex((el) => el.value === _value) : 0;\n\n  const shouldShowDropdown =\n    !readOnly && (filteredData.length > 0 ? dropdownOpened : dropdownOpened && !!nothingFound);\n\n  const handlePrevious = () => {\n    setHovered((current) => {\n      const nextIndex = getNextIndex(\n        current,\n        (index) => index - 1,\n        (index) => index > 0\n      );\n\n      targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n      shouldShowDropdown && scrollIntoView({ alignment: isColumn ? 'start' : 'end' });\n      return nextIndex;\n    });\n  };\n\n  const handleNext = () => {\n    setHovered((current) => {\n      const nextIndex = getNextIndex(\n        current,\n        (index) => index + 1,\n        (index) => index < filteredData.length - 1\n      );\n\n      targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n      shouldShowDropdown && scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n      return nextIndex;\n    });\n  };\n\n  const scrollSelectedItemIntoView = () =>\n    window.setTimeout(() => {\n      targetRef.current = itemsRefs.current[filteredData[selectedItemIndex]?.value];\n      scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n    }, 50);\n\n  useDidUpdate(() => {\n    if (shouldShowDropdown) scrollSelectedItemIntoView();\n  }, [shouldShowDropdown]);\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyDown === 'function' && onKeyDown(event);\n    switch (event.key) {\n      case 'ArrowUp': {\n        event.preventDefault();\n\n        if (!dropdownOpened) {\n          setHovered(selectedItemIndex);\n          setDropdownOpened(true);\n          scrollSelectedItemIntoView();\n        } else {\n          isColumn ? handlePrevious() : handleNext();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n\n        if (!dropdownOpened) {\n          setHovered(selectedItemIndex);\n          setDropdownOpened(true);\n          scrollSelectedItemIntoView();\n        } else {\n          isColumn ? handleNext() : handlePrevious();\n        }\n\n        break;\n      }\n\n      case 'Home': {\n        if (!searchable) {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setDropdownOpened(true);\n          }\n\n          const firstItemIndex = filteredData.findIndex((item) => !item.disabled);\n          setHovered(firstItemIndex);\n          shouldShowDropdown && scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n        }\n        break;\n      }\n\n      case 'End': {\n        if (!searchable) {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setDropdownOpened(true);\n          }\n\n          const lastItemIndex = filteredData.map((item) => !!item.disabled).lastIndexOf(false);\n          setHovered(lastItemIndex);\n          shouldShowDropdown && scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n        }\n        break;\n      }\n\n      case 'Escape': {\n        event.preventDefault();\n        setDropdownOpened(false);\n        setHovered(-1);\n        break;\n      }\n\n      case ' ': {\n        if (!searchable) {\n          event.preventDefault();\n          if (filteredData[hovered] && dropdownOpened) {\n            handleItemSelect(filteredData[hovered]);\n          } else {\n            setDropdownOpened(true);\n            setHovered(selectedItemIndex);\n            scrollSelectedItemIntoView();\n          }\n        }\n\n        break;\n      }\n\n      case 'Enter': {\n        if (!searchable) {\n          event.preventDefault();\n        }\n\n        if (filteredData[hovered] && dropdownOpened) {\n          event.preventDefault();\n          handleItemSelect(filteredData[hovered]);\n        }\n      }\n    }\n  };\n\n  const handleInputBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    const selected = sortedData.find((item) => item.value === _value);\n    if (selectOnBlur && filteredData[hovered] && dropdownOpened) {\n      handleItemSelect(filteredData[hovered]);\n    }\n    handleSearchChange(selected?.label || '');\n    setDropdownOpened(false);\n  };\n\n  const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onFocus === 'function' && onFocus(event);\n    if (searchable) {\n      setDropdownOpened(true);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!readOnly) {\n      handleSearchChange(event.currentTarget.value);\n\n      if (clearable && event.currentTarget.value === '') {\n        handleChange(null);\n      }\n\n      setHovered(-1);\n      setDropdownOpened(true);\n    }\n  };\n\n  const handleInputClick = () => {\n    if (!readOnly) {\n      setDropdownOpened(!dropdownOpened);\n\n      if (_value && !dropdownOpened) {\n        setHovered(selectedItemIndex);\n      }\n    }\n  };\n\n  return (\n    <Input.Wrapper {...wrapperProps} __staticSelector=\"Select\">\n      <SelectPopover\n        opened={shouldShowDropdown}\n        transitionProps={transitionProps}\n        shadow={shadow}\n        withinPortal={withinPortal}\n        portalProps={portalProps}\n        __staticSelector=\"Select\"\n        onDirectionChange={setDirection}\n        switchDirectionOnFlip={switchDirectionOnFlip}\n        zIndex={zIndex}\n        dropdownPosition={dropdownPosition}\n        positionDependencies={[...positionDependencies, inputValue]}\n        classNames={classNames}\n        styles={styles}\n        unstyled={unstyled}\n        variant={inputProps.variant}\n      >\n        <SelectPopover.Target>\n          <div\n            role=\"combobox\"\n            aria-haspopup=\"listbox\"\n            aria-owns={shouldShowDropdown ? `${inputProps.id}-items` : null}\n            aria-controls={inputProps.id}\n            aria-expanded={shouldShowDropdown}\n            onMouseLeave={() => setHovered(-1)}\n            tabIndex={-1}\n          >\n            <input type=\"hidden\" name={name} value={_value || ''} form={form} disabled={disabled} />\n\n            <Input<'input'>\n              autoComplete=\"off\"\n              type=\"search\"\n              {...inputProps}\n              {...others}\n              ref={useMergedRef(ref, inputRef)}\n              onKeyDown={handleInputKeydown}\n              __staticSelector=\"Select\"\n              value={inputValue}\n              placeholder={placeholder}\n              onChange={handleInputChange}\n              aria-autocomplete=\"list\"\n              aria-controls={shouldShowDropdown ? `${inputProps.id}-items` : null}\n              aria-activedescendant={hovered >= 0 ? `${inputProps.id}-${hovered}` : null}\n              onMouseDown={handleInputClick}\n              onBlur={handleInputBlur}\n              onFocus={handleInputFocus}\n              readOnly={!searchable || readOnly}\n              disabled={disabled}\n              data-mantine-stop-propagation={shouldShowDropdown}\n              name={null}\n              classNames={{\n                ...classNames,\n                input: cx({ [classes.input]: !searchable }, (classNames as any)?.input),\n              }}\n              {...getSelectRightSectionProps({\n                theme,\n                rightSection,\n                rightSectionWidth,\n                styles,\n                size: inputProps.size,\n                shouldClear: clearable && !!selectedValue,\n                onClear: handleClear,\n                error: wrapperProps.error,\n                clearButtonProps,\n                disabled,\n                readOnly,\n              })}\n            />\n          </div>\n        </SelectPopover.Target>\n\n        <SelectPopover.Dropdown\n          component={dropdownComponent || SelectScrollArea}\n          maxHeight={maxDropdownHeight}\n          direction={direction}\n          id={inputProps.id}\n          innerRef={scrollableRef}\n          __staticSelector=\"Select\"\n          classNames={classNames}\n          styles={styles}\n        >\n          <SelectItems\n            data={filteredData}\n            hovered={hovered}\n            classNames={classNames}\n            styles={styles}\n            isItemSelected={(val) => val === _value}\n            uuid={inputProps.id}\n            __staticSelector=\"Select\"\n            onItemHover={setHovered}\n            onItemSelect={handleItemSelect}\n            itemsRefs={itemsRefs}\n            itemComponent={itemComponent}\n            size={inputProps.size}\n            nothingFound={nothingFound}\n            creatable={isCreatable && !!createLabel}\n            createLabel={createLabel}\n            aria-label={wrapperProps.label}\n            unstyled={unstyled}\n            variant={inputProps.variant}\n          />\n        </SelectPopover.Dropdown>\n      </SelectPopover>\n    </Input.Wrapper>\n  );\n});\n\nSelect.displayName = '@mantine/core/Select';\n"]},"metadata":{},"sourceType":"module"}