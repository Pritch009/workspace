{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Skeleton.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  height: \"auto\",\n  width: \"100%\",\n  visible: true,\n  animate: true\n};\nconst Skeleton = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Skeleton\", defaultProps, props),\n    {\n      height,\n      width,\n      visible,\n      animate,\n      className,\n      circle,\n      radius,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"height\", \"width\", \"visible\", \"animate\", \"className\", \"circle\", \"radius\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    height,\n    width,\n    circle,\n    radius,\n    animate\n  }, {\n    name: \"Skeleton\",\n    unstyled,\n    variant\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, {\n      [classes.visible]: visible\n    }, className),\n    ref\n  }, others));\n});\nSkeleton.displayName = \"@mantine/core/Skeleton\";\nexport { Skeleton };","map":{"version":3,"sources":["../../src/Skeleton/Skeleton.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { SkeletonStylesParams } from './Skeleton.styles';\n\nexport interface SkeletonProps\n  extends DefaultProps<never, SkeletonStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Should skeleton overlay be displayed */\n  visible?: boolean;\n\n  /** Skeleton height */\n  height?: number | string;\n\n  /** Skeleton width */\n  width?: number | string;\n\n  /** If Skeleton is a circle, it's width and border-radius will be equal to height */\n  circle?: boolean;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Whether to show the animation effect */\n  animate?: boolean;\n}\n\nconst defaultProps: Partial<SkeletonProps> = {\n  height: 'auto',\n  width: '100%',\n  visible: true,\n  animate: true,\n};\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>((props, ref) => {\n  const {\n    height,\n    width,\n    visible,\n    animate,\n    className,\n    circle,\n    radius,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Skeleton', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { height, width, circle, radius, animate },\n    { name: 'Skeleton', unstyled, variant }\n  );\n\n  return (\n    <Box\n      className={cx(classes.root, { [classes.visible]: visible }, className)}\n      ref={ref}\n      {...others}\n    />\n  );\n});\n\nSkeleton.displayName = '@mantine/core/Skeleton';\n"]},"metadata":{},"sourceType":"module"}