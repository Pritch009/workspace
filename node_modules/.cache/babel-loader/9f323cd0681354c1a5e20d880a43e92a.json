{"ast":null,"code":"import { createStyles, getSize, rem } from '@mantine/styles';\nconst sizes = {\n  xs: rem(12),\n  sm: rem(18),\n  md: rem(24),\n  lg: rem(34),\n  xl: rem(42)\n};\nvar useStyles = createStyles((theme, _ref, _ref2) => {\n  let {\n    color,\n    transitionDuration\n  } = _ref;\n  let {\n    size\n  } = _ref2;\n  const sizeValue = getSize({\n    size,\n    sizes\n  });\n  const _color = color || (theme.colorScheme === \"dark\" ? theme.white : theme.black);\n  return {\n    root: {\n      borderRadius: theme.radius.sm,\n      width: `calc(${sizeValue} + ${theme.spacing.xs})`,\n      height: `calc(${sizeValue} + ${theme.spacing.xs})`,\n      padding: `calc(${theme.spacing.xs} / 2)`,\n      cursor: \"pointer\"\n    },\n    burger: {\n      position: \"relative\",\n      userSelect: \"none\",\n      boxSizing: \"border-box\",\n      \"&, &::before, &::after\": {\n        display: \"block\",\n        width: sizeValue,\n        height: `calc(${sizeValue} / 12)`,\n        backgroundColor: _color,\n        outline: `${rem(1)} solid transparent`,\n        transitionProperty: \"background-color, transform\",\n        transitionDuration: `${transitionDuration}ms`,\n        \"@media (prefers-reduced-motion)\": {\n          transitionDuration: theme.respectReducedMotion ? \"0ms\" : void 0\n        }\n      },\n      \"&::before, &::after\": {\n        position: \"absolute\",\n        content: '\"\"',\n        left: 0\n      },\n      \"&::before\": {\n        top: `calc((${sizeValue} / 3) * -1)`\n      },\n      \"&::after\": {\n        top: `calc(${sizeValue} / 3)`\n      },\n      \"&[data-opened]\": {\n        backgroundColor: \"transparent\",\n        \"&::before\": {\n          transform: `translateY(calc(${sizeValue} / 3)) rotate(45deg)`\n        },\n        \"&::after\": {\n          transform: `translateY(calc(-${sizeValue} / 3)) rotate(-45deg)`\n        }\n      }\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../src/Burger/Burger.styles.ts"],"names":[],"mappings":";AACA,MAAM,KAAK,GAAG;EACZ,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC;EACX,EAAE,EAAE,GAAG,CAAC,EAAE;AACZ,CAAC;AACD,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAK,EAAA,IAAA,EAAA,KAAA,KAA8C;EAAA,IAA5C;IAAE,KAAK;IAAE;EAAkB,CAAE,GAAA,IAAA;EAAA,IAAE;IAAE;EAAI,CAAE,GAAA,KAAA;EACzE,MAAM,SAAS,GAAG,OAAO,CAAC;IAAE,IAAI;IAAE;EAAK,CAAE,CAAC;EAC1C,MAAM,MAAM,GAAG,KAAK,KAAK,KAAK,CAAC,WAAW,KAAK,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;EAClF,OAAO;IACL,IAAI,EAAE;MACJ,YAAY,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE;MAC7B,KAAK,EAAG,QAAO,SAAU,MAAK,KAAK,CAAC,OAAO,CAAC,EAAG,GAAE;MACjD,MAAM,EAAG,QAAO,SAAU,MAAK,KAAK,CAAC,OAAO,CAAC,EAAG,GAAE;MAClD,OAAO,EAAG,QAAO,KAAK,CAAC,OAAO,CAAC,EAAG,OAAM;MACxC,MAAM,EAAE;IACd,CAAK;IACD,MAAM,EAAE;MACN,QAAQ,EAAE,UAAU;MACpB,UAAU,EAAE,MAAM;MAClB,SAAS,EAAE,YAAY;MACvB,wBAAwB,EAAE;QACxB,OAAO,EAAE,OAAO;QAChB,KAAK,EAAE,SAAS;QAChB,MAAM,EAAG,QAAO,SAAU,QAAO;QACjC,eAAe,EAAE,MAAM;QACvB,OAAO,EAAG,GAAE,GAAG,CAAC,CAAC,CAAE,oBAAmB;QACtC,kBAAkB,EAAE,6BAA6B;QACjD,kBAAkB,EAAG,GAAE,kBAAmB,IAAG;QAC7C,iCAAiC,EAAE;UACjC,kBAAkB,EAAE,KAAK,CAAC,oBAAoB,GAAG,KAAK,GAAG,KAAK;QACxE;MACA,CAAO;MACD,qBAAqB,EAAE;QACrB,QAAQ,EAAE,UAAU;QACpB,OAAO,EAAE,IAAI;QACb,IAAI,EAAE;MACd,CAAO;MACD,WAAW,EAAE;QACX,GAAG,EAAG,SAAQ,SAAU;MAChC,CAAO;MACD,UAAU,EAAE;QACV,GAAG,EAAG,QAAO,SAAU;MAC/B,CAAO;MACD,gBAAgB,EAAE;QAChB,eAAe,EAAE,aAAa;QAC9B,WAAW,EAAE;UACX,SAAS,EAAG,mBAAkB,SAAU;QAClD,CAAS;QACD,UAAU,EAAE;UACV,SAAS,EAAG,oBAAmB,SAAU;QACnD;MACA;IACA;EACA,CAAG;AACH,CAAC,CAAC","sourcesContent":["import { createStyles, MantineColor, rem, getSize } from '@mantine/styles';\n\nexport interface BurgerStylesParams {\n  color: MantineColor;\n  transitionDuration: number;\n}\n\nconst sizes = {\n  xs: rem(12),\n  sm: rem(18),\n  md: rem(24),\n  lg: rem(34),\n  xl: rem(42),\n};\n\nexport default createStyles(\n  (theme, { color, transitionDuration }: BurgerStylesParams, { size }) => {\n    const sizeValue = getSize({ size, sizes });\n    const _color = color || (theme.colorScheme === 'dark' ? theme.white : theme.black);\n\n    return {\n      root: {\n        borderRadius: theme.radius.sm,\n        width: `calc(${sizeValue} + ${theme.spacing.xs})`,\n        height: `calc(${sizeValue} + ${theme.spacing.xs})`,\n        padding: `calc(${theme.spacing.xs} / 2)`,\n        cursor: 'pointer',\n      },\n\n      burger: {\n        position: 'relative',\n        userSelect: 'none',\n        boxSizing: 'border-box',\n\n        '&, &::before, &::after': {\n          display: 'block',\n          width: sizeValue,\n          height: `calc(${sizeValue} / 12)`,\n          backgroundColor: _color,\n          outline: `${rem(1)} solid transparent`,\n          transitionProperty: 'background-color, transform',\n          transitionDuration: `${transitionDuration}ms`,\n\n          '@media (prefers-reduced-motion)': {\n            transitionDuration: theme.respectReducedMotion ? '0ms' : undefined,\n          },\n        },\n\n        '&::before, &::after': {\n          position: 'absolute',\n          content: '\"\"',\n          left: 0,\n        },\n\n        '&::before': {\n          top: `calc((${sizeValue} / 3) * -1)`,\n        },\n\n        '&::after': {\n          top: `calc(${sizeValue} / 3)`,\n        },\n\n        '&[data-opened]': {\n          backgroundColor: 'transparent',\n\n          '&::before': {\n            transform: `translateY(calc(${sizeValue} / 3)) rotate(45deg)`,\n          },\n\n          '&::after': {\n            transform: `translateY(calc(-${sizeValue} / 3)) rotate(-45deg)`,\n          },\n        },\n      },\n    };\n  }\n);\n"]},"metadata":{},"sourceType":"module"}