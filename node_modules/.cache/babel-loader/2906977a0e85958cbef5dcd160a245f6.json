{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Notification.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { Loader } from '../Loader/Loader.js';\nimport { Text } from '../Text/Text.js';\nimport { CloseButton } from '../CloseButton/CloseButton.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  withCloseButton: true\n};\nconst Notification = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Notification\", defaultProps, props),\n    {\n      className,\n      color,\n      radius,\n      loading,\n      withCloseButton,\n      withBorder,\n      title,\n      icon,\n      children,\n      onClose,\n      closeButtonProps,\n      classNames,\n      styles,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"color\", \"radius\", \"loading\", \"withCloseButton\", \"withBorder\", \"title\", \"icon\", \"children\", \"onClose\", \"closeButtonProps\", \"classNames\", \"styles\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    radius,\n    withTitle: !!title\n  }, {\n    name: \"Notification\",\n    classNames,\n    styles,\n    unstyled,\n    variant\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    \"data-with-icon\": !!icon || loading || void 0,\n    \"data-with-border\": withBorder || void 0,\n    role: \"alert\",\n    ref\n  }, others), icon && !loading && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.icon\n  }, icon), loading && /* @__PURE__ */React.createElement(Loader, {\n    size: 28,\n    color,\n    className: classes.loader\n  }), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    className: classes.title,\n    size: \"sm\",\n    weight: 500\n  }, title), /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    className: classes.description,\n    size: \"sm\"\n  }, children)), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, __spreadProps(__spreadValues({\n    iconSize: 16,\n    color: \"gray\"\n  }, closeButtonProps), {\n    onClick: onClose,\n    className: classes.closeButton\n  })));\n});\nNotification.displayName = \"@mantine/core/Notification\";\nexport { Notification };","map":{"version":3,"sources":["../../src/Notification/Notification.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  Selectors,\n  MantineNumberSize,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Text } from '../Text';\nimport { Loader } from '../Loader';\nimport { CloseButton } from '../CloseButton';\nimport { Box } from '../Box';\nimport useStyles, { NotificationStylesParams } from './Notification.styles';\n\nexport type NotificationStylesNames = Selectors<typeof useStyles>;\n\nexport interface NotificationProps\n  extends DefaultProps<NotificationStylesNames, NotificationStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  variant?: string;\n\n  /** Called when close button is clicked */\n  onClose?(): void;\n\n  /** Notification line or icon color */\n  color?: MantineColor;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed before body */\n  title?: React.ReactNode;\n\n  /** Notification body, place main text here */\n  children?: React.ReactNode;\n\n  /** Replaces colored line or icon with Loader component */\n  loading?: boolean;\n\n  /** Adds border styles */\n  withBorder?: boolean;\n\n  /** Determines whether close button should be visible, true by default */\n  withCloseButton?: boolean;\n\n  /** Props spread to close button */\n  closeButtonProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<NotificationProps> = {\n  withCloseButton: true,\n};\n\nexport const Notification = forwardRef<HTMLDivElement, NotificationProps>((props, ref) => {\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Notification', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { color, radius, withTitle: !!title },\n    { name: 'Notification', classNames, styles, unstyled, variant }\n  );\n\n  return (\n    <Box\n      className={cx(classes.root, className)}\n      data-with-icon={!!icon || loading || undefined}\n      data-with-border={withBorder || undefined}\n      role=\"alert\"\n      ref={ref}\n      {...others}\n    >\n      {icon && !loading && <div className={classes.icon}>{icon}</div>}\n      {loading && <Loader size={28} color={color} className={classes.loader} />}\n\n      <div className={classes.body}>\n        {title && (\n          <Text className={classes.title} size=\"sm\" weight={500}>\n            {title}\n          </Text>\n        )}\n\n        <Text color=\"dimmed\" className={classes.description} size=\"sm\">\n          {children}\n        </Text>\n      </div>\n\n      {withCloseButton && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          onClick={onClose}\n          className={classes.closeButton}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.displayName = '@mantine/core/Notification';\n"]},"metadata":{},"sourceType":"module"}