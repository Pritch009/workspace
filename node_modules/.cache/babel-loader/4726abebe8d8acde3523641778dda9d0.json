{"ast":null,"code":"function createPinArray(length, value) {\n  if (length < 1) {\n    return [];\n  }\n  const values = new Array(length).fill(\"\");\n  if (value) {\n    const splitted = value.trim().split(\"\");\n    for (let i = 0; i < Math.min(length, splitted.length); i += 1) {\n      values[i] = splitted[i];\n    }\n  }\n  return values;\n}\nexport { createPinArray };","map":{"version":3,"sources":["../../../src/PinInput/create-pin-array/create-pin-array.ts"],"names":[],"mappings":"AAAO,SAAS,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE;EAC5C,IAAI,MAAM,GAAG,CAAC,EAAE;IACd,OAAO,EAAE;EACb;EACE,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;EACzC,IAAI,KAAK,EAAE;IACT,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAA,CAAE,CAAC,KAAK,CAAC,EAAE,CAAC;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;MAC7D,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;IAC7B;EACA;EACE,OAAO,MAAM;AACf","sourcesContent":["export function createPinArray(length: number, value: string): string[] {\n  if (length < 1) {\n    return [];\n  }\n\n  const values = new Array<string>(length).fill('');\n\n  if (value) {\n    const splitted = value.trim().split('');\n    for (let i = 0; i < Math.min(length, splitted.length); i += 1) {\n      values[i] = splitted[i];\n    }\n  }\n\n  return values;\n}\n"]},"metadata":{},"sourceType":"module"}