{"ast":null,"code":"import React from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { usePagination } from '@mantine/hooks';\nimport { createEventHandler } from '@mantine/utils';\nimport { PaginationProvider } from '../Pagination.context.js';\nconst defaultProps = {\n  siblings: 1,\n  boundaries: 1\n};\nfunction PaginationRoot(props) {\n  const {\n    total,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    children,\n    siblings,\n    boundaries,\n    color,\n    radius,\n    onNextPage,\n    onPreviousPage,\n    onFirstPage,\n    onLastPage,\n    getItemProps,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  } = useComponentDefaultProps(\"PaginationRoot\", defaultProps, props);\n  const {\n    range,\n    setPage,\n    next,\n    previous,\n    active,\n    first,\n    last\n  } = usePagination({\n    page: value,\n    initialPage: defaultValue,\n    onChange,\n    total,\n    siblings,\n    boundaries\n  });\n  const handleNextPage = createEventHandler(onNextPage, next);\n  const handlePreviousPage = createEventHandler(onPreviousPage, previous);\n  const handleFirstPage = createEventHandler(onFirstPage, first);\n  const handleLastPage = createEventHandler(onLastPage, last);\n  return /* @__PURE__ */React.createElement(PaginationProvider, {\n    value: {\n      total,\n      range,\n      active,\n      disabled,\n      color,\n      radius,\n      getItemProps,\n      onChange: setPage,\n      onNext: handleNextPage,\n      onPrevious: handlePreviousPage,\n      onFirst: handleFirstPage,\n      onLast: handleLastPage,\n      stylesApi: {\n        name: \"Pagination\",\n        classNames,\n        styles,\n        unstyled,\n        variant,\n        size\n      }\n    }\n  }, children);\n}\nexport { PaginationRoot };","map":{"version":3,"sources":["../../../src/Pagination/PaginationRoot/PaginationRoot.tsx"],"names":[],"mappings":";;;;;AAOA,MAAM,YAAY,GAAG;EACnB,QAAQ,EAAE,CAAC;EACX,UAAU,EAAE;AACd,CAAC;AACM,SAAS,cAAc,CAAC,KAAK,EAAE;EACpC,MAAM;IACJ,KAAK;IACL,KAAK;IACL,YAAY;IACZ,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,UAAU;IACV,KAAK;IACL,MAAM;IACN,UAAU;IACV,cAAc;IACd,WAAW;IACX,UAAU;IACV,YAAY;IACZ,UAAU;IACV,MAAM;IACN,QAAQ;IACR,OAAO;IACP;EACJ,CAAG,GAAG,wBAAwB,CAAC,gBAAgB,EAAE,YAAY,EAAE,KAAK,CAAC;EACnE,MAAM;IAAE,KAAK;IAAE,OAAO;IAAE,IAAI;IAAE,QAAQ;IAAE,MAAM;IAAE,KAAK;IAAE;EAAI,CAAE,GAAG,aAAa,CAAC;IAC5E,IAAI,EAAE,KAAK;IACX,WAAW,EAAE,YAAY;IACzB,QAAQ;IACR,KAAK;IACL,QAAQ;IACR;EACJ,CAAG,CAAC;EACF,MAAM,cAAc,GAAG,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC;EAC3D,MAAM,kBAAkB,GAAG,kBAAkB,CAAC,cAAc,EAAE,QAAQ,CAAC;EACvE,MAAM,eAAe,GAAG,kBAAkB,CAAC,WAAW,EAAE,KAAK,CAAC;EAC9D,MAAM,cAAc,GAAG,kBAAkB,CAAC,UAAU,EAAE,IAAI,CAAC;EAC3D,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,kBAAkB,EAAE;IAC7D,KAAK,EAAE;MACL,KAAK;MACL,KAAK;MACL,MAAM;MACN,QAAQ;MACR,KAAK;MACL,MAAM;MACN,YAAY;MACZ,QAAQ,EAAE,OAAO;MACjB,MAAM,EAAE,cAAc;MACtB,UAAU,EAAE,kBAAkB;MAC9B,OAAO,EAAE,eAAe;MACxB,MAAM,EAAE,cAAc;MACtB,SAAS,EAAE;QACT,IAAI,EAAE,YAAY;QAClB,UAAU;QACV,MAAM;QACN,QAAQ;QACR,OAAO;QACP;MACR;IACA;EACA,CAAG,EAAE,QAAQ,CAAC;AACd","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport {\n  MantineColor,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  ClassNames,\n  Styles,\n} from '@mantine/styles';\nimport { usePagination } from '@mantine/hooks';\nimport { createEventHandler } from '@mantine/utils';\nimport { PaginationProvider } from '../Pagination.context';\nimport type { PaginationControlStylesNames } from '../PaginationControl/PaginationControl';\nimport type { PaginationDotsStylesNames } from '../PaginationDots/PaginationDots';\n\nexport type PaginationStylesNames = PaginationControlStylesNames | PaginationDotsStylesNames;\n\nexport interface PaginationRootSettings {\n  classNames?: ClassNames<PaginationStylesNames>;\n  styles?: Styles<PaginationStylesNames>;\n  unstyled?: boolean;\n  variant?: string;\n\n  /** Controls height and min-width */\n  size?: MantineNumberSize;\n\n  /** Total number of pages, must be an integer */\n  total: number;\n\n  /** Active page for controlled component, must be an integer in [0, total] interval */\n  value?: number;\n\n  /** Active page for uncontrolled component, must be an integer in [0, total] interval */\n  defaultValue?: number;\n\n  /** Called when page changes */\n  onChange?(value: number): void;\n\n  /** Determines whether all controls should be disabled, false by default */\n  disabled?: boolean;\n\n  /** Number of siblings displayed on the left/right side of selected page, 1 by default */\n  siblings?: number;\n\n  /** Number of elements visible on the left/right edges, 1 by default */\n  boundaries?: number;\n\n  /** Key of theme.colors, active item color, theme.primaryColor by default */\n  color?: MantineColor;\n\n  /** Key of theme.radius, border-radius of items and controls, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Called when next page control is clicked */\n  onNextPage?(): void;\n\n  /** Called when previous page control is clicked */\n  onPreviousPage?(): void;\n\n  /** Called when first page control is clicked */\n  onFirstPage?(): void;\n\n  /** Called when last page control is clicked */\n  onLastPage?(): void;\n\n  /** Add additional props to items */\n  getItemProps?(page: number): Record<string, any>;\n}\n\nexport interface PaginationRootProps extends PaginationRootSettings {\n  /** Pagination content */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<PaginationRootProps> = {\n  siblings: 1,\n  boundaries: 1,\n};\n\nexport function PaginationRoot(props: PaginationRootProps) {\n  const {\n    total,\n    value,\n    defaultValue,\n    onChange,\n    disabled,\n    children,\n    siblings,\n    boundaries,\n    color,\n    radius,\n    onNextPage,\n    onPreviousPage,\n    onFirstPage,\n    onLastPage,\n    getItemProps,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size,\n  } = useComponentDefaultProps('PaginationRoot', defaultProps, props);\n\n  const { range, setPage, next, previous, active, first, last } = usePagination({\n    page: value,\n    initialPage: defaultValue,\n    onChange,\n    total,\n    siblings,\n    boundaries,\n  });\n\n  const handleNextPage = createEventHandler(onNextPage, next);\n  const handlePreviousPage = createEventHandler(onPreviousPage, previous);\n  const handleFirstPage = createEventHandler(onFirstPage, first);\n  const handleLastPage = createEventHandler(onLastPage, last);\n\n  return (\n    <PaginationProvider\n      value={{\n        total,\n        range,\n        active,\n        disabled,\n        color,\n        radius,\n        getItemProps,\n        onChange: setPage,\n        onNext: handleNextPage,\n        onPrevious: handlePreviousPage,\n        onFirst: handleFirstPage,\n        onLast: handleLastPage,\n        stylesApi: {\n          name: 'Pagination',\n          classNames,\n          styles,\n          unstyled,\n          variant,\n          size,\n        },\n      }}\n    >\n      {children}\n    </PaginationProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}