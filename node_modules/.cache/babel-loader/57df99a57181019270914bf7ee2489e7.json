{"ast":null,"code":"import { useState, useCallback } from 'react';\nfunction useDisclosure() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let callbacks = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    onOpen,\n    onClose\n  } = callbacks || {};\n  const [opened, setOpened] = useState(initialState);\n  const open = useCallback(() => {\n    setOpened(isOpened => {\n      if (!isOpened) {\n        onOpen == null ? void 0 : onOpen();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [onOpen]);\n  const close = useCallback(() => {\n    setOpened(isOpened => {\n      if (isOpened) {\n        onClose == null ? void 0 : onClose();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [onClose]);\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open,\n    close,\n    toggle\n  }];\n}\nexport { useDisclosure };","map":{"version":3,"sources":["../../src/use-disclosure/use-disclosure.ts"],"names":[],"mappings":";AACO,SAAS,aAAa,CAAA,EAAkC;EAAA,IAAjC,YAAY,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,KAAK;EAAA,IAAE,SAAS,GAAA,SAAA,CAAA,MAAA,OAAA,SAAA,MAAA,SAAA;EAC3D,MAAM;IAAE,MAAM;IAAE;EAAO,CAAE,GAAG,SAAS,IAAI,CAAA,CAAE;EAC3C,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC;EAClD,MAAM,IAAI,GAAG,WAAW,CAAC,MAAM;IAC7B,SAAS,CAAE,QAAQ,IAAK;MACtB,IAAI,CAAC,QAAQ,EAAE;QACb,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAA,CAAE;QAClC,OAAO,IAAI;MACnB;MACM,OAAO,QAAQ;IACrB,CAAK,CAAC;EACN,CAAG,EAAE,CAAC,MAAM,CAAC,CAAC;EACZ,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM;IAC9B,SAAS,CAAE,QAAQ,IAAK;MACtB,IAAI,QAAQ,EAAE;QACZ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,OAAO,CAAA,CAAE;QACpC,OAAO,KAAK;MACpB;MACM,OAAO,QAAQ;IACrB,CAAK,CAAC;EACN,CAAG,EAAE,CAAC,OAAO,CAAC,CAAC;EACb,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM;IAC/B,MAAM,GAAG,KAAK,CAAA,CAAE,GAAG,IAAI,CAAA,CAAE;EAC7B,CAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;EACzB,OAAO,CAAC,MAAM,EAAE;IAAE,IAAI;IAAE,KAAK;IAAE;EAAM,CAAE,CAAC;AAC1C","sourcesContent":["import { useState, useCallback } from 'react';\n\nexport function useDisclosure(\n  initialState = false,\n  callbacks?: { onOpen?(): void; onClose?(): void }\n) {\n  const { onOpen, onClose } = callbacks || {};\n  const [opened, setOpened] = useState(initialState);\n\n  const open = useCallback(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [onOpen]);\n\n  const close = useCallback(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [onClose]);\n\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n\n  return [opened, { open, close, toggle }] as const;\n}\n"]},"metadata":{},"sourceType":"module"}