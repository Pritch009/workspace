{"ast":null,"code":"import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled.js';\nimport { range } from '../utils/range/range.js';\nconst DOTS = \"dots\";\nfunction usePagination(_ref) {\n  let {\n    total,\n    siblings = 1,\n    boundaries = 1,\n    page,\n    initialPage = 1,\n    onChange\n  } = _ref;\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage\n  });\n  const setPage = pageNumber => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n    return [...range(1, boundaries), DOTS, ...range(leftSiblingIndex, rightSiblingIndex), DOTS, ...range(_total - boundaries + 1, _total)];\n  }, [_total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\nexport { DOTS, usePagination };","map":{"version":3,"sources":["../../src/use-pagination/use-pagination.ts"],"names":[],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled';\nimport { range } from '../utils';\n\nexport const DOTS = 'dots';\n\nexport interface PaginationParams {\n  /** Page selected on initial render, defaults to 1 */\n  initialPage?: number;\n\n  /** Controlled active page number */\n  page?: number;\n\n  /** Total amount of pages */\n  total: number;\n\n  /** Siblings amount on left/right side of selected page, defaults to 1 */\n  siblings?: number;\n\n  /** Amount of elements visible on left/right edges, defaults to 1  */\n  boundaries?: number;\n\n  /** Callback fired after change of each page */\n  onChange?: (page: number) => void;\n}\n\nexport function usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange,\n}: PaginationParams) {\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n  });\n\n  const setPage = (pageNumber: number) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(_total - boundaries + 1, _total),\n    ];\n  }, [_total, siblings, activePage]);\n\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}