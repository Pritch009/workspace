{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { Col } from './Col/Col.js';\nimport { GridProvider } from './Grid.context.js';\nimport useStyles from './Grid.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  gutter: \"md\",\n  justify: \"flex-start\",\n  align: \"stretch\",\n  columns: 12\n};\nconst Grid = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Grid\", defaultProps, props),\n    {\n      gutter,\n      gutterXs,\n      gutterSm,\n      gutterMd,\n      gutterLg,\n      gutterXl,\n      children,\n      grow,\n      justify,\n      align,\n      columns,\n      className,\n      id,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"gutter\", \"gutterXs\", \"gutterSm\", \"gutterMd\", \"gutterLg\", \"gutterXl\", \"children\", \"grow\", \"justify\", \"align\", \"columns\", \"className\", \"id\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    gutter,\n    justify,\n    align,\n    gutterXs,\n    gutterSm,\n    gutterMd,\n    gutterLg,\n    gutterXl\n  }, {\n    unstyled,\n    name: \"Grid\",\n    variant\n  });\n  return /* @__PURE__ */React.createElement(GridProvider, {\n    value: {\n      gutter,\n      gutterXs,\n      gutterSm,\n      gutterMd,\n      gutterLg,\n      gutterXl,\n      grow,\n      columns\n    }\n  }, /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), children));\n});\nGrid.Col = Col;\nGrid.displayName = \"@mantine/core/Grid\";\nexport { Grid };","map":{"version":3,"sources":["../../src/Grid/Grid.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { Box } from '../Box';\nimport { Col } from './Col/Col';\nimport { GridProvider } from './Grid.context';\nimport useStyles from './Grid.styles';\n\nexport interface GridProps extends DefaultProps, React.ComponentPropsWithRef<'div'> {\n  variant?: string;\n\n  /** <Col /> components only */\n  children: React.ReactNode;\n\n  /** Spacing between columns, key of theme.spacing or number for value */\n  gutter?: MantineNumberSize;\n\n  /** Gutter when screen size is larger than theme.breakpoints.xs */\n  gutterXs?: MantineNumberSize;\n\n  /** Gutter when screen size is larger than theme.breakpoints.sm */\n  gutterSm?: MantineNumberSize;\n\n  /** Gutter when screen size is larger than theme.breakpoints.md */\n  gutterMd?: MantineNumberSize;\n\n  /** Gutter when screen size is larger than theme.breakpoints.lg */\n  gutterLg?: MantineNumberSize;\n\n  /** Gutter when screen size is larger than theme.breakpoints.xl */\n  gutterXl?: MantineNumberSize;\n\n  /** Should columns in the last row take 100% of grid width */\n  grow?: boolean;\n\n  /** Set grid justify-content property */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Set grid align-content property */\n  align?: React.CSSProperties['alignContent'];\n\n  /** Amount of columns in each row */\n  columns?: number;\n}\n\ntype GridComponent = ForwardRefWithStaticComponents<GridProps, { Col: typeof Col }>;\n\nconst defaultProps: Partial<GridProps> = {\n  gutter: 'md',\n  justify: 'flex-start',\n  align: 'stretch',\n  columns: 12,\n};\n\nexport const Grid: GridComponent = forwardRef<HTMLDivElement, GridProps>((props, ref) => {\n  const {\n    gutter,\n    gutterXs,\n    gutterSm,\n    gutterMd,\n    gutterLg,\n    gutterXl,\n    children,\n    grow,\n    justify,\n    align,\n    columns,\n    className,\n    id,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Grid', defaultProps, props);\n  const { classes, cx } = useStyles(\n    { gutter, justify, align, gutterXs, gutterSm, gutterMd, gutterLg, gutterXl },\n    { unstyled, name: 'Grid', variant }\n  );\n\n  return (\n    <GridProvider\n      value={{ gutter, gutterXs, gutterSm, gutterMd, gutterLg, gutterXl, grow, columns }}\n    >\n      <Box className={cx(classes.root, className)} ref={ref} {...others}>\n        {children}\n      </Box>\n    </GridProvider>\n  );\n}) as any;\n\nGrid.Col = Col;\nGrid.displayName = '@mantine/core/Grid';\n"]},"metadata":{},"sourceType":"module"}