{"ast":null,"code":"import React, { forwardRef, useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { validateJson } from './validate-json/validate-json.js';\nimport useStyles from './JsonInput.styles.js';\nimport { Textarea } from '../Textarea/Textarea.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  formatOnBlur: false,\n  size: \"sm\",\n  serialize: JSON.stringify,\n  deserialize: JSON.parse\n};\nconst JsonInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"JsonInput\", defaultProps, props),\n    {\n      value,\n      defaultValue,\n      onChange,\n      onFocus,\n      onBlur,\n      error,\n      formatOnBlur,\n      size,\n      validationError,\n      classNames,\n      unstyled,\n      readOnly,\n      variant,\n      serialize,\n      deserialize\n    } = _a,\n    others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"onFocus\", \"onBlur\", \"error\", \"formatOnBlur\", \"size\", \"validationError\", \"classNames\", \"unstyled\", \"readOnly\", \"variant\", \"serialize\", \"deserialize\"]);\n  const {\n    classes,\n    cx\n  } = useStyles(null, {\n    name: \"JsonInput\",\n    unstyled,\n    size,\n    variant\n  });\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: \"\",\n    onChange\n  });\n  const [valid, setValid] = useState(validateJson(_value, deserialize));\n  const handleFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n    setValid(true);\n  };\n  const handleBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize);\n    formatOnBlur && !readOnly && isValid && event.currentTarget.value.trim() !== \"\" && setValue(serialize(deserialize(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n  return /* @__PURE__ */React.createElement(Textarea, __spreadValues({\n    value: _value,\n    onChange: event => setValue(event.currentTarget.value),\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    error: valid ? error : validationError || true,\n    __staticSelector: \"JsonInput\",\n    classNames: __spreadProps(__spreadValues({}, classNames), {\n      input: cx(classes.input, classNames == null ? void 0 : classNames.input)\n    }),\n    autoComplete: \"off\",\n    ref,\n    unstyled,\n    readOnly,\n    size,\n    variant\n  }, others));\n});\nJsonInput.displayName = \"@mantine/core/JsonInput\";\nexport { JsonInput };","map":{"version":3,"sources":["../../src/JsonInput/JsonInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef, useState } from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { DefaultProps, useComponentDefaultProps } from '@mantine/styles';\nimport { validateJson } from './validate-json/validate-json';\nimport { Textarea, TextareaProps } from '../Textarea';\nimport { TextInputStylesNames } from '../TextInput';\nimport useStyles from './JsonInput.styles';\n\nexport type JsonInputStylesNames = TextInputStylesNames;\n\nexport interface JsonInputProps\n  extends DefaultProps<JsonInputStylesNames>,\n    Omit<TextareaProps, 'onChange'> {\n  /** Value for controlled input */\n  value?: string;\n\n  /** Default value for uncontrolled input */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Format JSON on blur */\n  formatOnBlur?: boolean;\n\n  /** Error message shown when JSON is not valid */\n  validationError?: React.ReactNode;\n\n  /** Function to serialize value into a string, used for value formatting, JSON.stringify by default */\n  serialize?: typeof JSON.stringify;\n\n  /** Function to deserialize string value, used for value formatting and input JSON validation, must throw error if string cannot be processed, JSON.parse by default */\n  deserialize?: typeof JSON.parse;\n}\n\nconst defaultProps: Partial<JsonInputProps> = {\n  formatOnBlur: false,\n  size: 'sm',\n  serialize: JSON.stringify,\n  deserialize: JSON.parse,\n};\n\nexport const JsonInput = forwardRef<HTMLTextAreaElement, JsonInputProps>((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    onFocus,\n    onBlur,\n    error,\n    formatOnBlur,\n    size,\n    validationError,\n    classNames,\n    unstyled,\n    readOnly,\n    variant,\n    serialize,\n    deserialize,\n    ...others\n  } = useComponentDefaultProps('JsonInput', defaultProps, props);\n\n  const { classes, cx } = useStyles(null, { name: 'JsonInput', unstyled, size, variant });\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: '',\n    onChange,\n  });\n\n  const [valid, setValid] = useState(validateJson(_value, deserialize));\n\n  const handleFocus = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    typeof onFocus === 'function' && onFocus(event);\n    setValid(true);\n  };\n\n  const handleBlur = (event: React.FocusEvent<HTMLTextAreaElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    const isValid = validateJson(event.currentTarget.value, deserialize);\n    formatOnBlur &&\n      !readOnly &&\n      isValid &&\n      event.currentTarget.value.trim() !== '' &&\n      setValue(serialize(deserialize(event.currentTarget.value), null, 2));\n    setValid(isValid);\n  };\n\n  return (\n    <Textarea\n      value={_value}\n      onChange={(event) => setValue(event.currentTarget.value)}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      error={valid ? error : validationError || true}\n      __staticSelector=\"JsonInput\"\n      classNames={{ ...classNames, input: cx(classes.input, classNames?.input) }}\n      autoComplete=\"off\"\n      ref={ref}\n      unstyled={unstyled}\n      readOnly={readOnly}\n      size={size}\n      variant={variant}\n      {...others}\n    />\n  );\n});\n\nJsonInput.displayName = '@mantine/core/JsonInput';\n"]},"metadata":{},"sourceType":"module"}