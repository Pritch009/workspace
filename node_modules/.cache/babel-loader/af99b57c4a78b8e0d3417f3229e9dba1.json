{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Text } from '../Text/Text.js';\nimport { Mark } from '../Mark/Mark.js';\nimport { highlighter } from './highlighter/highlighter.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  highlightColor: \"yellow\"\n};\nconst _Highlight = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Highlight\", defaultProps, props),\n    {\n      children,\n      highlight,\n      highlightColor,\n      highlightStyles,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"children\", \"highlight\", \"highlightColor\", \"highlightStyles\", \"unstyled\"]);\n  const highlightChunks = highlighter(children, highlight);\n  return /* @__PURE__ */React.createElement(Text, __spreadValues({\n    unstyled,\n    ref,\n    __staticSelector: \"Highlight\"\n  }, others), highlightChunks.map((_ref, i) => {\n    let {\n      chunk,\n      highlighted\n    } = _ref;\n    return highlighted ? /* @__PURE__ */React.createElement(Mark, {\n      unstyled,\n      key: i,\n      color: highlightColor,\n      sx: highlightStyles,\n      \"data-highlight\": chunk\n    }, chunk) : /* @__PURE__ */React.createElement(\"span\", {\n      key: i\n    }, chunk);\n  }));\n});\n_Highlight.displayName = \"@mantine/core/Highlight\";\nconst Highlight = createPolymorphicComponent(_Highlight);\nexport { Highlight, _Highlight };","map":{"version":3,"sources":["../../src/Highlight/Highlight.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { MantineColor, MantineTheme, CSSObject, useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Text, TextProps } from '../Text/Text';\nimport { Mark } from '../Mark/Mark';\nimport { highlighter } from './highlighter/highlighter';\n\nexport interface HighlightProps extends TextProps {\n  /** Substring or an array of substrings to highlight in children */\n  highlight: string | string[];\n\n  /** Color from theme that is used for highlighting */\n  highlightColor?: MantineColor;\n\n  /** Styles applied to highlighted part */\n  highlightStyles?: CSSObject | ((theme: MantineTheme) => CSSObject);\n\n  /** Full string part of which will be highlighted */\n  children: string;\n}\n\nconst defaultProps: Partial<HighlightProps> = {\n  highlightColor: 'yellow',\n};\n\nexport const _Highlight = forwardRef<HTMLDivElement, HighlightProps>((props, ref) => {\n  const { children, highlight, highlightColor, highlightStyles, unstyled, ...others } =\n    useComponentDefaultProps('Highlight', defaultProps, props);\n  const highlightChunks = highlighter(children, highlight);\n\n  return (\n    <Text unstyled={unstyled} ref={ref} __staticSelector=\"Highlight\" {...others}>\n      {highlightChunks.map(({ chunk, highlighted }, i) =>\n        highlighted ? (\n          <Mark\n            unstyled={unstyled}\n            key={i}\n            color={highlightColor}\n            sx={highlightStyles}\n            data-highlight={chunk}\n          >\n            {chunk}\n          </Mark>\n        ) : (\n          <span key={i}>{chunk}</span>\n        )\n      )}\n    </Text>\n  );\n});\n\n_Highlight.displayName = '@mantine/core/Highlight';\n\nexport const Highlight = createPolymorphicComponent<'div', HighlightProps>(_Highlight);\n"]},"metadata":{},"sourceType":"module"}