{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useId } from '@mantine/hooks';\nimport useStyles from './Alert.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { CloseButton } from '../CloseButton/CloseButton.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  variant: \"light\"\n};\nconst Alert = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Alert\", defaultProps, props),\n    {\n      id,\n      className,\n      title,\n      variant,\n      children,\n      color,\n      classNames,\n      icon,\n      styles,\n      onClose,\n      radius,\n      withCloseButton,\n      closeButtonLabel,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"id\", \"className\", \"title\", \"variant\", \"children\", \"color\", \"classNames\", \"icon\", \"styles\", \"onClose\", \"radius\", \"withCloseButton\", \"closeButtonLabel\", \"unstyled\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    radius\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    name: \"Alert\"\n  });\n  const rootId = useId(id);\n  const titleId = title && `${rootId}-title`;\n  const bodyId = `${rootId}-body`;\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    id: rootId,\n    role: \"alert\",\n    \"aria-labelledby\": titleId,\n    \"aria-describedby\": bodyId,\n    className: cx(classes.root, classes[variant], className),\n    ref\n  }, others), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.wrapper\n  }, icon && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.icon\n  }, icon), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, title && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.title,\n    \"data-with-close-button\": withCloseButton || void 0\n  }, /* @__PURE__ */React.createElement(\"span\", {\n    id: titleId,\n    className: classes.label\n  }, title)), /* @__PURE__ */React.createElement(\"div\", {\n    id: bodyId,\n    className: classes.message\n  }, children)), withCloseButton && /* @__PURE__ */React.createElement(CloseButton, {\n    className: classes.closeButton,\n    onClick: onClose,\n    variant: \"transparent\",\n    size: 16,\n    iconSize: 16,\n    \"aria-label\": closeButtonLabel\n  })));\n});\nAlert.displayName = \"@mantine/core/Alert\";\nexport { Alert };","map":{"version":3,"sources":["../../src/Alert/Alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  Selectors,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  Variants,\n} from '@mantine/styles';\nimport { useId } from '@mantine/hooks';\nimport { CloseButton } from '../CloseButton';\nimport { Box } from '../Box';\nimport useStyles, { AlertStylesParams } from './Alert.styles';\n\nexport type AlertStylesNames = Selectors<typeof useStyles>;\n\nexport interface AlertProps\n  extends DefaultProps<AlertStylesNames, AlertStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  /** Alert title */\n  title?: React.ReactNode;\n\n  /** Controls Alert background, color and border styles, \"light\" by default */\n  variant?: Variants<'filled' | 'outline' | 'light'>;\n\n  /** Alert message */\n  children: React.ReactNode;\n\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Icon displayed next to the title */\n  icon?: React.ReactNode;\n\n  /** Determines whether close button should be displayed, false by default */\n  withCloseButton?: boolean;\n\n  /** Called when close button is clicked */\n  onClose?(): void;\n\n  /** Close button aria-label */\n  closeButtonLabel?: string;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n}\n\nconst defaultProps: Partial<AlertProps> = {\n  variant: 'light',\n};\n\nexport const Alert = forwardRef<HTMLDivElement, AlertProps>((props: AlertProps, ref) => {\n  const {\n    id,\n    className,\n    title,\n    variant,\n    children,\n    color,\n    classNames,\n    icon,\n    styles,\n    onClose,\n    radius,\n    withCloseButton,\n    closeButtonLabel,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Alert', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { color, radius },\n    { classNames, styles, unstyled, variant, name: 'Alert' }\n  );\n\n  const rootId = useId(id);\n  const titleId = title && `${rootId}-title`;\n  const bodyId = `${rootId}-body`;\n\n  return (\n    <Box\n      id={rootId}\n      role=\"alert\"\n      aria-labelledby={titleId}\n      aria-describedby={bodyId}\n      className={cx(classes.root, classes[variant], className)}\n      ref={ref}\n      {...others}\n    >\n      <div className={classes.wrapper}>\n        {icon && <div className={classes.icon}>{icon}</div>}\n\n        <div className={classes.body}>\n          {title && (\n            <div className={classes.title} data-with-close-button={withCloseButton || undefined}>\n              <span id={titleId} className={classes.label}>\n                {title}\n              </span>\n            </div>\n          )}\n\n          <div id={bodyId} className={classes.message}>\n            {children}\n          </div>\n        </div>\n\n        {withCloseButton && (\n          <CloseButton\n            className={classes.closeButton}\n            onClick={onClose}\n            variant=\"transparent\"\n            size={16}\n            iconSize={16}\n            aria-label={closeButtonLabel}\n          />\n        )}\n      </div>\n    </Box>\n  );\n});\n\nAlert.displayName = '@mantine/core/Alert';\n"]},"metadata":{},"sourceType":"module"}