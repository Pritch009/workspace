{"ast":null,"code":"import React, { forwardRef, useRef, cloneElement } from 'react';\nimport { isElement } from '@mantine/utils';\nimport { useMergedRef } from '@mantine/hooks';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport { TooltipGroup } from './TooltipGroup/TooltipGroup.js';\nimport { TooltipFloating } from './TooltipFloating/TooltipFloating.js';\nimport { useTooltip } from './use-tooltip.js';\nimport { TOOLTIP_ERRORS } from './Tooltip.errors.js';\nimport useStyles from './Tooltip.styles.js';\nimport { getFloatingPosition } from '../Floating/get-floating-position/get-floating-position.js';\nimport { OptionalPortal } from '../Portal/OptionalPortal.js';\nimport { Transition } from '../Transition/Transition.js';\nimport { Box } from '../Box/Box.js';\nimport { FloatingArrow } from '../Floating/FloatingArrow/FloatingArrow.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  position: \"top\",\n  refProp: \"ref\",\n  withinPortal: false,\n  inline: false,\n  arrowSize: 4,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: \"side\",\n  offset: 5,\n  transitionProps: {\n    duration: 100,\n    transition: \"fade\"\n  },\n  width: \"auto\",\n  events: {\n    hover: true,\n    focus: false,\n    touch: false\n  },\n  zIndex: getDefaultZIndex(\"popover\"),\n  positionDependencies: []\n};\nconst _Tooltip = forwardRef((props, ref) => {\n  var _b;\n  const arrowRef = useRef(null);\n  const _a = useComponentDefaultProps(\"Tooltip\", defaultProps, props),\n    {\n      children,\n      position,\n      refProp,\n      label,\n      openDelay,\n      closeDelay,\n      onPositionChange,\n      opened,\n      withinPortal,\n      portalProps,\n      radius,\n      color,\n      classNames,\n      styles,\n      unstyled,\n      style,\n      className,\n      withArrow,\n      arrowSize,\n      arrowOffset,\n      arrowRadius,\n      arrowPosition,\n      offset,\n      transitionProps,\n      multiline,\n      width,\n      events,\n      zIndex,\n      disabled,\n      positionDependencies,\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      inline,\n      variant,\n      keepMounted\n    } = _a,\n    others = __objRest(_a, [\"children\", \"position\", \"refProp\", \"label\", \"openDelay\", \"closeDelay\", \"onPositionChange\", \"opened\", \"withinPortal\", \"portalProps\", \"radius\", \"color\", \"classNames\", \"styles\", \"unstyled\", \"style\", \"className\", \"withArrow\", \"arrowSize\", \"arrowOffset\", \"arrowRadius\", \"arrowPosition\", \"offset\", \"transitionProps\", \"multiline\", \"width\", \"events\", \"zIndex\", \"disabled\", \"positionDependencies\", \"onClick\", \"onMouseEnter\", \"onMouseLeave\", \"inline\", \"variant\", \"keepMounted\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    radius,\n    color,\n    width,\n    multiline\n  }, {\n    name: \"Tooltip\",\n    classNames,\n    styles,\n    unstyled,\n    variant\n  });\n  const tooltip = useTooltip({\n    position: getFloatingPosition(theme.dir, position),\n    closeDelay,\n    openDelay,\n    onPositionChange,\n    opened,\n    events,\n    arrowRef,\n    arrowOffset,\n    offset: offset + (withArrow ? arrowSize / 2 : 0),\n    positionDependencies: [...positionDependencies, children],\n    inline\n  });\n  if (!isElement(children)) {\n    throw new Error(TOOLTIP_ERRORS.children);\n  }\n  const targetRef = useMergedRef(tooltip.reference, children.ref, ref);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(OptionalPortal, __spreadProps(__spreadValues({}, portalProps), {\n    withinPortal\n  }), /* @__PURE__ */React.createElement(Transition, __spreadProps(__spreadValues({\n    keepMounted,\n    mounted: !disabled && tooltip.opened\n  }, transitionProps), {\n    transition: transitionProps.transition || \"fade\",\n    duration: tooltip.isGroupPhase ? 10 : (_b = transitionProps.duration) != null ? _b : 100\n  }), transitionStyles => {\n    var _a2, _b2;\n    return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({}, others), tooltip.getFloatingProps({\n      ref: tooltip.floating,\n      className: classes.tooltip,\n      style: __spreadProps(__spreadValues(__spreadValues({}, style), transitionStyles), {\n        zIndex,\n        top: (_a2 = tooltip.y) != null ? _a2 : 0,\n        left: (_b2 = tooltip.x) != null ? _b2 : 0\n      })\n    })), label, /* @__PURE__ */React.createElement(FloatingArrow, {\n      ref: arrowRef,\n      arrowX: tooltip.arrowX,\n      arrowY: tooltip.arrowY,\n      visible: withArrow,\n      position: tooltip.placement,\n      arrowSize,\n      arrowOffset,\n      arrowRadius,\n      arrowPosition,\n      className: classes.arrow\n    }));\n  })), cloneElement(children, tooltip.getReferenceProps(__spreadValues({\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove: props.onMouseMove,\n    onPointerDown: props.onPointerDown,\n    onPointerEnter: props.onPointerEnter,\n    [refProp]: targetRef,\n    className: cx(className, children.props.className)\n  }, children.props))));\n});\n_Tooltip.Group = TooltipGroup;\n_Tooltip.Floating = TooltipFloating;\n_Tooltip.displayName = \"@mantine/core/Tooltip\";\nconst Tooltip = _Tooltip;\nexport { Tooltip };","map":{"version":3,"sources":["../../src/Tooltip/Tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { cloneElement, forwardRef, useRef } from 'react';\nimport { isElement, ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { useMergedRef } from '@mantine/hooks';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport { TooltipGroup } from './TooltipGroup/TooltipGroup';\nimport { TooltipFloating } from './TooltipFloating/TooltipFloating';\nimport { useTooltip } from './use-tooltip';\nimport { FloatingArrow, getFloatingPosition, FloatingPosition, ArrowPosition } from '../Floating';\nimport { Transition, TransitionOverride } from '../Transition';\nimport { OptionalPortal } from '../Portal';\nimport { Box } from '../Box';\nimport { TOOLTIP_ERRORS } from './Tooltip.errors';\nimport { TooltipBaseProps } from './Tooltip.types';\nimport useStyles from './Tooltip.styles';\n\nexport interface TooltipProps extends TooltipBaseProps {\n  variant?: string;\n\n  /** Called when tooltip position changes */\n  onPositionChange?(position: FloatingPosition): void;\n\n  /** Open delay in ms */\n  openDelay?: number;\n\n  /** Close delay in ms */\n  closeDelay?: number;\n\n  /** Controls opened state */\n  opened?: boolean;\n\n  /** Space between target element and tooltip */\n  offset?: number;\n\n  /** Determines whether component should have an arrow */\n  withArrow?: boolean;\n\n  /** Arrow size */\n  arrowSize?: number;\n\n  /** Arrow offset */\n  arrowOffset?: number;\n\n  /** Arrow radius */\n  arrowRadius?: number;\n\n  /** Arrow position **/\n  arrowPosition?: ArrowPosition;\n\n  /** Props added to Transition component that used to animate tooltip presence, use to configure duration and animation type, { duration: 100, transition: 'fade' } by default */\n  transitionProps?: TransitionOverride;\n\n  /** Determines which events will be used to show tooltip */\n  events?: { hover: boolean; focus: boolean; touch: boolean };\n\n  /** useEffect dependencies to force update tooltip position */\n  positionDependencies?: any[];\n\n  /** Set if tooltip is attached to an inline element */\n  inline?: boolean;\n\n  /** If set tooltip will not be unmounted from the DOM when it is hidden, display: none styles will be added instead */\n  keepMounted?: boolean;\n}\n\nconst defaultProps: Partial<TooltipProps> = {\n  position: 'top',\n  refProp: 'ref',\n  withinPortal: false,\n  inline: false,\n  arrowSize: 4,\n  arrowOffset: 5,\n  arrowRadius: 0,\n  arrowPosition: 'side',\n  offset: 5,\n  transitionProps: { duration: 100, transition: 'fade' },\n  width: 'auto',\n  events: { hover: true, focus: false, touch: false },\n  zIndex: getDefaultZIndex('popover'),\n  positionDependencies: [],\n};\n\nconst _Tooltip = forwardRef<HTMLElement, TooltipProps>((props, ref) => {\n  const arrowRef = useRef<HTMLDivElement | null>(null);\n  const {\n    children,\n    position,\n    refProp,\n    label,\n    openDelay,\n    closeDelay,\n    onPositionChange,\n    opened,\n    withinPortal,\n    portalProps,\n    radius,\n    color,\n    classNames,\n    styles,\n    unstyled,\n    style,\n    className,\n    withArrow,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    offset,\n    transitionProps,\n    multiline,\n    width,\n    events,\n    zIndex,\n    disabled,\n    positionDependencies,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    inline,\n    variant,\n    keepMounted,\n    ...others\n  } = useComponentDefaultProps('Tooltip', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(\n    { radius, color, width, multiline },\n    { name: 'Tooltip', classNames, styles, unstyled, variant }\n  );\n\n  const tooltip = useTooltip({\n    position: getFloatingPosition(theme.dir, position),\n    closeDelay,\n    openDelay,\n    onPositionChange,\n    opened,\n    events,\n    arrowRef,\n    arrowOffset,\n    offset: offset + (withArrow ? arrowSize / 2 : 0),\n    positionDependencies: [...positionDependencies, children],\n    inline,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(TOOLTIP_ERRORS.children);\n  }\n\n  const targetRef = useMergedRef(tooltip.reference, (children as any).ref, ref);\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Transition\n          keepMounted={keepMounted}\n          mounted={!disabled && tooltip.opened}\n          {...transitionProps}\n          transition={transitionProps.transition || 'fade'}\n          duration={tooltip.isGroupPhase ? 10 : transitionProps.duration ?? 100}\n        >\n          {(transitionStyles) => (\n            <Box\n              {...others}\n              {...tooltip.getFloatingProps({\n                ref: tooltip.floating,\n                className: classes.tooltip,\n                style: {\n                  ...style,\n                  ...transitionStyles,\n                  zIndex,\n                  top: tooltip.y ?? 0,\n                  left: tooltip.x ?? 0,\n                },\n              })}\n            >\n              {label}\n\n              <FloatingArrow\n                ref={arrowRef}\n                arrowX={tooltip.arrowX}\n                arrowY={tooltip.arrowY}\n                visible={withArrow}\n                position={tooltip.placement}\n                arrowSize={arrowSize}\n                arrowOffset={arrowOffset}\n                arrowRadius={arrowRadius}\n                arrowPosition={arrowPosition}\n                className={classes.arrow}\n              />\n            </Box>\n          )}\n        </Transition>\n      </OptionalPortal>\n\n      {cloneElement(\n        children,\n        tooltip.getReferenceProps({\n          onClick,\n          onMouseEnter,\n          onMouseLeave,\n          onMouseMove: props.onMouseMove,\n          onPointerDown: props.onPointerDown,\n          onPointerEnter: props.onPointerEnter,\n          [refProp]: targetRef,\n          className: cx(className, children.props.className),\n          ...children.props,\n        })\n      )}\n    </>\n  );\n}) as any;\n\n_Tooltip.Group = TooltipGroup;\n_Tooltip.Floating = TooltipFloating;\n\n_Tooltip.displayName = '@mantine/core/Tooltip';\n\nexport const Tooltip: ForwardRefWithStaticComponents<\n  TooltipProps,\n  { Group: typeof TooltipGroup; Floating: typeof TooltipFloating }\n> = _Tooltip;\n"]},"metadata":{},"sourceType":"module"}