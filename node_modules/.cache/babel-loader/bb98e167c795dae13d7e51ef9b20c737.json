{"ast":null,"code":"function getColorValue(color, theme) {\n  if (color === \"dimmed\") {\n    return theme.colorScheme === \"dark\" ? theme.colors.dark[2] : theme.colors.gray[6];\n  }\n  return theme.fn.variant({\n    variant: \"filled\",\n    color,\n    primaryFallback: false\n  }).background;\n}\nexport { getColorValue };","map":{"version":3,"sources":["../../../../src/Box/style-system-props/value-getters/get-color-value.ts"],"names":[],"mappings":"AAAO,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;EAC1C,IAAI,KAAK,KAAK,QAAQ,EAAE;IACtB,OAAO,KAAK,CAAC,WAAW,KAAK,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EACrF;EACE,OAAO,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC;IAAE,OAAO,EAAE,QAAQ;IAAE,KAAK;IAAE,eAAe,EAAE;EAAK,CAAE,CAAC,CAAC,UAAU;AAC1F","sourcesContent":["import { MantineTheme } from '@mantine/styles';\n\nexport function getColorValue(color: any, theme: MantineTheme): string {\n  if (color === 'dimmed') {\n    return theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6];\n  }\n\n  return theme.fn.variant({ variant: 'filled', color, primaryFallback: false }).background;\n}\n"]},"metadata":{},"sourceType":"module"}