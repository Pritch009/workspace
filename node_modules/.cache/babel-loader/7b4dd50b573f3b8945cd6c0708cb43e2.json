{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { useDelayGroupContext, useFloating, offset, shift, flip, arrow, inline, useInteractions, useHover, useFocus, useRole, useDismiss, useDelayGroup } from '@floating-ui/react';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context.js';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\nfunction useTooltip(settings) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(false);\n  const controlled = typeof settings.opened === \"boolean\";\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n  const {\n    delay: groupDelay,\n    currentId,\n    setCurrentId\n  } = useDelayGroupContext();\n  const onChange = useCallback(_opened => {\n    setUncontrolledOpened(_opened);\n    if (_opened) {\n      setCurrentId(uid);\n    }\n  }, [setCurrentId, uid]);\n  const {\n    x,\n    y,\n    reference,\n    floating,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: {\n      arrow: {\n        x: arrowX,\n        y: arrowY\n      } = {}\n    }\n  } = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [offset(settings.offset), shift({\n      padding: 8\n    }), flip(), arrow({\n      element: settings.arrowRef,\n      padding: settings.arrowOffset\n    }), ...(settings.inline ? [inline()] : [])]\n  });\n  const {\n    getReferenceProps,\n    getFloatingProps\n  } = useInteractions([useHover(context, {\n    enabled: settings.events.hover,\n    delay: withinGroup ? groupDelay : {\n      open: settings.openDelay,\n      close: settings.closeDelay\n    },\n    mouseOnly: !settings.events.touch\n  }), useFocus(context, {\n    enabled: settings.events.focus,\n    keyboardOnly: true\n  }), useRole(context, {\n    role: \"tooltip\"\n  }), useDismiss(context, {\n    enabled: typeof settings.opened === void 0\n  }), useDelayGroup(context, {\n    id: uid\n  })]);\n  useFloatingAutoUpdate({\n    opened,\n    position: settings.position,\n    positionDependencies: settings.positionDependencies,\n    floating: {\n      refs,\n      update\n    }\n  });\n  useDidUpdate(() => {\n    var _a;\n    (_a = settings.onPositionChange) == null ? void 0 : _a.call(settings, placement);\n  }, [placement]);\n  const isGroupPhase = opened && currentId && currentId !== uid;\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference,\n    floating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement\n  };\n}\nexport { useTooltip };","map":{"version":3,"sources":["../../src/Tooltip/use-tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { useState, useCallback } from 'react';\nimport {\n  useFloating,\n  flip,\n  arrow,\n  offset,\n  shift,\n  useInteractions,\n  useHover,\n  useFocus,\n  useRole,\n  useDismiss,\n  useDelayGroupContext,\n  useDelayGroup,\n  inline,\n} from '@floating-ui/react';\nimport { useId, useDidUpdate } from '@mantine/hooks';\nimport { useTooltipGroupContext } from './TooltipGroup/TooltipGroup.context';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\n\ninterface UseTooltip {\n  position: FloatingPosition;\n  closeDelay: number;\n  openDelay: number;\n  onPositionChange?(position: FloatingPosition): void;\n  opened?: boolean;\n  offset: number;\n  arrowRef?: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n  events: { hover: boolean; focus: boolean; touch: boolean };\n  positionDependencies: any[];\n  inline: boolean;\n}\n\nexport function useTooltip(settings: UseTooltip) {\n  const [uncontrolledOpened, setUncontrolledOpened] = useState(false);\n  const controlled = typeof settings.opened === 'boolean';\n  const opened = controlled ? settings.opened : uncontrolledOpened;\n  const withinGroup = useTooltipGroupContext();\n  const uid = useId();\n\n  const { delay: groupDelay, currentId, setCurrentId } = useDelayGroupContext();\n\n  const onChange = useCallback(\n    (_opened: boolean) => {\n      setUncontrolledOpened(_opened);\n\n      if (_opened) {\n        setCurrentId(uid);\n      }\n    },\n    [setCurrentId, uid]\n  );\n\n  const {\n    x,\n    y,\n    reference,\n    floating,\n    context,\n    refs,\n    update,\n    placement,\n    middlewareData: { arrow: { x: arrowX, y: arrowY } = {} },\n  } = useFloating({\n    placement: settings.position,\n    open: opened,\n    onOpenChange: onChange,\n    middleware: [\n      offset(settings.offset),\n      shift({ padding: 8 }),\n      flip(),\n      arrow({ element: settings.arrowRef, padding: settings.arrowOffset }),\n      ...(settings.inline ? [inline()] : []),\n    ],\n  });\n\n  const { getReferenceProps, getFloatingProps } = useInteractions([\n    useHover(context, {\n      enabled: settings.events.hover,\n      delay: withinGroup ? groupDelay : { open: settings.openDelay, close: settings.closeDelay },\n      mouseOnly: !settings.events.touch,\n    }),\n    useFocus(context, { enabled: settings.events.focus, keyboardOnly: true }),\n    useRole(context, { role: 'tooltip' }),\n    // cannot be used with controlled tooltip, page jumps\n    useDismiss(context, { enabled: typeof settings.opened === undefined }),\n    useDelayGroup(context, { id: uid }),\n  ]);\n\n  useFloatingAutoUpdate({\n    opened,\n    position: settings.position,\n    positionDependencies: settings.positionDependencies,\n    floating: { refs, update },\n  });\n\n  useDidUpdate(() => {\n    settings.onPositionChange?.(placement);\n  }, [placement]);\n\n  const isGroupPhase = opened && currentId && currentId !== uid;\n\n  return {\n    x,\n    y,\n    arrowX,\n    arrowY,\n    reference,\n    floating,\n    getFloatingProps,\n    getReferenceProps,\n    isGroupPhase,\n    opened,\n    placement,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}