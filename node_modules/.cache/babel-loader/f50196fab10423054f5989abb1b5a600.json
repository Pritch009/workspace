{"ast":null,"code":"import $fnFM9$babelruntimehelpersesmextends from \"@babel/runtime/helpers/esm/extends\";\nimport { forwardRef as $fnFM9$forwardRef, useState as $fnFM9$useState, createElement as $fnFM9$createElement, useRef as $fnFM9$useRef, Fragment as $fnFM9$Fragment, useEffect as $fnFM9$useEffect, useCallback as $fnFM9$useCallback, useReducer as $fnFM9$useReducer } from \"react\";\nimport { Primitive as $fnFM9$Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence as $fnFM9$Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope as $fnFM9$createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs as $fnFM9$useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef as $fnFM9$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection as $fnFM9$useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect as $fnFM9$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp as $fnFM9$clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers as $fnFM9$composeEventHandlers } from \"@radix-ui/primitive\";\nfunction $6c2e24571c90391f$export$3e6543de14f8614f(initialState, machine) {\n  return $fnFM9$useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState !== null && nextState !== void 0 ? nextState : state;\n  }, initialState);\n}\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$SCROLL_AREA_NAME = 'ScrollArea';\nconst [$57acba87d6e25586$var$createScrollAreaContext, $57acba87d6e25586$export$488468afe3a6f2b1] = $fnFM9$createContextScope($57acba87d6e25586$var$SCROLL_AREA_NAME);\nconst [$57acba87d6e25586$var$ScrollAreaProvider, $57acba87d6e25586$var$useScrollAreaContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLL_AREA_NAME);\nconst $57acba87d6e25586$export$ccf8d8d7bbf3c2cc = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea: __scopeScrollArea,\n    type = 'hover',\n    dir: dir,\n    scrollHideDelay = 600,\n    ...scrollAreaProps\n  } = props;\n  const [scrollArea, setScrollArea] = $fnFM9$useState(null);\n  const [viewport, setViewport] = $fnFM9$useState(null);\n  const [content, setContent] = $fnFM9$useState(null);\n  const [scrollbarX, setScrollbarX] = $fnFM9$useState(null);\n  const [scrollbarY, setScrollbarY] = $fnFM9$useState(null);\n  const [cornerWidth, setCornerWidth] = $fnFM9$useState(0);\n  const [cornerHeight, setCornerHeight] = $fnFM9$useState(0);\n  const [scrollbarXEnabled, setScrollbarXEnabled] = $fnFM9$useState(false);\n  const [scrollbarYEnabled, setScrollbarYEnabled] = $fnFM9$useState(false);\n  const composedRefs = $fnFM9$useComposedRefs(forwardedRef, node => setScrollArea(node));\n  const direction = $fnFM9$useDirection(dir);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaProvider, {\n    scope: __scopeScrollArea,\n    type: type,\n    dir: direction,\n    scrollHideDelay: scrollHideDelay,\n    scrollArea: scrollArea,\n    viewport: viewport,\n    onViewportChange: setViewport,\n    content: content,\n    onContentChange: setContent,\n    scrollbarX: scrollbarX,\n    onScrollbarXChange: setScrollbarX,\n    scrollbarXEnabled: scrollbarXEnabled,\n    onScrollbarXEnabledChange: setScrollbarXEnabled,\n    scrollbarY: scrollbarY,\n    onScrollbarYChange: setScrollbarY,\n    scrollbarYEnabled: scrollbarYEnabled,\n    onScrollbarYEnabledChange: setScrollbarYEnabled,\n    onCornerWidthChange: setCornerWidth,\n    onCornerHeightChange: setCornerHeight\n  }, /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    dir: direction\n  }, scrollAreaProps, {\n    ref: composedRefs,\n    style: {\n      position: 'relative',\n      // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n      ['--radix-scroll-area-corner-width']: cornerWidth + 'px',\n      ['--radix-scroll-area-corner-height']: cornerHeight + 'px',\n      ...props.style\n    }\n  })));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$ccf8d8d7bbf3c2cc, {\n  displayName: $57acba87d6e25586$var$SCROLL_AREA_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$VIEWPORT_NAME = 'ScrollAreaViewport';\nconst $57acba87d6e25586$export$a21cbf9f11fca853 = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea: __scopeScrollArea,\n    children: children,\n    ...viewportProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$VIEWPORT_NAME, __scopeScrollArea);\n  const ref = $fnFM9$useRef(null);\n  const composedRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onViewportChange);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Fragment, null, /*#__PURE__*/$fnFM9$createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`\n    }\n  }), /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    \"data-radix-scroll-area-viewport\": \"\"\n  }, viewportProps, {\n    ref: composedRefs,\n    style: {\n      /**\n      * We don't support `visible` because the intention is to have at least one scrollbar\n      * if this component is used and `visible` will behave like `auto` in that case\n      * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n      *\n      * We don't handle `auto` because the intention is for the native implementation\n      * to be hidden if using this component. We just want to ensure the node is scrollable\n      * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n      * the browser from having to work out whether to render native scrollbars or not,\n      * we tell it to with the intention of hiding them in CSS.\n      */\n      overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n      overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n      ...props.style\n    }\n  }), /*#__PURE__*/$fnFM9$createElement(\"div\", {\n    ref: context.onContentChange,\n    style: {\n      minWidth: '100%',\n      display: 'table'\n    }\n  }, children)));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$a21cbf9f11fca853, {\n  displayName: $57acba87d6e25586$var$VIEWPORT_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$SCROLLBAR_NAME = 'ScrollAreaScrollbar';\nconst $57acba87d6e25586$export$2fabd85d0eba3c57 = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const {\n    onScrollbarXEnabledChange: onScrollbarXEnabledChange,\n    onScrollbarYEnabledChange: onScrollbarYEnabledChange\n  } = context;\n  const isHorizontal = props.orientation === 'horizontal';\n  $fnFM9$useEffect(() => {\n    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n    return () => {\n      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n    };\n  }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n  return context.type === 'hover' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarHover, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'scroll' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarScroll, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'auto' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef,\n    forceMount: forceMount\n  })) : context.type === 'always' ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: forwardedRef\n  })) : null;\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$2fabd85d0eba3c57, {\n  displayName: $57acba87d6e25586$var$SCROLLBAR_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$ScrollAreaScrollbarHover = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = $fnFM9$useState(false);\n  $fnFM9$useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || visible\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarAuto, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": visible ? 'visible' : 'hidden'\n  }, scrollbarProps, {\n    ref: forwardedRef\n  })));\n});\nconst $57acba87d6e25586$var$ScrollAreaScrollbarScroll = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = $6c2e24571c90391f$export$3e6543de14f8614f('hidden', {\n    hidden: {\n      SCROLL: 'scrolling'\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting'\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle'\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting'\n    }\n  });\n  $fnFM9$useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  $fnFM9$useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || state !== 'hidden'\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": state === 'hidden' ? 'hidden' : 'visible'\n  }, scrollbarProps, {\n    ref: forwardedRef,\n    onPointerEnter: $fnFM9$composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER')),\n    onPointerLeave: $fnFM9$composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))\n  })));\n});\nconst $57acba87d6e25586$var$ScrollAreaScrollbarAuto = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const {\n    forceMount: forceMount,\n    ...scrollbarProps\n  } = props;\n  const [visible, setVisible] = $fnFM9$useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = $57acba87d6e25586$var$useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  $57acba87d6e25586$var$useResizeObserver(context.viewport, handleResize);\n  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || visible\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarVisible, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": visible ? 'visible' : 'hidden'\n  }, scrollbarProps, {\n    ref: forwardedRef\n  })));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$ScrollAreaScrollbarVisible = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    orientation = 'vertical',\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = $fnFM9$useRef(null);\n  const pointerOffsetRef = $fnFM9$useRef(0);\n  const [sizes, setSizes] = $fnFM9$useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: {\n      size: 0,\n      paddingStart: 0,\n      paddingEnd: 0\n    }\n  });\n  const thumbRatio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes: sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: thumb => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: pointerPos => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === 'horizontal') return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarX, $fnFM9$babelruntimehelpersesmextends({}, commonProps, {\n    ref: forwardedRef,\n    onThumbPositionChange: () => {\n      if (context.viewport && thumbRef.current) {\n        const scrollPos = context.viewport.scrollLeft;\n        const offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n        thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n      }\n    },\n    onWheelScroll: scrollPos => {\n      if (context.viewport) context.viewport.scrollLeft = scrollPos;\n    },\n    onDragScroll: pointerPos => {\n      if (context.viewport) context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n    }\n  }));\n  if (orientation === 'vertical') return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarY, $fnFM9$babelruntimehelpersesmextends({}, commonProps, {\n    ref: forwardedRef,\n    onThumbPositionChange: () => {\n      if (context.viewport && thumbRef.current) {\n        const scrollPos = context.viewport.scrollTop;\n        const offset = $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes);\n        thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n      }\n    },\n    onWheelScroll: scrollPos => {\n      if (context.viewport) context.viewport.scrollTop = scrollPos;\n    },\n    onDragScroll: pointerPos => {\n      if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n    }\n  }));\n  return null;\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$ScrollAreaScrollbarX = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    sizes: sizes,\n    onSizesChange: onSizesChange,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = $fnFM9$useState();\n  const ref = $fnFM9$useRef(null);\n  const composeRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  $fnFM9$useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, $fnFM9$babelruntimehelpersesmextends({\n    \"data-orientation\": \"horizontal\"\n  }, scrollbarProps, {\n    ref: composeRefs,\n    sizes: sizes,\n    style: {\n      bottom: 0,\n      left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n      right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n      ['--radix-scroll-area-thumb-width']: $57acba87d6e25586$var$getThumbSize(sizes) + 'px',\n      ...props.style\n    },\n    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.x),\n    onDragScroll: pointerPos => props.onDragScroll(pointerPos.x),\n    onWheelScroll: (event, maxScrollPos) => {\n      if (context.viewport) {\n        const scrollPos = context.viewport.scrollLeft + event.deltaX;\n        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar\n        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();\n      }\n    },\n    onResize: () => {\n      if (ref.current && context.viewport && computedStyle) onSizesChange({\n        content: context.viewport.scrollWidth,\n        viewport: context.viewport.offsetWidth,\n        scrollbar: {\n          size: ref.current.clientWidth,\n          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingLeft),\n          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingRight)\n        }\n      });\n    }\n  }));\n});\nconst $57acba87d6e25586$var$ScrollAreaScrollbarY = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    sizes: sizes,\n    onSizesChange: onSizesChange,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = $fnFM9$useState();\n  const ref = $fnFM9$useRef(null);\n  const composeRefs = $fnFM9$useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  $fnFM9$useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaScrollbarImpl, $fnFM9$babelruntimehelpersesmextends({\n    \"data-orientation\": \"vertical\"\n  }, scrollbarProps, {\n    ref: composeRefs,\n    sizes: sizes,\n    style: {\n      top: 0,\n      right: context.dir === 'ltr' ? 0 : undefined,\n      left: context.dir === 'rtl' ? 0 : undefined,\n      bottom: 'var(--radix-scroll-area-corner-height)',\n      ['--radix-scroll-area-thumb-height']: $57acba87d6e25586$var$getThumbSize(sizes) + 'px',\n      ...props.style\n    },\n    onThumbPointerDown: pointerPos => props.onThumbPointerDown(pointerPos.y),\n    onDragScroll: pointerPos => props.onDragScroll(pointerPos.y),\n    onWheelScroll: (event, maxScrollPos) => {\n      if (context.viewport) {\n        const scrollPos = context.viewport.scrollTop + event.deltaY;\n        props.onWheelScroll(scrollPos); // prevent window scroll when wheeling on scrollbar\n        if ($57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) event.preventDefault();\n      }\n    },\n    onResize: () => {\n      if (ref.current && context.viewport && computedStyle) onSizesChange({\n        content: context.viewport.scrollHeight,\n        viewport: context.viewport.offsetHeight,\n        scrollbar: {\n          size: ref.current.clientHeight,\n          paddingStart: $57acba87d6e25586$var$toInt(computedStyle.paddingTop),\n          paddingEnd: $57acba87d6e25586$var$toInt(computedStyle.paddingBottom)\n        }\n      });\n    }\n  }));\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst [$57acba87d6e25586$var$ScrollbarProvider, $57acba87d6e25586$var$useScrollbarContext] = $57acba87d6e25586$var$createScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME);\nconst $57acba87d6e25586$var$ScrollAreaScrollbarImpl = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea: __scopeScrollArea,\n    sizes: sizes,\n    hasThumb: hasThumb,\n    onThumbChange: onThumbChange,\n    onThumbPointerUp: onThumbPointerUp,\n    onThumbPointerDown: onThumbPointerDown,\n    onThumbPositionChange: onThumbPositionChange,\n    onDragScroll: onDragScroll,\n    onWheelScroll: onWheelScroll,\n    onResize: onResize,\n    ...scrollbarProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = $fnFM9$useState(null);\n  const composeRefs = $fnFM9$useComposedRefs(forwardedRef, node => setScrollbar(node));\n  const rectRef = $fnFM9$useRef(null);\n  const prevWebkitUserSelectRef = $fnFM9$useRef('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = $fnFM9$useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = $fnFM9$useCallbackRef(onThumbPositionChange);\n  const handleResize = $57acba87d6e25586$var$useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({\n        x: x,\n        y: y\n      });\n    }\n  }\n  /**\n  * We bind wheel event imperatively so we can switch off passive\n  * mode for document wheel event to allow it to be prevented\n  */\n  $fnFM9$useEffect(() => {\n    const handleWheel = event => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar === null || scrollbar === void 0 ? void 0 : scrollbar.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, {\n      passive: false\n    });\n    return () => document.removeEventListener('wheel', handleWheel, {\n      passive: false\n    });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  /**\n  * Update thumb position on sizes change\n  */\n  $fnFM9$useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  $57acba87d6e25586$var$useResizeObserver(scrollbar, handleResize);\n  $57acba87d6e25586$var$useResizeObserver(context.content, handleResize);\n  return /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollbarProvider, {\n    scope: __scopeScrollArea,\n    scrollbar: scrollbar,\n    hasThumb: hasThumb,\n    onThumbChange: $fnFM9$useCallbackRef(onThumbChange),\n    onThumbPointerUp: $fnFM9$useCallbackRef(onThumbPointerUp),\n    onThumbPositionChange: handleThumbPositionChange,\n    onThumbPointerDown: $fnFM9$useCallbackRef(onThumbPointerDown)\n  }, /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({}, scrollbarProps, {\n    ref: composeRefs,\n    style: {\n      position: 'absolute',\n      ...scrollbarProps.style\n    },\n    onPointerDown: $fnFM9$composeEventHandlers(props.onPointerDown, event => {\n      const mainPointer = 0;\n      if (event.button === mainPointer) {\n        const element = event.target;\n        element.setPointerCapture(event.pointerId);\n        rectRef.current = scrollbar.getBoundingClientRect(); // pointer capture doesn't prevent text selection in Safari\n        // so we remove text selection manually when scrolling\n        prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n        document.body.style.webkitUserSelect = 'none';\n        handleDragScroll(event);\n      }\n    }),\n    onPointerMove: $fnFM9$composeEventHandlers(props.onPointerMove, handleDragScroll),\n    onPointerUp: $fnFM9$composeEventHandlers(props.onPointerUp, event => {\n      const element = event.target;\n      if (element.hasPointerCapture(event.pointerId)) element.releasePointerCapture(event.pointerId);\n      document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n      rectRef.current = null;\n    })\n  })));\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$THUMB_NAME = 'ScrollAreaThumb';\nconst $57acba87d6e25586$export$9fba1154677d7cd2 = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    forceMount: forceMount,\n    ...thumbProps\n  } = props;\n  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, props.__scopeScrollArea);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Presence, {\n    present: forceMount || scrollbarContext.hasThumb\n  }, /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaThumbImpl, $fnFM9$babelruntimehelpersesmextends({\n    ref: forwardedRef\n  }, thumbProps)));\n});\nconst $57acba87d6e25586$var$ScrollAreaThumbImpl = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea: __scopeScrollArea,\n    style: style,\n    ...thumbProps\n  } = props;\n  const scrollAreaContext = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);\n  const scrollbarContext = $57acba87d6e25586$var$useScrollbarContext($57acba87d6e25586$var$THUMB_NAME, __scopeScrollArea);\n  const {\n    onThumbPositionChange: onThumbPositionChange\n  } = scrollbarContext;\n  const composedRef = $fnFM9$useComposedRefs(forwardedRef, node => scrollbarContext.onThumbChange(node));\n  const removeUnlinkedScrollListenerRef = $fnFM9$useRef();\n  const debounceScrollEnd = $57acba87d6e25586$var$useDebounceCallback(() => {\n    if (removeUnlinkedScrollListenerRef.current) {\n      removeUnlinkedScrollListenerRef.current();\n      removeUnlinkedScrollListenerRef.current = undefined;\n    }\n  }, 100);\n  $fnFM9$useEffect(() => {\n    const viewport = scrollAreaContext.viewport;\n    if (viewport) {\n      /**\n      * We only bind to native scroll event so we know when scroll starts and ends.\n      * When scroll starts we start a requestAnimationFrame loop that checks for\n      * changes to scroll position. That rAF loop triggers our thumb position change\n      * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n      * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n      */\n      const handleScroll = () => {\n        debounceScrollEnd();\n        if (!removeUnlinkedScrollListenerRef.current) {\n          const listener = $57acba87d6e25586$var$addUnlinkedScrollListener(viewport, onThumbPositionChange);\n          removeUnlinkedScrollListenerRef.current = listener;\n          onThumbPositionChange();\n        }\n      };\n      onThumbPositionChange();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n  return /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({\n    \"data-state\": scrollbarContext.hasThumb ? 'visible' : 'hidden'\n  }, thumbProps, {\n    ref: composedRef,\n    style: {\n      width: 'var(--radix-scroll-area-thumb-width)',\n      height: 'var(--radix-scroll-area-thumb-height)',\n      ...style\n    },\n    onPointerDownCapture: $fnFM9$composeEventHandlers(props.onPointerDownCapture, event => {\n      const thumb = event.target;\n      const thumbRect = thumb.getBoundingClientRect();\n      const x = event.clientX - thumbRect.left;\n      const y = event.clientY - thumbRect.top;\n      scrollbarContext.onThumbPointerDown({\n        x: x,\n        y: y\n      });\n    }),\n    onPointerUp: $fnFM9$composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n  }));\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$9fba1154677d7cd2, {\n  displayName: $57acba87d6e25586$var$THUMB_NAME\n});\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$CORNER_NAME = 'ScrollAreaCorner';\nconst $57acba87d6e25586$export$56969d565df7cc4b = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, props.__scopeScrollArea);\n  const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n  const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n  return hasCorner ? /*#__PURE__*/$fnFM9$createElement($57acba87d6e25586$var$ScrollAreaCornerImpl, $fnFM9$babelruntimehelpersesmextends({}, props, {\n    ref: forwardedRef\n  })) : null;\n});\n/*#__PURE__*/\nObject.assign($57acba87d6e25586$export$56969d565df7cc4b, {\n  displayName: $57acba87d6e25586$var$CORNER_NAME\n});\n/* -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$var$ScrollAreaCornerImpl = /*#__PURE__*/$fnFM9$forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea: __scopeScrollArea,\n    ...cornerProps\n  } = props;\n  const context = $57acba87d6e25586$var$useScrollAreaContext($57acba87d6e25586$var$CORNER_NAME, __scopeScrollArea);\n  const [width1, setWidth] = $fnFM9$useState(0);\n  const [height1, setHeight] = $fnFM9$useState(0);\n  const hasSize = Boolean(width1 && height1);\n  $57acba87d6e25586$var$useResizeObserver(context.scrollbarX, () => {\n    var _context$scrollbarX;\n    const height = ((_context$scrollbarX = context.scrollbarX) === null || _context$scrollbarX === void 0 ? void 0 : _context$scrollbarX.offsetHeight) || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n  $57acba87d6e25586$var$useResizeObserver(context.scrollbarY, () => {\n    var _context$scrollbarY;\n    const width = ((_context$scrollbarY = context.scrollbarY) === null || _context$scrollbarY === void 0 ? void 0 : _context$scrollbarY.offsetWidth) || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n  return hasSize ? /*#__PURE__*/$fnFM9$createElement($fnFM9$Primitive.div, $fnFM9$babelruntimehelpersesmextends({}, cornerProps, {\n    ref: forwardedRef,\n    style: {\n      width: width1,\n      height: height1,\n      position: 'absolute',\n      right: context.dir === 'ltr' ? 0 : undefined,\n      left: context.dir === 'rtl' ? 0 : undefined,\n      bottom: 0,\n      ...props.style\n    }\n  })) : null;\n});\n/* -----------------------------------------------------------------------------------------------*/\nfunction $57acba87d6e25586$var$toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction $57acba87d6e25586$var$getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction $57acba87d6e25586$var$getThumbSize(sizes) {\n  const ratio = $57acba87d6e25586$var$getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio; // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\nfunction $57acba87d6e25586$var$getScrollPositionFromPointer(pointerPos, pointerOffset, sizes) {\n  let dir = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'ltr';\n  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = $57acba87d6e25586$var$linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction $57acba87d6e25586$var$getThumbOffsetFromScroll(scrollPos, sizes) {\n  let dir = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ltr';\n  const thumbSizePx = $57acba87d6e25586$var$getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = $fnFM9$clamp(scrollPos, scrollClampRange);\n  const interpolate = $57acba87d6e25586$var$linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n} // https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction $57acba87d6e25586$var$linearScale(input, output) {\n  return value => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction $57acba87d6e25586$var$isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n} // Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst $57acba87d6e25586$var$addUnlinkedScrollListener = function (node) {\n  let handler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n  let prevPosition = {\n    left: node.scrollLeft,\n    top: node.scrollTop\n  };\n  let rAF = 0;\n  (function loop() {\n    const position = {\n      left: node.scrollLeft,\n      top: node.scrollTop\n    };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction $57acba87d6e25586$var$useDebounceCallback(callback, delay) {\n  const handleCallback = $fnFM9$useCallbackRef(callback);\n  const debounceTimerRef = $fnFM9$useRef(0);\n  $fnFM9$useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return $fnFM9$useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction $57acba87d6e25586$var$useResizeObserver(element, onResize) {\n  const handleResize = $fnFM9$useCallbackRef(onResize);\n  $fnFM9$useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n      * Resize Observer will throw an often benign error that says `ResizeObserver loop\n      * completed with undelivered notifications`. This means that ResizeObserver was not\n      * able to deliver all observations within a single animation frame, so we use\n      * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n      * Further reading: https://github.com/WICG/resize-observer/issues/38\n      */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n/* -----------------------------------------------------------------------------------------------*/\nconst $57acba87d6e25586$export$be92b6f5f03c0fe9 = $57acba87d6e25586$export$ccf8d8d7bbf3c2cc;\nconst $57acba87d6e25586$export$d5c6c08dc2d3ca7 = $57acba87d6e25586$export$a21cbf9f11fca853;\nconst $57acba87d6e25586$export$9a4e88b92edfce6b = $57acba87d6e25586$export$2fabd85d0eba3c57;\nconst $57acba87d6e25586$export$6521433ed15a34db = $57acba87d6e25586$export$9fba1154677d7cd2;\nconst $57acba87d6e25586$export$ac61190d9fc311a9 = $57acba87d6e25586$export$56969d565df7cc4b;\nexport { $57acba87d6e25586$export$488468afe3a6f2b1 as createScrollAreaScope, $57acba87d6e25586$export$ccf8d8d7bbf3c2cc as ScrollArea, $57acba87d6e25586$export$a21cbf9f11fca853 as ScrollAreaViewport, $57acba87d6e25586$export$2fabd85d0eba3c57 as ScrollAreaScrollbar, $57acba87d6e25586$export$9fba1154677d7cd2 as ScrollAreaThumb, $57acba87d6e25586$export$56969d565df7cc4b as ScrollAreaCorner, $57acba87d6e25586$export$be92b6f5f03c0fe9 as Root, $57acba87d6e25586$export$d5c6c08dc2d3ca7 as Viewport, $57acba87d6e25586$export$9a4e88b92edfce6b as Scrollbar, $57acba87d6e25586$export$6521433ed15a34db as Thumb, $57acba87d6e25586$export$ac61190d9fc311a9 as Corner };","map":{"version":3,"sources":["packages/react/scroll-area/src/ScrollArea.tsx","packages/react/scroll-area/src/useStateMachine.ts"],"names":["SCROLL_AREA_NAME","createScrollAreaContext","createScrollAreaScope","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","props","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollArea","setScrollArea","React","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","useComposedRefs","node","direction","useDirection","scrollAreaProps","position","VIEWPORT_NAME","ScrollAreaViewport","children","context","ref","onViewportChange","__html","viewportProps","overflowX","overflowY","onContentChange","minWidth","display","SCROLLBAR_NAME","ScrollAreaScrollbar","forceMount","onScrollbarXEnabledChange","onScrollbarYEnabledChange","isHorizontal","orientation","scrollbarProps","ScrollAreaScrollbarHover","visible","setVisible","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","addEventListener","removeEventListener","ScrollAreaScrollbarScroll","debounceScrollEnd","useDebounceCallback","send","state","useStateMachine","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","scrollDirection","prevScrollPos","handleScroll","scrollPos","hasScrollInDirectionChanged","composeEventHandlers","onPointerEnter","onPointerLeave","ScrollAreaScrollbarAuto","handleResize","isOverflowX","offsetWidth","scrollWidth","isOverflowY","offsetHeight","scrollHeight","useResizeObserver","ScrollAreaScrollbarVisible","thumbRef","pointerOffsetRef","sizes","setSizes","scrollbar","size","paddingStart","paddingEnd","thumbRatio","getThumbRatio","commonProps","onSizesChange","hasThumb","Boolean","onThumbChange","thumb","current","onThumbPointerUp","onThumbPointerDown","pointerPos","getScrollPosition","getScrollPositionFromPointer","scrollLeft","offset","getThumbOffsetFromScroll","style","transform","scrollTop","ScrollAreaScrollbarX","computedStyle","setComputedStyle","composeRefs","onScrollbarXChange","getComputedStyle","bottom","left","right","getThumbSize","x","onDragScroll","event","maxScrollPos","deltaX","onWheelScroll","isScrollingWithinScrollbarBounds","preventDefault","clientWidth","toInt","paddingLeft","paddingRight","ScrollAreaScrollbarY","onScrollbarYChange","top","undefined","y","deltaY","clientHeight","paddingTop","paddingBottom","ScrollbarProvider","useScrollbarContext","ScrollAreaScrollbarImpl","onThumbPositionChange","onResize","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","clientX","clientY","handleWheel","element","target","isScrollbarWheel","contains","document","passive","onPointerDown","mainPointer","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture","THUMB_NAME","ScrollAreaThumb","scrollbarContext","thumbProps","ScrollAreaThumbImpl","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","width","height","onPointerDownCapture","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","hasCorner","ScrollAreaCornerImpl","setWidth","setHeight","hasSize","onCornerHeightChange","onCornerWidthChange","cornerProps","value","parseInt","viewportSize","contentSize","ratio","isNaN","scrollbarPadding","thumbSize","Math","max","pointerOffset","thumbSizePx","thumbCenter","thumbOffsetFromEnd","minPointerPos","maxPointerPos","scrollRange","interpolate","linearScale","maxThumbPos","scrollClampRange","scrollWithoutMomentum","clamp","input","output","handler","prevPosition","rAF","loop","isHorizontalScroll","isVerticalScroll","requestAnimationFrame","cancelAnimationFrame","callback","delay","handleCallback","debounceTimerRef","useLayoutEffect","resizeObserver","ResizeObserver","observe","unobserve","Root","Viewport","Scrollbar","Thumb","Corner","initialState","machine","nextState"],"mappings":"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","sourcesContent":["/// <reference types=\"resize-observer-browser\" />\n\nimport * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useStateMachine } from './useStateMachine';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Sizes = {\n  content: number;\n  viewport: number;\n  scrollbar: {\n    size: number;\n    paddingStart: number;\n    paddingEnd: number;\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_AREA_NAME = 'ScrollArea';\n\ntype ScopedProps<P> = P & { __scopeScrollArea?: Scope };\nconst [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\n\ntype ScrollAreaContextValue = {\n  type: 'auto' | 'always' | 'scroll' | 'hover';\n  dir: Direction;\n  scrollHideDelay: number;\n  scrollArea: ScrollAreaElement | null;\n  viewport: ScrollAreaViewportElement | null;\n  onViewportChange(viewport: ScrollAreaViewportElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: ScrollAreaScrollbarElement | null;\n  onScrollbarXChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: ScrollAreaScrollbarElement | null;\n  onScrollbarYChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n};\n\nconst [ScrollAreaProvider, useScrollAreaContext] =\n  createScrollAreaContext<ScrollAreaContextValue>(SCROLL_AREA_NAME);\n\ntype ScrollAreaElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ScrollAreaProps extends PrimitiveDivProps {\n  type?: ScrollAreaContextValue['type'];\n  dir?: ScrollAreaContextValue['dir'];\n  scrollHideDelay?: number;\n}\n\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>(\n  (props: ScopedProps<ScrollAreaProps>, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = 'hover',\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React.useState<ScrollAreaElement | null>(null);\n    const [viewport, setViewport] = React.useState<ScrollAreaViewportElement | null>(null);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [scrollbarY, setScrollbarY] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [cornerWidth, setCornerWidth] = React.useState(0);\n    const [cornerHeight, setCornerHeight] = React.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n\n    return (\n      <ScrollAreaProvider\n        scope={__scopeScrollArea}\n        type={type}\n        dir={direction}\n        scrollHideDelay={scrollHideDelay}\n        scrollArea={scrollArea}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        content={content}\n        onContentChange={setContent}\n        scrollbarX={scrollbarX}\n        onScrollbarXChange={setScrollbarX}\n        scrollbarXEnabled={scrollbarXEnabled}\n        onScrollbarXEnabledChange={setScrollbarXEnabled}\n        scrollbarY={scrollbarY}\n        onScrollbarYChange={setScrollbarY}\n        scrollbarYEnabled={scrollbarYEnabled}\n        onScrollbarYEnabledChange={setScrollbarYEnabled}\n        onCornerWidthChange={setCornerWidth}\n        onCornerHeightChange={setCornerHeight}\n      >\n        <Primitive.div\n          dir={direction}\n          {...scrollAreaProps}\n          ref={composedRefs}\n          style={{\n            position: 'relative',\n            // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n            ['--radix-scroll-area-corner-width' as any]: cornerWidth + 'px',\n            ['--radix-scroll-area-corner-height' as any]: cornerHeight + 'px',\n            ...props.style,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  }\n);\n\nScrollArea.displayName = SCROLL_AREA_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ScrollAreaViewport';\n\ntype ScrollAreaViewportElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaViewportProps extends PrimitiveDivProps {}\n\nconst ScrollAreaViewport = React.forwardRef<ScrollAreaViewportElement, ScrollAreaViewportProps>(\n  (props: ScopedProps<ScrollAreaViewportProps>, forwardedRef) => {\n    const { __scopeScrollArea, children, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React.useRef<ScrollAreaViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Primitive.div\n          data-radix-scroll-area-viewport=\"\"\n          {...viewportProps}\n          ref={composedRefs}\n          style={{\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflowed#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n            overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n            ...props.style,\n          }}\n        >\n          {/**\n           * `display: table` ensures our content div will match the size of its children in both\n           * horizontal and vertical axis so we can determine if scroll width/height changed and\n           * recalculate thumb sizes. This doesn't account for children with *percentage*\n           * widths that change. We'll wait to see what use-cases consumers come up with there\n           * before trying to resolve it.\n           */}\n          <div ref={context.onContentChange} style={{ minWidth: '100%', display: 'table' }}>\n            {children}\n          </div>\n        </Primitive.div>\n      </>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLLBAR_NAME = 'ScrollAreaScrollbar';\n\ntype ScrollAreaScrollbarElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbar = React.forwardRef<ScrollAreaScrollbarElement, ScrollAreaScrollbarProps>(\n  (props: ScopedProps<ScrollAreaScrollbarProps>, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarHoverElement = ScrollAreaScrollbarAutoElement;\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarHover = React.forwardRef<\n  ScrollAreaScrollbarHoverElement,\n  ScrollAreaScrollbarHoverProps\n>((props: ScopedProps<ScrollAreaScrollbarHoverProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarAuto\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarScrollElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarScrollProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarScroll = React.forwardRef<\n  ScrollAreaScrollbarScrollElement,\n  ScrollAreaScrollbarScrollProps\n>((props: ScopedProps<ScrollAreaScrollbarScrollProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = useStateMachine('hidden', {\n    hidden: {\n      SCROLL: 'scrolling',\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting',\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle',\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting',\n    },\n  });\n\n  React.useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n\n  React.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n\n  return (\n    <Presence present={forceMount || state !== 'hidden'}>\n      <ScrollAreaScrollbarVisible\n        data-state={state === 'hidden' ? 'hidden' : 'visible'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER'))}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarAutoElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarAutoProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarAuto = React.forwardRef<\n  ScrollAreaScrollbarAutoElement,\n  ScrollAreaScrollbarAutoProps\n>((props: ScopedProps<ScrollAreaScrollbarAutoProps>, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React.useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarVisibleElement = ScrollAreaScrollbarAxisElement;\ninterface ScrollAreaScrollbarVisibleProps\n  extends Omit<ScrollAreaScrollbarAxisProps, keyof ScrollAreaScrollbarAxisPrivateProps> {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst ScrollAreaScrollbarVisible = React.forwardRef<\n  ScrollAreaScrollbarVisibleElement,\n  ScrollAreaScrollbarVisibleProps\n>((props: ScopedProps<ScrollAreaScrollbarVisibleProps>, forwardedRef) => {\n  const { orientation = 'vertical', ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React.useRef<ScrollAreaThumbElement | null>(null);\n  const pointerOffsetRef = React.useRef(0);\n  const [sizes, setSizes] = React.useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  type UncommonProps = 'onThumbPositionChange' | 'onDragScroll' | 'onWheelScroll';\n  const commonProps: Omit<ScrollAreaScrollbarAxisPrivateProps, UncommonProps> = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => (thumbRef.current = thumb),\n    onThumbPointerUp: () => (pointerOffsetRef.current = 0),\n    onThumbPointerDown: (pointerPos) => (pointerOffsetRef.current = pointerPos),\n  };\n\n  function getScrollPosition(pointerPos: number, dir?: Direction) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n\n  if (orientation === 'horizontal') {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === 'vertical') {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarAxisPrivateProps = {\n  hasThumb: boolean;\n  sizes: Sizes;\n  onSizesChange(sizes: Sizes): void;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerDown(pointerPos: number): void;\n  onThumbPointerUp(): void;\n  onThumbPositionChange(): void;\n  onWheelScroll(scrollPos: number): void;\n  onDragScroll(pointerPos: number): void;\n};\n\ntype ScrollAreaScrollbarAxisElement = ScrollAreaScrollbarImplElement;\ninterface ScrollAreaScrollbarAxisProps\n  extends Omit<ScrollAreaScrollbarImplProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarAxisPrivateProps {}\n\nconst ScrollAreaScrollbarX = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"horizontal\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        bottom: 0,\n        left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        ['--radix-scroll-area-thumb-width' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\nconst ScrollAreaScrollbarY = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"vertical\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        top: 0,\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 'var(--radix-scroll-area-corner-height)',\n        ['--radix-scroll-area-thumb-height' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollbarContext = {\n  hasThumb: boolean;\n  scrollbar: ScrollAreaScrollbarElement | null;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerUp(): void;\n  onThumbPointerDown(pointerPos: { x: number; y: number }): void;\n  onThumbPositionChange(): void;\n};\n\nconst [ScrollbarProvider, useScrollbarContext] =\n  createScrollAreaContext<ScrollbarContext>(SCROLLBAR_NAME);\n\ntype ScrollAreaScrollbarImplElement = React.ElementRef<typeof Primitive.div>;\ntype ScrollAreaScrollbarImplPrivateProps = {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContext['onThumbChange'];\n  onThumbPointerUp: ScrollbarContext['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContext['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContext['onThumbPositionChange'];\n  onWheelScroll(event: WheelEvent, maxScrollPos: number): void;\n  onDragScroll(pointerPos: { x: number; y: number }): void;\n  onResize(): void;\n};\ninterface ScrollAreaScrollbarImplProps\n  extends PrimitiveDivProps,\n    ScrollAreaScrollbarImplPrivateProps {}\n\nconst ScrollAreaScrollbarImpl = React.forwardRef<\n  ScrollAreaScrollbarImplElement,\n  ScrollAreaScrollbarImplProps\n>((props: ScopedProps<ScrollAreaScrollbarImplProps>, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React.useState<ScrollAreaScrollbarElement | null>(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<ClientRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  function handleDragScroll(event: React.PointerEvent<HTMLElement>) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n\n  /**\n   * We bind wheel event imperatively so we can switch off passive\n   * mode for document wheel event to allow it to be prevented\n   */\n  React.useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  /**\n   * Update thumb position on sizes change\n   */\n  React.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      scope={__scopeScrollArea}\n      scrollbar={scrollbar}\n      hasThumb={hasThumb}\n      onThumbChange={useCallbackRef(onThumbChange)}\n      onThumbPointerUp={useCallbackRef(onThumbPointerUp)}\n      onThumbPositionChange={handleThumbPositionChange}\n      onThumbPointerDown={useCallbackRef(onThumbPointerDown)}\n    >\n      <Primitive.div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            // pointer capture doesn't prevent text selection in Safari\n            // so we remove text selection manually when scrolling\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          if (element.hasPointerCapture(event.pointerId)) {\n            element.releasePointerCapture(event.pointerId);\n          }\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'ScrollAreaThumb';\n\ntype ScrollAreaThumbElement = ScrollAreaThumbImplElement;\ninterface ScrollAreaThumbProps extends ScrollAreaThumbImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ScrollAreaThumb = React.forwardRef<ScrollAreaThumbElement, ScrollAreaThumbProps>(\n  (props: ScopedProps<ScrollAreaThumbProps>, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return (\n      <Presence present={forceMount || scrollbarContext.hasThumb}>\n        <ScrollAreaThumbImpl ref={forwardedRef} {...thumbProps} />\n      </Presence>\n    );\n  }\n);\n\ntype ScrollAreaThumbImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaThumbImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaThumbImpl = React.forwardRef<ScrollAreaThumbImplElement, ScrollAreaThumbImplProps>(\n  (props: ScopedProps<ScrollAreaThumbImplProps>, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React.useRef<() => void>();\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    React.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        /**\n         * We only bind to native scroll event so we know when scroll starts and ends.\n         * When scroll starts we start a requestAnimationFrame loop that checks for\n         * changes to scroll position. That rAF loop triggers our thumb position change\n         * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n         * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n         */\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener('scroll', handleScroll);\n        return () => viewport.removeEventListener('scroll', handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return (\n      <Primitive.div\n        data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n        {...thumbProps}\n        ref={composedRef}\n        style={{\n          width: 'var(--radix-scroll-area-thumb-width)',\n          height: 'var(--radix-scroll-area-thumb-height)',\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target as HTMLElement;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n      />\n    );\n  }\n);\n\nScrollAreaThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\n\nconst CORNER_NAME = 'ScrollAreaCorner';\n\ntype ScrollAreaCornerElement = ScrollAreaCornerImplElement;\ninterface ScrollAreaCornerProps extends ScrollAreaCornerImplProps {}\n\nconst ScrollAreaCorner = React.forwardRef<ScrollAreaCornerElement, ScrollAreaCornerProps>(\n  (props: ScopedProps<ScrollAreaCornerProps>, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n    return hasCorner ? <ScrollAreaCornerImpl {...props} ref={forwardedRef} /> : null;\n  }\n);\n\nScrollAreaCorner.displayName = CORNER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaCornerImplElement = React.ElementRef<typeof Primitive.div>;\ninterface ScrollAreaCornerImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaCornerImpl = React.forwardRef<\n  ScrollAreaCornerImplElement,\n  ScrollAreaCornerImplProps\n>((props: ScopedProps<ScrollAreaCornerImplProps>, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const hasSize = Boolean(width && height);\n\n  useResizeObserver(context.scrollbarX, () => {\n    const height = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n\n  useResizeObserver(context.scrollbarY, () => {\n    const width = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n\n  return hasSize ? (\n    <Primitive.div\n      {...cornerProps}\n      ref={forwardedRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 0,\n        ...props.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n\nfunction getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\n\nfunction getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\n\nfunction getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n\nfunction getThumbOffsetFromScroll(scrollPos: number, sizes: Sizes, dir: Direction = 'ltr') {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst addUnlinkedScrollListener = (node: HTMLElement, handler = () => {}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\n\nfunction useDebounceCallback(callback: () => void, delay: number) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React.useRef(0);\n  React.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ScrollArea;\nconst Viewport = ScrollAreaViewport;\nconst Scrollbar = ScrollAreaScrollbar;\nconst Thumb = ScrollAreaThumb;\nconst Corner = ScrollAreaCorner;\n\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n};\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n};\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"]},"metadata":{},"sourceType":"module"}