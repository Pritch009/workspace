{"ast":null,"code":"import { forwardRef, cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { isElement } from '@mantine/utils';\nimport { useComponentDefaultProps, clsx } from '@mantine/styles';\nimport { usePopoverContext } from '../Popover.context.js';\nimport { POPOVER_ERRORS } from '../Popover.errors.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  refProp: \"ref\",\n  popupType: \"dialog\"\n};\nconst PopoverTarget = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"PopoverTarget\", defaultProps, props),\n    {\n      children,\n      refProp,\n      popupType\n    } = _a,\n    others = __objRest(_a, [\"children\", \"refProp\", \"popupType\"]);\n  if (!isElement(children)) {\n    throw new Error(POPOVER_ERRORS.children);\n  }\n  const forwardedProps = others;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, children.ref, ref);\n  const accessibleProps = ctx.withRoles ? {\n    \"aria-haspopup\": popupType,\n    \"aria-expanded\": ctx.opened,\n    \"aria-controls\": ctx.getDropdownId(),\n    id: ctx.getTargetId()\n  } : {};\n  return cloneElement(children, __spreadValues(__spreadProps(__spreadValues(__spreadValues(__spreadValues({}, forwardedProps), accessibleProps), ctx.targetProps), {\n    className: clsx(ctx.targetProps.className, forwardedProps.className, children.props.className),\n    [refProp]: targetRef\n  }), !ctx.controlled ? {\n    onClick: ctx.onToggle\n  } : null));\n});\nPopoverTarget.displayName = \"@mantine/core/PopoverTarget\";\nexport { PopoverTarget };","map":{"version":3,"sources":["../../../src/Popover/PopoverTarget/PopoverTarget.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { cloneElement, forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { isElement } from '@mantine/utils';\nimport { clsx, useComponentDefaultProps } from '@mantine/styles';\nimport { usePopoverContext } from '../Popover.context';\nimport { POPOVER_ERRORS } from '../Popover.errors';\n\nexport interface PopoverTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that should be used to get element ref */\n  refProp?: string;\n\n  /** Popup accessible type, 'dialog' by default */\n  popupType?: string;\n}\n\nconst defaultProps: Partial<PopoverTargetProps> = {\n  refProp: 'ref',\n  popupType: 'dialog',\n};\n\nexport const PopoverTarget = forwardRef<HTMLElement, PopoverTargetProps>((props, ref) => {\n  const { children, refProp, popupType, ...others } = useComponentDefaultProps(\n    'PopoverTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(POPOVER_ERRORS.children);\n  }\n\n  const forwardedProps = others as any;\n  const ctx = usePopoverContext();\n  const targetRef = useMergedRef(ctx.reference, (children as any).ref, ref);\n\n  const accessibleProps = ctx.withRoles\n    ? {\n        'aria-haspopup': popupType,\n        'aria-expanded': ctx.opened,\n        'aria-controls': ctx.getDropdownId(),\n        id: ctx.getTargetId(),\n      }\n    : {};\n\n  return cloneElement(children, {\n    ...forwardedProps,\n    ...accessibleProps,\n    ...ctx.targetProps,\n    className: clsx(ctx.targetProps.className, forwardedProps.className, children.props.className),\n    [refProp]: targetRef,\n    ...(!ctx.controlled ? { onClick: ctx.onToggle } : null),\n  });\n});\n\nPopoverTarget.displayName = '@mantine/core/PopoverTarget';\n"]},"metadata":{},"sourceType":"module"}