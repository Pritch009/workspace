{"ast":null,"code":"function filterProps(props) {\n  return Object.keys(props).reduce((acc, key) => {\n    if (props[key] !== void 0) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {});\n}\nexport { filterProps };","map":{"version":3,"sources":["../../../../src/theme/utils/filter-props/filter-props.ts"],"names":[],"mappings":"AAAO,SAAS,WAAW,CAAC,KAAK,EAAE;EACjC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK;IAC7C,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;MACzB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC;IAC3B;IACI,OAAO,GAAG;EACd,CAAG,EAAE,CAAA,CAAE,CAAC;AACR","sourcesContent":["type FilterPropsRes<T extends Record<string, any>> = {\n  [Key in keyof T]-?: T[Key] extends undefined ? never : T[Key];\n};\n\nexport function filterProps<T extends Record<string, any>>(props: T) {\n  return Object.keys(props).reduce<FilterPropsRes<T>>((acc, key: keyof T) => {\n    if (props[key] !== undefined) {\n      acc[key] = props[key];\n    }\n    return acc;\n  }, {} as FilterPropsRes<T>);\n}\n"]},"metadata":{},"sourceType":"module"}