{"ast":null,"code":"function filterData(_ref) {\n  let {\n    data,\n    searchable,\n    limit,\n    searchValue,\n    filter,\n    value,\n    disableSelectedItemFiltering\n  } = _ref;\n  if (!searchable && value.length === 0) {\n    return data;\n  }\n  if (!searchable) {\n    const result2 = [];\n    for (let i = 0; i < data.length; i += 1) {\n      if (!!disableSelectedItemFiltering || !value.some(val => val === data[i].value && !data[i].disabled)) {\n        result2.push(data[i]);\n      }\n    }\n    return result2;\n  }\n  const result = [];\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(searchValue, !disableSelectedItemFiltering && value.some(val => val === data[i].value && !data[i].disabled), data[i])) {\n      result.push(data[i]);\n    }\n    if (result.length >= limit) {\n      break;\n    }\n  }\n  return result;\n}\nexport { filterData };","map":{"version":3,"sources":["../../../src/MultiSelect/filter-data/filter-data.ts"],"names":[],"mappings":"AAAO,SAAS,UAAU,CAAA,IAAA,EAQvB;EAAA,IARwB;IACzB,IAAI;IACJ,UAAU;IACV,KAAK;IACL,WAAW;IACX,MAAM;IACN,KAAK;IACL;EACF,CAAC,GAAA,IAAA;EACC,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;IACrC,OAAO,IAAI;EACf;EACE,IAAI,CAAC,UAAU,EAAE;IACf,MAAM,OAAO,GAAG,EAAE;IAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACvC,IAAI,CAAC,CAAC,4BAA4B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,GAAG,IAAK,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE;QACtG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7B;IACA;IACI,OAAO,OAAO;EAClB;EACE,MAAM,MAAM,GAAG,EAAE;EACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI,MAAM,CAAC,WAAW,EAAE,CAAC,4BAA4B,IAAI,KAAK,CAAC,IAAI,CAAE,GAAG,IAAK,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAClI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B;IACI,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK,EAAE;MAC1B;IACN;EACA;EACE,OAAO,MAAM;AACf","sourcesContent":["import type { SelectItem } from '../../Select/types';\n\ninterface FilterData {\n  data: SelectItem[];\n  limit: number;\n  searchable: boolean;\n  searchValue: string;\n  filter(value: string, selected: boolean, item: SelectItem): boolean;\n  value: string[];\n  disableSelectedItemFiltering?: boolean;\n}\n\nexport function filterData({\n  data,\n  searchable,\n  limit,\n  searchValue,\n  filter,\n  value,\n  disableSelectedItemFiltering,\n}: FilterData) {\n  if (!searchable && value.length === 0) {\n    return data;\n  }\n\n  if (!searchable) {\n    const result = [];\n    for (let i = 0; i < data.length; i += 1) {\n      if (\n        !!disableSelectedItemFiltering ||\n        !value.some((val) => val === data[i].value && !data[i].disabled)\n      ) {\n        result.push(data[i]);\n      }\n    }\n\n    return result;\n  }\n\n  const result = [];\n  for (let i = 0; i < data.length; i += 1) {\n    if (\n      filter(\n        searchValue,\n        !disableSelectedItemFiltering &&\n          value.some((val) => val === data[i].value && !data[i].disabled),\n        data[i]\n      )\n    ) {\n      result.push(data[i]);\n    }\n\n    if (result.length >= limit) {\n      break;\n    }\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}