{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { autoUpdate } from '@floating-ui/react';\nimport { useDidUpdate } from '@mantine/hooks';\nfunction useFloatingAutoUpdate(_ref) {\n  let {\n    opened,\n    floating,\n    position,\n    positionDependencies\n  } = _ref;\n  const [delayedUpdate, setDelayedUpdate] = useState(0);\n  useEffect(() => {\n    if (floating.refs.reference.current && floating.refs.floating.current) {\n      return autoUpdate(floating.refs.reference.current, floating.refs.floating.current, floating.update);\n    }\n    return void 0;\n  }, [floating.refs.reference.current, floating.refs.floating.current, opened, delayedUpdate, position]);\n  useDidUpdate(() => {\n    floating.update();\n  }, positionDependencies);\n  useDidUpdate(() => {\n    setDelayedUpdate(c => c + 1);\n  }, [opened]);\n}\nexport { useFloatingAutoUpdate };","map":{"version":3,"sources":["../../src/Floating/use-floating-auto-update.ts"],"names":[],"mappings":";;;AAGO,SAAS,qBAAqB,CAAA,IAAA,EAKlC;EAAA,IALmC;IACpC,MAAM;IACN,QAAQ;IACR,QAAQ;IACR;EACF,CAAC,GAAA,IAAA;EACC,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;EACrD,SAAS,CAAC,MAAM;IACd,IAAI,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;MACrE,OAAO,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,MAAM,CAAC;IACzG;IACI,OAAO,KAAK,CAAC;EACjB,CAAG,EAAE,CACD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAC/B,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAC9B,MAAM,EACN,aAAa,EACb,QAAQ,CACT,CAAC;EACF,YAAY,CAAC,MAAM;IACjB,QAAQ,CAAC,MAAM,CAAA,CAAE;EACrB,CAAG,EAAE,oBAAoB,CAAC;EACxB,YAAY,CAAC,MAAM;IACjB,gBAAgB,CAAE,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC;EAClC,CAAG,EAAE,CAAC,MAAM,CAAC,CAAC;AACd","sourcesContent":["import { useState, useEffect } from 'react';\nimport { autoUpdate } from '@floating-ui/react';\nimport { useDidUpdate } from '@mantine/hooks';\nimport { FloatingPosition } from './types';\n\ninterface Payload {\n  opened: boolean;\n  floating: {\n    update(): void;\n    refs: {\n      floating: React.MutableRefObject<any>;\n      reference: React.MutableRefObject<any>;\n    };\n  };\n  positionDependencies: any[];\n  position: FloatingPosition;\n}\n\nexport function useFloatingAutoUpdate({\n  opened,\n  floating,\n  position,\n  positionDependencies,\n}: Payload) {\n  const [delayedUpdate, setDelayedUpdate] = useState(0);\n\n  useEffect(() => {\n    if (floating.refs.reference.current && floating.refs.floating.current) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n\n    return undefined;\n  }, [\n    floating.refs.reference.current,\n    floating.refs.floating.current,\n    opened,\n    delayedUpdate,\n    position,\n  ]);\n\n  useDidUpdate(() => {\n    floating.update();\n  }, positionDependencies);\n\n  useDidUpdate(() => {\n    setDelayedUpdate((c) => c + 1);\n  }, [opened]);\n}\n"]},"metadata":{},"sourceType":"module"}