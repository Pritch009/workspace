{"ast":null,"code":"import React, { forwardRef, useRef, useState } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useId, useUncontrolled, useMergedRef, clamp } from '@mantine/hooks';\nimport { RatingItem } from './RatingItem/RatingItem.js';\nimport useStyles from './Rating.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction roundValueTo(value, to) {\n  var _a;\n  const rounded = Math.round(value / to) * to;\n  const precision = ((_a = `${to}`.split(\".\")[1]) == null ? void 0 : _a.length) || 0;\n  return Number(rounded.toFixed(precision));\n}\nconst defaultProps = {\n  size: \"sm\",\n  getSymbolLabel: value => `${value}`,\n  count: 5,\n  fractions: 1,\n  color: \"yellow\"\n};\nconst Rating = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Rating\", defaultProps, props),\n    {\n      defaultValue,\n      value,\n      emptySymbol,\n      fullSymbol,\n      size,\n      count,\n      fractions,\n      onChange,\n      onHover,\n      getSymbolLabel,\n      name,\n      readOnly,\n      className,\n      classNames,\n      styles,\n      unstyled,\n      onMouseEnter,\n      onMouseMove,\n      onMouseLeave,\n      highlightSelectedOnly,\n      color,\n      id,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"defaultValue\", \"value\", \"emptySymbol\", \"fullSymbol\", \"size\", \"count\", \"fractions\", \"onChange\", \"onHover\", \"getSymbolLabel\", \"name\", \"readOnly\", \"className\", \"classNames\", \"styles\", \"unstyled\", \"onMouseEnter\", \"onMouseMove\", \"onMouseLeave\", \"highlightSelectedOnly\", \"color\", \"id\", \"variant\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles(null, {\n    name: \"Rating\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  const _name = useId(name);\n  const _id = useId(id);\n  const rootRef = useRef(null);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: 0,\n    onChange\n  });\n  const [hovered, setHovered] = useState(-1);\n  const [isOutside, setOutside] = useState(true);\n  const _fractions = Math.floor(fractions);\n  const _count = Math.floor(count);\n  const decimalUnit = 1 / _fractions;\n  const stableValueRounded = roundValueTo(_value, decimalUnit);\n  const finalValue = hovered !== -1 ? hovered : stableValueRounded;\n  const handleMouseEnter = event => {\n    onMouseEnter == null ? void 0 : onMouseEnter(event);\n    !readOnly && setOutside(false);\n  };\n  const handleMouseMove = event => {\n    onMouseMove == null ? void 0 : onMouseMove(event);\n    if (readOnly) {\n      return;\n    }\n    const {\n      left,\n      right,\n      width\n    } = rootRef.current.getBoundingClientRect();\n    const symbolWidth = width / _count;\n    const hoverPosition = theme.dir === \"rtl\" ? right - event.clientX : event.clientX - left;\n    const hoverValue = hoverPosition / symbolWidth;\n    const rounded = clamp(roundValueTo(hoverValue + decimalUnit / 2, decimalUnit), decimalUnit, _count);\n    setHovered(rounded);\n    rounded !== hovered && (onHover == null ? void 0 : onHover(rounded));\n  };\n  const handleMouseLeave = event => {\n    onMouseLeave == null ? void 0 : onMouseLeave(event);\n    if (readOnly) {\n      return;\n    }\n    setHovered(-1);\n    setOutside(true);\n    hovered !== -1 && (onHover == null ? void 0 : onHover(-1));\n  };\n  const handleItemBlur = () => isOutside && setHovered(-1);\n  const handleChange = event => {\n    if (typeof event === \"number\") {\n      setValue(event);\n    } else {\n      setValue(parseFloat(event.target.value));\n    }\n  };\n  const items = Array(_count).fill(0).map((_, index) => {\n    const integerValue = index + 1;\n    const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));\n    const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;\n    return /* @__PURE__ */React.createElement(\"div\", {\n      key: integerValue,\n      \"data-active\": isGroupActive,\n      className: classes.symbolGroup\n    }, fractionItems.map((__, fractionIndex) => {\n      const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);\n      const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);\n      return /* @__PURE__ */React.createElement(RatingItem, {\n        key: `${integerValue}-${symbolValue}`,\n        size,\n        variant,\n        getSymbolLabel,\n        emptyIcon: emptySymbol,\n        fullIcon: fullSymbol,\n        full: highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue,\n        active: symbolValue === finalValue,\n        checked: symbolValue === stableValueRounded,\n        readOnly,\n        fractionValue,\n        value: symbolValue,\n        name: _name,\n        onChange: handleChange,\n        onBlur: handleItemBlur,\n        classNames,\n        styles,\n        unstyled,\n        color,\n        id: `${_id}-${index}-${fractionIndex}`\n      });\n    }));\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref: useMergedRef(rootRef, ref),\n    className: cx(classes.root, className),\n    onMouseMove: handleMouseMove,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, others), items);\n});\nRating.displayName = \"@mantine/core/Rating\";\nexport { Rating };","map":{"version":3,"sources":["../../src/Rating/Rating.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef, useState, useRef } from 'react';\nimport {\n  DefaultProps,\n  MantineSize,\n  useComponentDefaultProps,\n  Selectors,\n  MantineColor,\n} from '@mantine/styles';\nimport { useUncontrolled, clamp, useMergedRef, useId } from '@mantine/hooks';\nimport { Box } from '../Box';\nimport { RatingItem, RatingItemStylesNames } from './RatingItem/RatingItem';\nimport useStyles from './Rating.styles';\n\nfunction roundValueTo(value: number, to: number) {\n  const rounded = Math.round(value / to) * to;\n  const precision = `${to}`.split('.')[1]?.length || 0;\n  return Number(rounded.toFixed(precision));\n}\n\nexport type RatingStylesNames = Selectors<typeof useStyles> | RatingItemStylesNames;\n\nexport interface RatingProps\n  extends DefaultProps<RatingStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'onChange'> {\n  variant?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: number;\n\n  /** Value for controlled component */\n  value?: number;\n\n  /** Called when value changes */\n  onChange?(value: number): void;\n\n  /** The icon that is displayed when symbol is empty */\n  emptySymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** This icon that is displayed when symbol is full */\n  fullSymbol?: React.ReactNode | ((value: number) => React.ReactNode);\n\n  /** Number of fractions each item can be divided into, 1 by default */\n  fractions?: number;\n\n  /** Controls component size */\n  size?: MantineSize;\n\n  /** Number of controls that should be rendered */\n  count?: number;\n\n  /** Called when item is hovered */\n  onHover?(value: number): void;\n\n  /** Function should return labelText for the symbols */\n  getSymbolLabel?: (value: number) => string;\n\n  /** Name of rating, should be unique within the page */\n  name?: string;\n\n  /** If true, you won't be able to interact */\n  readOnly?: boolean;\n\n  /** If true, only the selected symbol will change to full symbol */\n  highlightSelectedOnly?: boolean;\n\n  /** Key of theme.colors or any CSS color value, yellow by default */\n  color?: MantineColor;\n}\n\nconst defaultProps: Partial<RatingProps> = {\n  size: 'sm',\n  getSymbolLabel: (value) => `${value}`,\n  count: 5,\n  fractions: 1,\n  color: 'yellow',\n};\n\nexport const Rating = forwardRef<HTMLInputElement, RatingProps>((props, ref) => {\n  const {\n    defaultValue,\n    value,\n    emptySymbol,\n    fullSymbol,\n    size,\n    count,\n    fractions,\n    onChange,\n    onHover,\n    getSymbolLabel,\n    name,\n    readOnly,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    highlightSelectedOnly,\n    color,\n    id,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Rating', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(null, {\n    name: 'Rating',\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size,\n  });\n\n  const _name = useId(name);\n  const _id = useId(id);\n  const rootRef = useRef<HTMLDivElement>(null);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: 0,\n    onChange,\n  });\n\n  const [hovered, setHovered] = useState(-1);\n  const [isOutside, setOutside] = useState(true);\n\n  const _fractions = Math.floor(fractions);\n  const _count = Math.floor(count);\n\n  const decimalUnit = 1 / _fractions;\n  const stableValueRounded = roundValueTo(_value, decimalUnit);\n  const finalValue = hovered !== -1 ? hovered : stableValueRounded;\n\n  const handleMouseEnter = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseEnter?.(event);\n    !readOnly && setOutside(false);\n  };\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseMove?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    const { left, right, width } = rootRef.current.getBoundingClientRect();\n    const symbolWidth = width / _count;\n\n    const hoverPosition = theme.dir === 'rtl' ? right - event.clientX : event.clientX - left;\n    const hoverValue = hoverPosition / symbolWidth;\n\n    const rounded = clamp(\n      roundValueTo(hoverValue + decimalUnit / 2, decimalUnit),\n      decimalUnit,\n      _count\n    );\n\n    setHovered(rounded);\n    rounded !== hovered && onHover?.(rounded);\n  };\n\n  const handleMouseLeave = (event: React.MouseEvent<HTMLDivElement>) => {\n    onMouseLeave?.(event);\n\n    if (readOnly) {\n      return;\n    }\n\n    setHovered(-1);\n    setOutside(true);\n    hovered !== -1 && onHover?.(-1);\n  };\n\n  const handleItemBlur = () => isOutside && setHovered(-1);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | number) => {\n    if (typeof event === 'number') {\n      setValue(event);\n    } else {\n      setValue(parseFloat(event.target.value));\n    }\n  };\n\n  const items = Array(_count)\n    .fill(0)\n    .map((_, index) => {\n      const integerValue = index + 1;\n      const fractionItems = Array.from(new Array(index === 0 ? _fractions + 1 : _fractions));\n      const isGroupActive = !readOnly && Math.ceil(hovered) === integerValue;\n\n      return (\n        <div key={integerValue} data-active={isGroupActive} className={classes.symbolGroup}>\n          {fractionItems.map((__, fractionIndex) => {\n            const fractionValue = decimalUnit * (index === 0 ? fractionIndex : fractionIndex + 1);\n            const symbolValue = roundValueTo(integerValue - 1 + fractionValue, decimalUnit);\n\n            return (\n              <RatingItem\n                key={`${integerValue}-${symbolValue}`}\n                size={size}\n                variant={variant}\n                getSymbolLabel={getSymbolLabel}\n                emptyIcon={emptySymbol}\n                fullIcon={fullSymbol}\n                full={\n                  highlightSelectedOnly ? symbolValue === finalValue : symbolValue <= finalValue\n                }\n                active={symbolValue === finalValue}\n                checked={symbolValue === stableValueRounded}\n                readOnly={readOnly}\n                fractionValue={fractionValue}\n                value={symbolValue}\n                name={_name}\n                onChange={handleChange}\n                onBlur={handleItemBlur}\n                classNames={classNames}\n                styles={styles}\n                unstyled={unstyled}\n                color={color}\n                id={`${_id}-${index}-${fractionIndex}`}\n              />\n            );\n          })}\n        </div>\n      );\n    });\n\n  return (\n    <Box\n      ref={useMergedRef(rootRef, ref)}\n      className={cx(classes.root, className)}\n      onMouseMove={handleMouseMove}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      {...others}\n    >\n      {items}\n    </Box>\n  );\n});\n\nRating.displayName = '@mantine/core/Rating';\n"]},"metadata":{},"sourceType":"module"}