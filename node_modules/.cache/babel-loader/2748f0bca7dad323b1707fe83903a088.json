{"ast":null,"code":"import { useRef, useState } from 'react';\nimport { flushSync } from 'react-dom';\nimport { mergeRefs, useDidUpdate } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction getAutoHeightDuration(height) {\n  if (!height || typeof height === \"string\") {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\nfunction getElementHeight(el) {\n  return (el == null ? void 0 : el.current) ? el.current.scrollHeight : \"auto\";\n}\nconst raf = typeof window !== \"undefined\" && window.requestAnimationFrame;\nfunction useCollapse(_ref) {\n  let {\n    transitionDuration,\n    transitionTimingFunction = \"ease\",\n    onTransitionEnd = () => {},\n    opened\n  } = _ref;\n  const el = useRef(null);\n  const collapsedHeight = 0;\n  const collapsedStyles = {\n    display: \"none\",\n    height: 0,\n    overflow: \"hidden\"\n  };\n  const [styles, setStylesRaw] = useState(opened ? {} : collapsedStyles);\n  const setStyles = newStyles => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n  const mergeStyles = newStyles => {\n    setStyles(oldStyles => __spreadValues(__spreadValues({}, oldStyles), newStyles));\n  };\n  function getTransitionStyles(height) {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${transitionTimingFunction}`\n    };\n  }\n  useDidUpdate(() => {\n    if (opened) {\n      raf(() => {\n        mergeStyles({\n          willChange: \"height\",\n          display: \"block\",\n          overflow: \"hidden\"\n        });\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(height)), {\n            height\n          }));\n        });\n      });\n    } else {\n      raf(() => {\n        const height = getElementHeight(el);\n        mergeStyles(__spreadProps(__spreadValues({}, getTransitionStyles(height)), {\n          willChange: \"height\",\n          height\n        }));\n        raf(() => mergeStyles({\n          height: collapsedHeight,\n          overflow: \"hidden\"\n        }));\n      });\n    }\n  }, [opened]);\n  const handleTransitionEnd = e => {\n    if (e.target !== el.current || e.propertyName !== \"height\") {\n      return;\n    }\n    if (opened) {\n      const height = getElementHeight(el);\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        mergeStyles({\n          height\n        });\n      }\n      onTransitionEnd();\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onTransitionEnd();\n    }\n  };\n  function getCollapseProps() {\n    let _a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _b = _a,\n      {\n        style = {},\n        refKey = \"ref\"\n      } = _b,\n      rest = __objRest(_b, [\"style\", \"refKey\"]);\n    const theirRef = rest[refKey];\n    return __spreadProps(__spreadValues({\n      \"aria-hidden\": !opened\n    }, rest), {\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: __spreadValues(__spreadValues({\n        boxSizing: \"border-box\"\n      }, style), styles)\n    });\n  }\n  return getCollapseProps;\n}\nexport { getElementHeight, useCollapse };","map":{"version":3,"sources":["../../src/Collapse/use-collapse.ts"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { flushSync } from 'react-dom';\nimport { useDidUpdate, mergeRefs } from '@mantine/hooks';\n\nfunction getAutoHeightDuration(height: number | string) {\n  if (!height || typeof height === 'string') {\n    return 0;\n  }\n  const constant = height / 36;\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}\n\nexport function getElementHeight(\n  el: React.RefObject<HTMLElement> | { current?: { scrollHeight: number } }\n) {\n  return el?.current ? el.current.scrollHeight : 'auto';\n}\n\nconst raf = typeof window !== 'undefined' && window.requestAnimationFrame;\n\ninterface UseCollapse {\n  opened: boolean;\n  transitionDuration?: number;\n  transitionTimingFunction?: string;\n  onTransitionEnd?: () => void;\n}\n\ninterface GetCollapseProps {\n  [key: string]: unknown;\n  style?: React.CSSProperties;\n  onTransitionEnd?: (e: TransitionEvent) => void;\n  refKey?: string;\n  ref?: React.MutableRefObject<HTMLDivElement> | ((node: HTMLDivElement) => void);\n}\n\nexport function useCollapse({\n  transitionDuration,\n  transitionTimingFunction = 'ease',\n  onTransitionEnd = () => {},\n  opened,\n}: UseCollapse): (props: GetCollapseProps) => Record<string, any> {\n  const el = useRef<HTMLElement | null>(null);\n  const collapsedHeight = 0;\n  const collapsedStyles = {\n    display: 'none',\n    height: 0,\n    overflow: 'hidden',\n  };\n  const [styles, setStylesRaw] = useState<React.CSSProperties>(opened ? {} : collapsedStyles);\n  const setStyles = (newStyles: {} | ((oldStyles: {}) => {})): void => {\n    flushSync(() => setStylesRaw(newStyles));\n  };\n\n  const mergeStyles = (newStyles: {}): void => {\n    setStyles((oldStyles) => ({ ...oldStyles, ...newStyles }));\n  };\n\n  function getTransitionStyles(height: number | string): {\n    transition: string;\n  } {\n    const _duration = transitionDuration || getAutoHeightDuration(height);\n    return {\n      transition: `height ${_duration}ms ${transitionTimingFunction}`,\n    };\n  }\n\n  useDidUpdate(() => {\n    if (opened) {\n      raf(() => {\n        mergeStyles({ willChange: 'height', display: 'block', overflow: 'hidden' });\n        raf(() => {\n          const height = getElementHeight(el);\n          mergeStyles({ ...getTransitionStyles(height), height });\n        });\n      });\n    } else {\n      raf(() => {\n        const height = getElementHeight(el);\n        mergeStyles({ ...getTransitionStyles(height), willChange: 'height', height });\n        raf(() => mergeStyles({ height: collapsedHeight, overflow: 'hidden' }));\n      });\n    }\n  }, [opened]);\n\n  const handleTransitionEnd = (e: React.TransitionEvent): void => {\n    if (e.target !== el.current || e.propertyName !== 'height') {\n      return;\n    }\n\n    if (opened) {\n      const height = getElementHeight(el);\n\n      if (height === styles.height) {\n        setStyles({});\n      } else {\n        mergeStyles({ height });\n      }\n\n      onTransitionEnd();\n    } else if (styles.height === collapsedHeight) {\n      setStyles(collapsedStyles);\n      onTransitionEnd();\n    }\n  };\n\n  function getCollapseProps({ style = {}, refKey = 'ref', ...rest }: GetCollapseProps = {}) {\n    const theirRef: any = rest[refKey];\n    return {\n      'aria-hidden': !opened,\n      ...rest,\n      [refKey]: mergeRefs(el, theirRef),\n      onTransitionEnd: handleTransitionEnd,\n      style: { boxSizing: 'border-box', ...style, ...styles },\n    };\n  }\n\n  return getCollapseProps;\n}\n"]},"metadata":{},"sourceType":"module"}