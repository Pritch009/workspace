{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup.js';\nimport { useSwitchGroupContext } from './SwitchGroup.context.js';\nimport useStyles from './Switch.styles.js';\nimport { extractSystemStyles } from '../Box/style-system-props/extract-system-styles/extract-system-styles.js';\nimport { InlineInput } from '../InlineInput/InlineInput.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  offLabel: \"\",\n  onLabel: \"\",\n  size: \"sm\",\n  radius: \"xl\",\n  error: false\n};\nconst Switch = forwardRef((props, ref) => {\n  var _b;\n  const _a = useComponentDefaultProps(\"Switch\", defaultProps, props),\n    {\n      className,\n      color,\n      label,\n      offLabel,\n      onLabel,\n      id,\n      style,\n      size,\n      radius,\n      wrapperProps,\n      children,\n      unstyled,\n      styles,\n      classNames,\n      thumbIcon,\n      sx,\n      checked,\n      defaultChecked,\n      onChange,\n      labelPosition,\n      description,\n      error,\n      disabled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"color\", \"label\", \"offLabel\", \"onLabel\", \"id\", \"style\", \"size\", \"radius\", \"wrapperProps\", \"children\", \"unstyled\", \"styles\", \"classNames\", \"thumbIcon\", \"sx\", \"checked\", \"defaultChecked\", \"onChange\", \"labelPosition\", \"description\", \"error\", \"disabled\", \"variant\"]);\n  const ctx = useSwitchGroupContext();\n  const _size = (ctx == null ? void 0 : ctx.size) || size;\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    radius,\n    labelPosition,\n    error: !!error\n  }, {\n    name: \"Switch\",\n    classNames,\n    styles,\n    unstyled,\n    size: _size,\n    variant\n  });\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: ctx.onChange\n  } : {};\n  const [_checked, handleChange] = useUncontrolled({\n    value: (_b = contextProps.checked) != null ? _b : checked,\n    defaultValue: defaultChecked,\n    finalValue: false\n  });\n  return /* @__PURE__ */React.createElement(InlineInput, __spreadValues(__spreadValues({\n    className: cx(className, classes.root),\n    sx,\n    style,\n    id: uuid,\n    size: (ctx == null ? void 0 : ctx.size) || size,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    __staticSelector: \"Switch\",\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || void 0,\n    variant\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"input\", __spreadProps(__spreadValues({}, rest), {\n    disabled,\n    checked: _checked,\n    onChange: event => {\n      ctx ? contextProps.onChange(event) : onChange == null ? void 0 : onChange(event);\n      handleChange(event.currentTarget.checked);\n    },\n    id: uuid,\n    ref,\n    type: \"checkbox\",\n    className: classes.input\n  })), /* @__PURE__ */React.createElement(\"label\", {\n    htmlFor: uuid,\n    className: classes.track\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.thumb\n  }, thumbIcon), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.trackLabel\n  }, _checked ? onLabel : offLabel)));\n});\nSwitch.displayName = \"@mantine/core/Switch\";\nSwitch.Group = SwitchGroup;\nexport { Switch };","map":{"version":3,"sources":["../../src/Switch/Switch.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { extractSystemStyles } from '../Box';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup';\nimport { useSwitchGroupContext } from './SwitchGroup.context';\nimport { InlineInput, InlineInputStylesNames } from '../InlineInput';\nimport useStyles, { SwitchStylesParams } from './Switch.styles';\n\nexport type SwitchStylesNames = Selectors<typeof useStyles> | InlineInputStylesNames;\n\nexport interface SwitchProps\n  extends DefaultProps<SwitchStylesNames, SwitchStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'type' | 'size'> {\n  variant?: string;\n\n  /** Id is used to bind input and label, if not passed unique id will be generated for each input */\n  id?: string;\n\n  /** Switch label */\n  label?: React.ReactNode;\n\n  /** Inner label when Switch is in unchecked state */\n  offLabel?: React.ReactNode;\n\n  /** Inner label when Switch is in checked state */\n  onLabel?: React.ReactNode;\n\n  /** Switch checked state color from theme.colors, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Predefined size value */\n  size?: MantineSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, \"xl\" by default */\n  radius?: MantineNumberSize;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n\n  /** Icon inside the thumb of switch */\n  thumbIcon?: React.ReactNode;\n\n  /** Position of label */\n  labelPosition?: 'left' | 'right';\n\n  /** description, displayed after label */\n  description?: React.ReactNode;\n\n  /** Displays error message after input */\n  error?: React.ReactNode;\n}\n\nconst defaultProps: Partial<SwitchProps> = {\n  offLabel: '',\n  onLabel: '',\n  size: 'sm',\n  radius: 'xl',\n  error: false,\n};\n\ntype SwitchComponent = ForwardRefWithStaticComponents<SwitchProps, { Group: typeof SwitchGroup }>;\n\nexport const Switch: SwitchComponent = forwardRef<HTMLInputElement, SwitchProps>((props, ref) => {\n  const {\n    className,\n    color,\n    label,\n    offLabel,\n    onLabel,\n    id,\n    style,\n    size,\n    radius,\n    wrapperProps,\n    children,\n    unstyled,\n    styles,\n    classNames,\n    thumbIcon,\n    sx,\n    checked,\n    defaultChecked,\n    onChange,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Switch', defaultProps, props);\n\n  const ctx = useSwitchGroupContext();\n  const _size = ctx?.size || size;\n\n  const { classes, cx } = useStyles(\n    { color, radius, labelPosition, error: !!error },\n    { name: 'Switch', classNames, styles, unstyled, size: _size, variant }\n  );\n\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: ctx.onChange,\n      }\n    : {};\n\n  const [_checked, handleChange] = useUncontrolled({\n    value: contextProps.checked ?? checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n  });\n\n  return (\n    <InlineInput\n      className={cx(className, classes.root)}\n      sx={sx}\n      style={style}\n      id={uuid}\n      size={ctx?.size || size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      __staticSelector=\"Switch\"\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || undefined}\n      variant={variant}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <input\n        {...rest}\n        disabled={disabled}\n        checked={_checked}\n        onChange={(event) => {\n          ctx ? contextProps.onChange(event) : onChange?.(event);\n          handleChange(event.currentTarget.checked);\n        }}\n        id={uuid}\n        ref={ref}\n        type=\"checkbox\"\n        className={classes.input}\n      />\n\n      <label htmlFor={uuid} className={classes.track}>\n        <div className={classes.thumb}>{thumbIcon}</div>\n        <div className={classes.trackLabel}>{_checked ? onLabel : offLabel}</div>\n      </label>\n    </InlineInput>\n  );\n}) as any;\n\nSwitch.displayName = '@mantine/core/Switch';\nSwitch.Group = SwitchGroup;\n"]},"metadata":{},"sourceType":"module"}