{"ast":null,"code":"import React, { useState, useRef } from 'react';\nimport { rem } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea.js';\nimport { PaginationPreviousIcon, PaginationNextIcon, PaginationFirstIcon, PaginationLastIcon } from '../../Pagination/Pagination.icons.js';\nimport useStyles from './RenderList.styles.js';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.js';\nimport { Divider } from '../../Divider/Divider.js';\nimport { Text } from '../../Text/Text.js';\nimport { TextInput } from '../../TextInput/TextInput.js';\nimport { ActionIcon } from '../../ActionIcon/ActionIcon.js';\nconst icons = {\n  Prev: PaginationPreviousIcon,\n  Next: PaginationNextIcon,\n  First: PaginationFirstIcon,\n  Last: PaginationLastIcon\n};\nconst rtlIons = {\n  Next: PaginationPreviousIcon,\n  Prev: PaginationNextIcon,\n  Last: PaginationFirstIcon,\n  First: PaginationLastIcon\n};\nfunction RenderList(_ref) {\n  let {\n    className,\n    data,\n    onSelect,\n    selection,\n    itemComponent: ItemComponent,\n    listComponent,\n    transferIcon: TransferIcon,\n    transferAllIcon: TransferAllIcon,\n    transferAllMatchingFilter,\n    searchPlaceholder,\n    query,\n    onSearch,\n    filter,\n    nothingFound,\n    placeholder,\n    title,\n    showTransferAll,\n    reversed,\n    onMoveAll,\n    onMove,\n    height,\n    radius,\n    classNames,\n    styles,\n    limit,\n    unstyled,\n    variant\n  } = _ref;\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    reversed,\n    native: listComponent !== SelectScrollArea,\n    radius\n  }, {\n    name: \"TransferList\",\n    classNames,\n    styles,\n    unstyled,\n    variant\n  });\n  const unGroupedItems = [];\n  const groupedItems = [];\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter(item => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || \"div\";\n  const Icons = theme.dir === \"rtl\" ? rtlIons : icons;\n  const itemsRefs = useRef({});\n  const sortedData = groupOptions({\n    data: filteredData\n  });\n  const {\n    scrollIntoView,\n    targetRef,\n    scrollableRef\n  } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true\n  });\n  let groupName = null;\n  sortedData.forEach((item, index) => {\n    const itemComponent = /* @__PURE__ */React.createElement(UnstyledButton, {\n      unstyled,\n      tabIndex: -1,\n      onClick: () => onSelect(item.value),\n      key: item.value,\n      onMouseEnter: () => setHovered(index),\n      className: cx(classes.transferListItem, {\n        [classes.transferListItemHovered]: index === hovered\n      }),\n      ref: node => {\n        if (itemsRefs && itemsRefs.current) {\n          itemsRefs.current[item.value] = node;\n        }\n      }\n    }, /* @__PURE__ */React.createElement(ItemComponent, {\n      data: item,\n      selected: selection.includes(item.value),\n      radius\n    }));\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push( /* @__PURE__ */React.createElement(\"div\", {\n          className: classes.separator,\n          key: groupName\n        }, /* @__PURE__ */React.createElement(Divider, {\n          classNames: {\n            label: classes.separatorLabel\n          },\n          label: groupName\n        })));\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift( /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.separator\n    }, /* @__PURE__ */React.createElement(Divider, {\n      unstyled,\n      classNames: {\n        label: classes.separatorLabel\n      }\n    })));\n  }\n  const handleSearchKeydown = event => {\n    switch (event.key) {\n      case \"Enter\":\n        {\n          event.preventDefault();\n          if (filteredData[hovered]) {\n            onSelect(filteredData[hovered].value);\n          }\n          break;\n        }\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n            const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"end\"\n            });\n            return nextIndex;\n          });\n          break;\n        }\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n          setHovered(current => {\n            var _a;\n            const nextIndex = current > 0 ? current - 1 : current;\n            targetRef.current = itemsRefs.current[(_a = filteredData[nextIndex]) == null ? void 0 : _a.value];\n            scrollIntoView({\n              alignment: \"start\"\n            });\n            return nextIndex;\n          });\n        }\n    }\n  };\n  const transferIcon = reversed ? /* @__PURE__ */React.createElement(Icons.Prev, {\n    size: \"1rem\"\n  }) : /* @__PURE__ */React.createElement(Icons.Next, {\n    size: \"1rem\"\n  });\n  const transferAllIcon = reversed ? /* @__PURE__ */React.createElement(Icons.First, {\n    size: \"1rem\"\n  }) : /* @__PURE__ */React.createElement(Icons.Last, {\n    size: \"1rem\"\n  });\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.transferList, className)\n  }, title && /* @__PURE__ */React.createElement(Text, {\n    weight: 500,\n    unstyled,\n    className: classes.transferListTitle\n  }, title), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListBody\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.transferListHeader\n  }, /* @__PURE__ */React.createElement(TextInput, {\n    unstyled,\n    value: query,\n    onChange: event => {\n      onSearch(event.currentTarget.value);\n      setHovered(0);\n    },\n    onFocus: () => setHovered(0),\n    onBlur: () => setHovered(-1),\n    placeholder: searchPlaceholder,\n    radius: 0,\n    onKeyDown: handleSearchKeydown,\n    sx: {\n      flex: 1\n    },\n    classNames: {\n      input: classes.transferListSearch\n    }\n  }), /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: selection.length === 0,\n    onClick: onMove,\n    unstyled\n  }, TransferIcon ? /* @__PURE__ */React.createElement(TransferIcon, {\n    reversed\n  }) : transferIcon), showTransferAll && /* @__PURE__ */React.createElement(ActionIcon, {\n    variant: \"default\",\n    size: 36,\n    radius: 0,\n    className: classes.transferListControl,\n    disabled: transferAllMatchingFilter ? filteredData.length === 0 : data.length === 0,\n    onClick: onMoveAll,\n    unstyled\n  }, TransferAllIcon ? /* @__PURE__ */React.createElement(TransferAllIcon, {\n    reversed\n  }) : transferAllIcon)), /* @__PURE__ */React.createElement(ListComponent, {\n    ref: scrollableRef,\n    onMouseLeave: () => setHovered(-1),\n    className: classes.transferListItems,\n    style: {\n      height: rem(height),\n      position: \"relative\",\n      overflowX: \"hidden\"\n    }\n  }, groupedItems.length > 0 || unGroupedItems.length > 0 ? /* @__PURE__ */React.createElement(React.Fragment, null, groupedItems, unGroupedItems) : /* @__PURE__ */React.createElement(Text, {\n    color: \"dimmed\",\n    unstyled,\n    size: \"sm\",\n    align: \"center\",\n    mt: \"sm\"\n  }, !query && placeholder ? placeholder : nothingFound))));\n}\nRenderList.displayName = \"@mantine/core/RenderList\";\nexport { RenderList };","map":{"version":3,"sources":["../../../src/TransferList/RenderList/RenderList.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { DefaultProps, Selectors, MantineNumberSize, rem } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { ActionIcon } from '../../ActionIcon';\nimport { TextInput } from '../../TextInput';\nimport { Text } from '../../Text';\nimport { Divider } from '../../Divider';\nimport {\n  PaginationLastIcon,\n  PaginationNextIcon,\n  PaginationFirstIcon,\n  PaginationPreviousIcon,\n} from '../../Pagination/Pagination.icons';\nimport { TransferListItem, TransferListItemComponent } from '../types';\nimport useStyles from './RenderList.styles';\n\nexport type RenderListStylesNames = Selectors<typeof useStyles>;\n\nexport interface RenderListProps extends DefaultProps<RenderListStylesNames> {\n  variant: string;\n  data: TransferListItem[];\n  onSelect(value: string): void;\n  selection: string[];\n  itemComponent: TransferListItemComponent;\n  searchPlaceholder: string;\n  query?: string;\n  onSearch(value: string): void;\n  filter(query: string, item: TransferListItem): boolean;\n  nothingFound?: React.ReactNode;\n  placeholder?: React.ReactNode;\n  title?: React.ReactNode;\n  reversed?: boolean;\n  showTransferAll?: boolean;\n  onMoveAll(): void;\n  onMove(): void;\n  height: number;\n  radius: MantineNumberSize;\n  listComponent?: React.FC<any>;\n  limit?: number;\n  transferIcon?: React.FunctionComponent<{ reversed }>;\n  transferAllIcon?: React.FunctionComponent<{ reversed }>;\n  transferAllMatchingFilter: boolean;\n}\n\nconst icons = {\n  Prev: PaginationPreviousIcon,\n  Next: PaginationNextIcon,\n  First: PaginationFirstIcon,\n  Last: PaginationLastIcon,\n};\n\nconst rtlIons = {\n  Next: PaginationPreviousIcon,\n  Prev: PaginationNextIcon,\n  Last: PaginationFirstIcon,\n  First: PaginationLastIcon,\n};\n\nexport function RenderList({\n  className,\n  data,\n  onSelect,\n  selection,\n  itemComponent: ItemComponent,\n  listComponent,\n  transferIcon: TransferIcon,\n  transferAllIcon: TransferAllIcon,\n  transferAllMatchingFilter,\n  searchPlaceholder,\n  query,\n  onSearch,\n  filter,\n  nothingFound,\n  placeholder,\n  title,\n  showTransferAll,\n  reversed,\n  onMoveAll,\n  onMove,\n  height,\n  radius,\n  classNames,\n  styles,\n  limit,\n  unstyled,\n  variant,\n}: RenderListProps) {\n  const { classes, cx, theme } = useStyles(\n    { reversed, native: listComponent !== SelectScrollArea, radius },\n    { name: 'TransferList', classNames, styles, unstyled, variant }\n  );\n  const unGroupedItems: React.ReactElement<any>[] = [];\n  const groupedItems: React.ReactElement<any>[] = [];\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter((item) => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || 'div';\n  const Icons = theme.dir === 'rtl' ? rtlIons : icons;\n\n  const itemsRefs = useRef<Record<string, HTMLButtonElement>>({});\n\n  const sortedData: TransferListItem[] = groupOptions({ data: filteredData });\n\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  let groupName = null;\n\n  sortedData.forEach((item, index) => {\n    const itemComponent = (\n      <UnstyledButton\n        unstyled={unstyled}\n        tabIndex={-1}\n        onClick={() => onSelect(item.value)}\n        key={item.value}\n        onMouseEnter={() => setHovered(index)}\n        className={cx(classes.transferListItem, {\n          [classes.transferListItemHovered]: index === hovered,\n        })}\n        ref={(node: HTMLButtonElement) => {\n          if (itemsRefs && itemsRefs.current) {\n            itemsRefs.current[item.value] = node;\n          }\n        }}\n      >\n        <ItemComponent data={item} selected={selection.includes(item.value)} radius={radius} />\n      </UnstyledButton>\n    );\n\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push(\n          <div className={classes.separator} key={groupName}>\n            <Divider classNames={{ label: classes.separatorLabel }} label={groupName} />\n          </div>\n        );\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift(\n      <div className={classes.separator}>\n        <Divider unstyled={unstyled} classNames={{ label: classes.separatorLabel }} />\n      </div>\n    );\n  }\n\n  const handleSearchKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.key) {\n      case 'Enter': {\n        event.preventDefault();\n        if (filteredData[hovered]) {\n          onSelect(filteredData[hovered].value);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'end',\n          });\n\n          return nextIndex;\n        });\n        break;\n      }\n\n      case 'ArrowUp': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current > 0 ? current - 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'start',\n          });\n\n          return nextIndex;\n        });\n      }\n    }\n  };\n\n  const transferIcon = reversed ? <Icons.Prev size=\"1rem\" /> : <Icons.Next size=\"1rem\" />;\n  const transferAllIcon = reversed ? <Icons.First size=\"1rem\" /> : <Icons.Last size=\"1rem\" />;\n\n  return (\n    <div className={cx(classes.transferList, className)}>\n      {title && (\n        <Text weight={500} unstyled={unstyled} className={classes.transferListTitle}>\n          {title}\n        </Text>\n      )}\n\n      <div className={classes.transferListBody}>\n        <div className={classes.transferListHeader}>\n          <TextInput\n            unstyled={unstyled}\n            value={query}\n            onChange={(event) => {\n              onSearch(event.currentTarget.value);\n              setHovered(0);\n            }}\n            onFocus={() => setHovered(0)}\n            onBlur={() => setHovered(-1)}\n            placeholder={searchPlaceholder}\n            radius={0}\n            onKeyDown={handleSearchKeydown}\n            sx={{ flex: 1 }}\n            classNames={{ input: classes.transferListSearch }}\n          />\n\n          <ActionIcon\n            variant=\"default\"\n            size={36}\n            radius={0}\n            className={classes.transferListControl}\n            disabled={selection.length === 0}\n            onClick={onMove}\n            unstyled={unstyled}\n          >\n            {TransferIcon ? <TransferIcon reversed={reversed} /> : transferIcon}\n          </ActionIcon>\n\n          {showTransferAll && (\n            <ActionIcon\n              variant=\"default\"\n              size={36}\n              radius={0}\n              className={classes.transferListControl}\n              disabled={transferAllMatchingFilter ? filteredData.length === 0 : data.length === 0}\n              onClick={onMoveAll}\n              unstyled={unstyled}\n            >\n              {TransferAllIcon ? <TransferAllIcon reversed={reversed} /> : transferAllIcon}\n            </ActionIcon>\n          )}\n        </div>\n\n        <ListComponent\n          ref={scrollableRef}\n          onMouseLeave={() => setHovered(-1)}\n          className={classes.transferListItems}\n          style={{ height: rem(height), position: 'relative', overflowX: 'hidden' }}\n        >\n          {groupedItems.length > 0 || unGroupedItems.length > 0 ? (\n            <>\n              {groupedItems}\n              {unGroupedItems}\n            </>\n          ) : (\n            <Text color=\"dimmed\" unstyled={unstyled} size=\"sm\" align=\"center\" mt=\"sm\">\n              {!query && placeholder ? placeholder : nothingFound}\n            </Text>\n          )}\n        </ListComponent>\n      </div>\n    </div>\n  );\n}\n\nRenderList.displayName = '@mantine/core/RenderList';\n"]},"metadata":{},"sourceType":"module"}