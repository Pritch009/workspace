{"ast":null,"code":"import { createStyles, getSize, rem } from '@mantine/styles';\nimport { sizes } from '../SliderRoot/SliderRoot.styles.js';\nvar useStyles = createStyles((theme, _ref, _ref2) => {\n  let {\n    radius,\n    color,\n    disabled,\n    inverted,\n    thumbSize\n  } = _ref;\n  let {\n    size\n  } = _ref2;\n  return {\n    trackContainer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: `calc(${getSize({\n        sizes,\n        size\n      })} * 2)`,\n      cursor: \"pointer\",\n      \"&:has(~ input:disabled)\": {\n        \"&\": {\n          pointerEvents: \"none\"\n        },\n        \"& .mantine-Slider-thumb\": {\n          display: \"none\"\n        },\n        \"& .mantine-Slider-track::before\": {\n          content: '\"\"',\n          backgroundColor: inverted ? theme.colorScheme === \"dark\" ? theme.colors.dark[3] : theme.colors.gray[4] : theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2]\n        },\n        \"& .mantine-Slider-bar\": {\n          backgroundColor: inverted ? theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2] : theme.colorScheme === \"dark\" ? theme.colors.dark[3] : theme.colors.gray[4]\n        }\n      }\n    },\n    track: {\n      position: \"relative\",\n      height: getSize({\n        sizes,\n        size\n      }),\n      width: \"100%\",\n      marginRight: thumbSize ? rem(thumbSize / 2) : getSize({\n        size,\n        sizes\n      }),\n      marginLeft: thumbSize ? rem(thumbSize / 2) : getSize({\n        size,\n        sizes\n      }),\n      \"&::before\": {\n        content: '\"\"',\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        borderRadius: theme.fn.radius(radius),\n        right: `calc(${thumbSize ? rem(thumbSize / 2) : getSize({\n          size,\n          sizes\n        })} * -1)`,\n        left: `calc(${thumbSize ? rem(thumbSize / 2) : getSize({\n          size,\n          sizes\n        })} * -1)`,\n        backgroundColor: inverted ? disabled ? theme.colorScheme === \"dark\" ? theme.colors.dark[3] : theme.colors.gray[4] : theme.fn.variant({\n          variant: \"filled\",\n          color\n        }).background : theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2],\n        zIndex: 0\n      }\n    },\n    bar: {\n      position: \"absolute\",\n      zIndex: 1,\n      top: 0,\n      bottom: 0,\n      backgroundColor: inverted ? theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[2] : disabled ? theme.colorScheme === \"dark\" ? theme.colors.dark[3] : theme.colors.gray[4] : theme.fn.variant({\n        variant: \"filled\",\n        color\n      }).background,\n      borderRadius: theme.fn.radius(radius)\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/Slider/Track/Track.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { createStyles, MantineNumberSize, MantineColor, getSize, rem } from '@mantine/styles';\nimport { sizes } from '../SliderRoot/SliderRoot.styles';\n\ninterface TrackStyles {\n  radius: MantineNumberSize;\n  color: MantineColor;\n  disabled: boolean;\n  inverted: boolean;\n  thumbSize?: number;\n}\n\nexport default createStyles(\n  (theme, { radius, color, disabled, inverted, thumbSize }: TrackStyles, { size }) => ({\n    trackContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%',\n      height: `calc(${getSize({ sizes, size })} * 2)`,\n      cursor: 'pointer',\n\n      '&:has(~ input:disabled)': {\n        '&': {\n          pointerEvents: 'none',\n        },\n\n        '& .mantine-Slider-thumb': {\n          display: 'none',\n        },\n\n        '& .mantine-Slider-track::before': {\n          content: '\"\"',\n          backgroundColor: inverted\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[3]\n              : theme.colors.gray[4]\n            : theme.colorScheme === 'dark'\n            ? theme.colors.dark[4]\n            : theme.colors.gray[2],\n        },\n\n        '& .mantine-Slider-bar': {\n          backgroundColor: inverted\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[4]\n              : theme.colors.gray[2]\n            : theme.colorScheme === 'dark'\n            ? theme.colors.dark[3]\n            : theme.colors.gray[4],\n        },\n      },\n    },\n\n    track: {\n      position: 'relative',\n      height: getSize({ sizes, size }),\n      width: '100%',\n      marginRight: thumbSize ? rem(thumbSize / 2) : getSize({ size, sizes }),\n      marginLeft: thumbSize ? rem(thumbSize / 2) : getSize({ size, sizes }),\n\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        bottom: 0,\n        borderRadius: theme.fn.radius(radius),\n        right: `calc(${thumbSize ? rem(thumbSize / 2) : getSize({ size, sizes })} * -1)`,\n        left: `calc(${thumbSize ? rem(thumbSize / 2) : getSize({ size, sizes })} * -1)`,\n        backgroundColor: inverted\n          ? disabled\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[3]\n              : theme.colors.gray[4]\n            : theme.fn.variant({ variant: 'filled', color }).background\n          : theme.colorScheme === 'dark'\n          ? theme.colors.dark[4]\n          : theme.colors.gray[2],\n        zIndex: 0,\n      },\n    },\n\n    bar: {\n      position: 'absolute',\n      zIndex: 1,\n      top: 0,\n      bottom: 0,\n      backgroundColor: inverted\n        ? theme.colorScheme === 'dark'\n          ? theme.colors.dark[4]\n          : theme.colors.gray[2]\n        : disabled\n        ? theme.colorScheme === 'dark'\n          ? theme.colors.dark[3]\n          : theme.colors.gray[4]\n        : theme.fn.variant({ variant: 'filled', color }).background,\n      borderRadius: theme.fn.radius(radius),\n    },\n  })\n);\n"]},"metadata":{},"sourceType":"module"}