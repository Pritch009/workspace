{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { isElement } from '@mantine/utils';\nimport useStyles from './Breadcrumbs.styles.js';\nimport { Text } from '../Text/Text.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  separator: \"/\"\n};\nconst Breadcrumbs = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Breadcrumbs\", defaultProps, props),\n    {\n      className,\n      children,\n      separator,\n      classNames,\n      styles,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"children\", \"separator\", \"classNames\", \"styles\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles(null, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Breadcrumbs\",\n    variant\n  });\n  const items = React.Children.toArray(children).reduce((acc, child, index, array) => {\n    var _a2;\n    const item = isElement(child) ? React.cloneElement(child, {\n      className: cx(classes.breadcrumb, (_a2 = child.props) == null ? void 0 : _a2.className),\n      key: index\n    }) : /* @__PURE__ */React.createElement(\"div\", {\n      className: classes.breadcrumb,\n      key: index\n    }, child);\n    acc.push(item);\n    if (index !== array.length - 1) {\n      acc.push( /* @__PURE__ */React.createElement(Text, {\n        size: \"sm\",\n        className: classes.separator,\n        key: `separator-${index}`\n      }, separator));\n    }\n    return acc;\n  }, []);\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), items);\n});\nBreadcrumbs.displayName = \"@mantine/core/Breadcrumbs\";\nexport { Breadcrumbs };","map":{"version":3,"sources":["../../src/Breadcrumbs/Breadcrumbs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { isElement } from '@mantine/utils';\nimport { Text } from '../Text';\nimport { Box } from '../Box';\nimport useStyles from './Breadcrumbs.styles';\n\nexport type BreadcrumbsStylesNames = Selectors<typeof useStyles>;\n\nexport interface BreadcrumbsProps\n  extends DefaultProps<BreadcrumbsStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Separator between breadcrumbs */\n  separator?: React.ReactNode;\n\n  /** React nodes that should be separated */\n  children: React.ReactNode;\n}\n\nconst defaultProps: Partial<BreadcrumbsProps> = {\n  separator: '/',\n};\n\nexport const Breadcrumbs = forwardRef<HTMLDivElement, BreadcrumbsProps>(\n  (props: BreadcrumbsProps, ref) => {\n    const { className, children, separator, classNames, styles, unstyled, variant, ...others } =\n      useComponentDefaultProps('Breadcrumbs', defaultProps, props);\n\n    const { classes, cx } = useStyles(null, {\n      classNames,\n      styles,\n      unstyled,\n      name: 'Breadcrumbs',\n      variant,\n    });\n\n    const items = React.Children.toArray(children).reduce<React.ReactNode[]>(\n      (acc, child, index, array) => {\n        const item = isElement(child) ? (\n          React.cloneElement(child, {\n            className: cx(classes.breadcrumb, child.props?.className),\n            key: index,\n          })\n        ) : (\n          <div className={classes.breadcrumb} key={index}>\n            {child}\n          </div>\n        );\n\n        acc.push(item);\n\n        if (index !== array.length - 1) {\n          acc.push(\n            <Text size=\"sm\" className={classes.separator} key={`separator-${index}`}>\n              {separator}\n            </Text>\n          );\n        }\n\n        return acc;\n      },\n      []\n    );\n\n    return (\n      <Box className={cx(classes.root, className)} ref={ref} {...others}>\n        {items}\n      </Box>\n    );\n  }\n);\n\nBreadcrumbs.displayName = '@mantine/core/Breadcrumbs';\n"]},"metadata":{},"sourceType":"module"}