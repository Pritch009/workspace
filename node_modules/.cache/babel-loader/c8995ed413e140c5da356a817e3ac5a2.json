{"ast":null,"code":"import { rgba } from '../rgba/rgba.js';\nimport { themeColor } from '../theme-color/theme-color.js';\nimport { primaryShade } from '../primary-shade/primary-shade.js';\nimport { gradient } from '../gradient/gradient.js';\nfunction getColorIndexInfo(color, theme) {\n  if (typeof color === \"string\" && color.includes(\".\")) {\n    const [splittedColor, _splittedShade] = color.split(\".\");\n    const splittedShade = parseInt(_splittedShade, 10);\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return {\n        isSplittedColor: true,\n        key: splittedColor,\n        shade: splittedShade\n      };\n    }\n  }\n  return {\n    isSplittedColor: false\n  };\n}\nfunction variant(theme) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n  return _ref => {\n    let {\n      variant: variant2,\n      color,\n      gradient: gradient2,\n      primaryFallback\n    } = _ref;\n    const colorInfo = getColorIndexInfo(color, theme);\n    switch (variant2) {\n      case \"light\":\n        {\n          return {\n            border: \"transparent\",\n            background: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1),\n            color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n            hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 7 : 1, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.25 : 0.65)\n          };\n        }\n      case \"subtle\":\n        {\n          return {\n            border: \"transparent\",\n            background: \"transparent\",\n            color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n            hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1)\n          };\n        }\n      case \"outline\":\n        {\n          return {\n            border: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n            background: \"transparent\",\n            color: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n            hover: theme.colorScheme === \"dark\" ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05) : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35)\n          };\n        }\n      case \"default\":\n        {\n          return {\n            border: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[4],\n            background: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.white,\n            color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n            hover: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[0]\n          };\n        }\n      case \"white\":\n        {\n          return {\n            border: \"transparent\",\n            background: theme.white,\n            color: getThemeColor(color, getPrimaryShade()),\n            hover: null\n          };\n        }\n      case \"transparent\":\n        {\n          return {\n            border: \"transparent\",\n            color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n            background: \"transparent\",\n            hover: null\n          };\n        }\n      case \"gradient\":\n        {\n          return {\n            background: getGradient(gradient2),\n            color: theme.white,\n            border: \"transparent\",\n            hover: null\n          };\n        }\n      default:\n        {\n          const _primaryShade = getPrimaryShade();\n          const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n          const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n          return {\n            border: \"transparent\",\n            background: getThemeColor(_color, _shade, primaryFallback),\n            color: theme.white,\n            hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1)\n          };\n        }\n    }\n  };\n}\nexport { variant };","map":{"version":3,"sources":["../../../../../src/theme/functions/fns/variant/variant.ts"],"names":[],"mappings":"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","sourcesContent":["import { CSSProperties } from 'react';\nimport type { MantineColor, MantineGradient, MantineThemeBase } from '../../../types';\nimport { rgba } from '../rgba/rgba';\nimport { themeColor } from '../theme-color/theme-color';\nimport { primaryShade } from '../primary-shade/primary-shade';\nimport { gradient } from '../gradient/gradient';\n\nexport interface VariantInput {\n  variant: string;\n  color?: MantineColor;\n  gradient?: MantineGradient;\n  primaryFallback?: boolean;\n}\n\nexport interface VariantOutput {\n  border: CSSProperties['borderColor'];\n  background: CSSProperties['backgroundColor'];\n  color: CSSProperties['color'];\n  hover: CSSProperties['backgroundColor'];\n}\n\ninterface ColorInfo {\n  isSplittedColor: boolean;\n  key?: string;\n  shade?: number;\n}\n\nfunction getColorIndexInfo(color: string, theme: MantineThemeBase): ColorInfo {\n  if (typeof color === 'string' && color.includes('.')) {\n    const [splittedColor, _splittedShade] = color.split('.');\n    const splittedShade = parseInt(_splittedShade, 10);\n\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return { isSplittedColor: true, key: splittedColor, shade: splittedShade };\n    }\n  }\n\n  return { isSplittedColor: false };\n}\n\nexport function variant(theme: MantineThemeBase) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  return ({ variant, color, gradient, primaryFallback }: VariantInput): VariantOutput => {\n    const colorInfo = getColorIndexInfo(color, theme);\n\n    switch (variant) {\n      case 'light': {\n        return {\n          border: 'transparent',\n          background: rgba(\n            getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n            theme.colorScheme === 'dark' ? 0.2 : 1\n          ),\n          color:\n            color === 'dark'\n              ? theme.colorScheme === 'dark'\n                ? theme.colors.dark[0]\n                : theme.colors.dark[9]\n              : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n          hover: rgba(\n            getThemeColor(color, theme.colorScheme === 'dark' ? 7 : 1, primaryFallback, false),\n            theme.colorScheme === 'dark' ? 0.25 : 0.65\n          ),\n        };\n      }\n\n      case 'subtle': {\n        return {\n          border: 'transparent',\n          background: 'transparent',\n          color:\n            color === 'dark'\n              ? theme.colorScheme === 'dark'\n                ? theme.colors.dark[0]\n                : theme.colors.dark[9]\n              : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n          hover: rgba(\n            getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n            theme.colorScheme === 'dark' ? 0.2 : 1\n          ),\n        };\n      }\n\n      case 'outline': {\n        return {\n          border: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n          background: 'transparent',\n          color: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n          hover:\n            theme.colorScheme === 'dark'\n              ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05)\n              : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35),\n        };\n      }\n\n      case 'default': {\n        return {\n          border: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n          background: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n          color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n          hover: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n        };\n      }\n\n      case 'white': {\n        return {\n          border: 'transparent',\n          background: theme.white,\n          color: getThemeColor(color, getPrimaryShade()),\n          hover: null,\n        };\n      }\n\n      case 'transparent': {\n        return {\n          border: 'transparent',\n          color:\n            color === 'dark'\n              ? theme.colorScheme === 'dark'\n                ? theme.colors.dark[0]\n                : theme.colors.dark[9]\n              : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n          background: 'transparent',\n          hover: null,\n        };\n      }\n\n      case 'gradient': {\n        return {\n          background: getGradient(gradient),\n          color: theme.white,\n          border: 'transparent',\n          hover: null,\n        };\n      }\n\n      default: {\n        const _primaryShade = getPrimaryShade();\n        const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n        const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n\n        return {\n          border: 'transparent',\n          background: getThemeColor(_color, _shade, primaryFallback),\n          color: theme.white,\n          hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1),\n        };\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}