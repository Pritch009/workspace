{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useReducedMotion, useUncontrolled, useId, useResizeObserver, useIsomorphicEffect, useMergedRef } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/styles';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  disabled: false,\n  size: \"sm\",\n  transitionDuration: 200\n};\nconst SegmentedControl = forwardRef((props, ref) => {\n  var _b, _c, _d, _e;\n  const _a = useComponentDefaultProps(\"SegmentedControl\", defaultProps, props),\n    {\n      className,\n      disabled,\n      data: _data,\n      name,\n      value,\n      onChange,\n      color,\n      fullWidth,\n      radius,\n      size,\n      transitionDuration,\n      transitionTimingFunction,\n      classNames,\n      styles,\n      defaultValue,\n      orientation,\n      unstyled,\n      variant,\n      readOnly\n    } = _a,\n    others = __objRest(_a, [\"className\", \"disabled\", \"data\", \"name\", \"value\", \"onChange\", \"color\", \"fullWidth\", \"radius\", \"size\", \"transitionDuration\", \"transitionTimingFunction\", \"classNames\", \"styles\", \"defaultValue\", \"orientation\", \"unstyled\", \"variant\", \"readOnly\"]);\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const data = _data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n  const mounted = useRef();\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? (_e = (_d = (_b = data.find(item => !item.disabled)) == null ? void 0 : _b.value) != null ? _d : (_c = data[0]) == null ? void 0 : _c.value) != null ? _e : null : null,\n    onChange\n  });\n  const {\n    classes,\n    cx\n  } = useStyles({\n    fullWidth,\n    color,\n    radius,\n    shouldAnimate: reduceMotion || !shouldAnimate,\n    transitionDuration,\n    transitionTimingFunction,\n    orientation\n  }, {\n    name: \"SegmentedControl\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0]\n  });\n  const uuid = useId(name);\n  const refs = useRef({});\n  const [observerRef, containerRect] = useResizeObserver();\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n      const offsetRight = containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n      setActivePosition({\n        width,\n        height,\n        translate: [theme.dir === \"rtl\" ? offsetRight : offsetLeft, element.parentElement.offsetTop - WRAPPER_PADDING]\n      });\n    }\n  }, [_value, containerRect]);\n  const controls = data.map(item => /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.control, {\n      [classes.controlActive]: _value === item.value\n    }),\n    key: item.value\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: classes.input,\n    disabled: disabled || item.disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => !readOnly && handleValueChange(item.value)\n  }), /* @__PURE__ */React.createElement(\"label\", {\n    className: classes.label,\n    \"data-active\": _value === item.value && !(disabled || item.disabled) || void 0,\n    \"data-disabled\": disabled || item.disabled || void 0,\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => {\n      refs.current[item.value] = node;\n    }\n  }, item.label)));\n  const mergedRef = useMergedRef(observerRef, ref);\n  if (data.length === 0) {\n    return null;\n  }\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref: mergedRef\n  }, others), typeof _value === \"string\" && shouldAnimate && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    className: classes.indicator,\n    sx: {\n      width: activePosition.width,\n      height: activePosition.height,\n      transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px)`\n    }\n  }), controls);\n});\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"sources":["../../src/SegmentedControl/SegmentedControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport {\n  useReducedMotion,\n  useResizeObserver,\n  useUncontrolled,\n  useId,\n  useMergedRef,\n  useIsomorphicEffect,\n} from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, {\n  WRAPPER_PADDING,\n  SegmentedControlStylesParams,\n} from './SegmentedControl.styles';\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport type SegmentedControlStylesNames = Selectors<typeof useStyles>;\n\nexport interface SegmentedControlProps\n  extends DefaultProps<SegmentedControlStylesNames, SegmentedControlStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  variant?: string;\n\n  /** Segments to render */\n  data: string[] | SegmentedControlItem[];\n\n  /** Current selected value */\n  value?: string;\n\n  /** Disabled input state */\n  disabled?: boolean;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Name of the radio group, default to random id */\n  name?: string;\n\n  /** True if component should have 100% width */\n  fullWidth?: boolean;\n\n  /** Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark */\n  color?: MantineColor;\n\n  /** Controls font-size, paddings and height */\n  size?: MantineSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Transition duration in ms, set to 0 to turn off transitions */\n  transitionDuration?: number;\n\n  /** Transition timing function for all transitions, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** The orientation of the component */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** Determines whether the user can change value */\n  readOnly?: boolean;\n}\n\nconst defaultProps = {\n  disabled: false,\n  size: 'sm' as const,\n  transitionDuration: 200,\n};\n\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>((props, ref) => {\n  const {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    unstyled,\n    variant,\n    readOnly,\n    ...others\n  } = useComponentDefaultProps('SegmentedControl', defaultProps, props);\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n\n  const data = _data.map(\n    (item: string | SegmentedControlItem): SegmentedControlItem =>\n      typeof item === 'string' ? { label: item, value: item } : item\n  );\n  const mounted = useRef<Boolean>();\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? data.find((item) => !item.disabled)?.value ?? data[0]?.value ?? null\n      : null,\n    onChange,\n  });\n\n  const { classes, cx } = useStyles(\n    {\n      fullWidth,\n      color,\n      radius,\n      shouldAnimate: reduceMotion || !shouldAnimate,\n      transitionDuration,\n      transitionTimingFunction,\n      orientation,\n    },\n    { name: 'SegmentedControl', classNames, styles, unstyled, variant, size }\n  );\n\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0],\n  });\n  const uuid = useId(name);\n  const refs = useRef<Record<string, HTMLLabelElement>>({});\n  const [observerRef, containerRect] = useResizeObserver();\n\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n\n      const offsetRight =\n        containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n\n      setActivePosition({\n        width,\n        height,\n        translate: [\n          theme.dir === 'rtl' ? offsetRight : offsetLeft,\n          element.parentElement.offsetTop - WRAPPER_PADDING,\n        ],\n      });\n    }\n  }, [_value, containerRect]);\n\n  const controls = data.map((item) => (\n    <div\n      className={cx(classes.control, { [classes.controlActive]: _value === item.value })}\n      key={item.value}\n    >\n      <input\n        className={classes.input}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => !readOnly && handleValueChange(item.value)}\n      />\n\n      <label\n        className={classes.label}\n        data-active={(_value === item.value && !(disabled || item.disabled)) || undefined}\n        data-disabled={disabled || item.disabled || undefined}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => {\n          refs.current[item.value] = node;\n        }}\n      >\n        {item.label}\n      </label>\n    </div>\n  ));\n\n  const mergedRef = useMergedRef(observerRef, ref);\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box className={cx(classes.root, className)} ref={mergedRef} {...others}>\n      {typeof _value === 'string' && shouldAnimate && (\n        <Box\n          component=\"span\"\n          className={classes.indicator}\n          sx={{\n            width: activePosition.width,\n            height: activePosition.height,\n            transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px)`,\n          }}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"]},"metadata":{},"sourceType":"module"}