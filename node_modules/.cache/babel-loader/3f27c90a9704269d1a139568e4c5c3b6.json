{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { QuoteIcon } from './QuoteIcon.js';\nimport useStyles from './Blockquote.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  color: \"gray\",\n  icon: /* @__PURE__ */React.createElement(QuoteIcon, null)\n};\nconst Blockquote = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Blockquote\", defaultProps, props),\n    {\n      className,\n      color,\n      icon,\n      cite,\n      children,\n      classNames,\n      styles,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"color\", \"icon\", \"cite\", \"children\", \"classNames\", \"styles\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Blockquote\",\n    variant\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    component: \"blockquote\",\n    className: cx(classes.root, className),\n    ref\n  }, others), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inner\n  }, icon && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.icon\n  }, icon), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.body\n  }, children, cite && /* @__PURE__ */React.createElement(\"cite\", {\n    className: classes.cite\n  }, cite))));\n});\nBlockquote.displayName = \"@mantine/core/Blockquote\";\nexport { Blockquote };","map":{"version":3,"sources":["../../src/Blockquote/Blockquote.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineColor, Selectors, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport { QuoteIcon } from './QuoteIcon';\nimport useStyles, { BlockquoteStylesParams } from './Blockquote.styles';\n\nexport type BlockquoteStylesNames = Selectors<typeof useStyles>;\n\nexport interface BlockquoteProps\n  extends DefaultProps<BlockquoteStylesNames, BlockquoteStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'blockquote'>, 'cite'> {\n  variant?: string;\n\n  /** Icon color from theme */\n  color?: MantineColor;\n\n  /** Icon, defaults to quote icon */\n  icon?: React.ReactNode;\n\n  /** Describe a reference to a cited quote */\n  cite?: React.ReactNode;\n}\n\nconst defaultProps: Partial<BlockquoteProps> = {\n  color: 'gray',\n  icon: <QuoteIcon />,\n};\n\nexport const Blockquote = forwardRef<HTMLQuoteElement, BlockquoteProps>(\n  (props: BlockquoteProps, ref) => {\n    const {\n      className,\n      color,\n      icon,\n      cite,\n      children,\n      classNames,\n      styles,\n      unstyled,\n      variant,\n      ...others\n    } = useComponentDefaultProps('Blockquote', defaultProps, props);\n    const { classes, cx } = useStyles(\n      { color },\n      { classNames, styles, unstyled, name: 'Blockquote', variant }\n    );\n\n    return (\n      <Box component=\"blockquote\" className={cx(classes.root, className)} ref={ref} {...others}>\n        <div className={classes.inner}>\n          {icon && <div className={classes.icon}>{icon}</div>}\n          <div className={classes.body}>\n            {children}\n            {cite && <cite className={classes.cite}>{cite}</cite>}\n          </div>\n        </div>\n      </Box>\n    );\n  }\n);\n\nBlockquote.displayName = '@mantine/core/Blockquote';\n"]},"metadata":{},"sourceType":"module"}