{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './LoadingOverlay.styles.js';\nimport { Transition } from '../Transition/Transition.js';\nimport { Box } from '../Box/Box.js';\nimport { Loader } from '../Loader/Loader.js';\nimport { Overlay } from '../Overlay/Overlay.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  overlayOpacity: 0.75,\n  transitionDuration: 0,\n  radius: 0,\n  zIndex: getDefaultZIndex(\"overlay\")\n};\nconst LoadingOverlay = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"LoadingOverlay\", defaultProps, props),\n    {\n      className,\n      visible,\n      loaderProps,\n      overlayOpacity,\n      overlayColor,\n      transitionDuration,\n      exitTransitionDuration,\n      zIndex,\n      style,\n      loader,\n      radius,\n      overlayBlur,\n      unstyled,\n      variant,\n      keepMounted\n    } = _a,\n    others = __objRest(_a, [\"className\", \"visible\", \"loaderProps\", \"overlayOpacity\", \"overlayColor\", \"transitionDuration\", \"exitTransitionDuration\", \"zIndex\", \"style\", \"loader\", \"radius\", \"overlayBlur\", \"unstyled\", \"variant\", \"keepMounted\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles(null, {\n    name: \"LoadingOverlay\",\n    unstyled,\n    variant\n  });\n  const _zIndex = `calc(${zIndex} + 1)`;\n  return /* @__PURE__ */React.createElement(Transition, {\n    keepMounted,\n    duration: transitionDuration,\n    exitDuration: exitTransitionDuration,\n    mounted: visible,\n    transition: \"fade\"\n  }, transitionStyles => /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    style: __spreadProps(__spreadValues(__spreadValues({}, transitionStyles), style), {\n      zIndex\n    }),\n    ref\n  }, others), loader ? /* @__PURE__ */React.createElement(\"div\", {\n    style: {\n      zIndex: _zIndex\n    }\n  }, loader) : /* @__PURE__ */React.createElement(Loader, __spreadValues({\n    style: {\n      zIndex: _zIndex\n    }\n  }, loaderProps)), /* @__PURE__ */React.createElement(Overlay, {\n    opacity: overlayOpacity,\n    zIndex,\n    radius,\n    blur: overlayBlur,\n    unstyled,\n    color: overlayColor || (theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.white)\n  })));\n});\nLoadingOverlay.displayName = \"@mantine/core/LoadingOverlay\";\nexport { LoadingOverlay };","map":{"version":3,"sources":["../../src/LoadingOverlay/LoadingOverlay.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  getDefaultZIndex,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Overlay } from '../Overlay';\nimport { Transition } from '../Transition';\nimport { Loader, LoaderProps } from '../Loader';\nimport { Box } from '../Box';\nimport useStyles from './LoadingOverlay.styles';\n\nexport interface LoadingOverlayProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** If set loading overlay will not be unmounted from the DOM when it is hidden, display: none styles will be added instead */\n  keepMounted?: boolean;\n\n  /** Provide custom loader */\n  loader?: React.ReactNode;\n\n  /** Loader component props */\n  loaderProps?: LoaderProps;\n\n  /** Sets overlay opacity */\n  overlayOpacity?: number;\n\n  /** Sets overlay color, defaults to theme.white in light theme and to theme.colors.dark[5] in dark theme */\n  overlayColor?: string;\n\n  /** Sets overlay blur */\n  overlayBlur?: number | string;\n\n  /** Loading overlay z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** If visible overlay will take 100% width and height of first parent with relative position and overlay all of its content */\n  visible: boolean;\n\n  /** Animation duration in ms */\n  transitionDuration?: number;\n\n  /** Exit transition duration in ms */\n  exitTransitionDuration?: number;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, 0 by default */\n  radius?: MantineNumberSize;\n}\n\nconst defaultProps: Partial<LoadingOverlayProps> = {\n  overlayOpacity: 0.75,\n  transitionDuration: 0,\n  radius: 0,\n  zIndex: getDefaultZIndex('overlay'),\n};\n\nexport const LoadingOverlay = forwardRef<HTMLDivElement, LoadingOverlayProps>((props, ref) => {\n  const {\n    className,\n    visible,\n    loaderProps,\n    overlayOpacity,\n    overlayColor,\n    transitionDuration,\n    exitTransitionDuration,\n    zIndex,\n    style,\n    loader,\n    radius,\n    overlayBlur,\n    unstyled,\n    variant,\n    keepMounted,\n    ...others\n  } = useComponentDefaultProps('LoadingOverlay', defaultProps, props);\n  const { classes, cx, theme } = useStyles(null, { name: 'LoadingOverlay', unstyled, variant });\n  const _zIndex = `calc(${zIndex} + 1)` as any;\n\n  return (\n    <Transition\n      keepMounted={keepMounted}\n      duration={transitionDuration}\n      exitDuration={exitTransitionDuration}\n      mounted={visible}\n      transition=\"fade\"\n    >\n      {(transitionStyles) => (\n        <Box\n          className={cx(classes.root, className)}\n          style={{ ...transitionStyles, ...style, zIndex }}\n          ref={ref}\n          {...others}\n        >\n          {loader ? (\n            <div style={{ zIndex: _zIndex }}>{loader}</div>\n          ) : (\n            <Loader style={{ zIndex: _zIndex }} {...loaderProps} />\n          )}\n\n          <Overlay\n            opacity={overlayOpacity}\n            zIndex={zIndex}\n            radius={radius}\n            blur={overlayBlur}\n            unstyled={unstyled}\n            color={\n              overlayColor || (theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.white)\n            }\n          />\n        </Box>\n      )}\n    </Transition>\n  );\n});\n\nLoadingOverlay.displayName = '@mantine/core/LoadingOverlay';\n"]},"metadata":{},"sourceType":"module"}