{"ast":null,"code":"const getRelativePosition = _ref => {\n  let {\n    axis,\n    target,\n    parent,\n    alignment,\n    offset,\n    isList\n  } = _ref;\n  if (!target || !parent && typeof document === \"undefined\") {\n    return 0;\n  }\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n  const getDiff = property => targetPosition[property] - parentPosition[property];\n  if (axis === \"y\") {\n    const diff = getDiff(\"top\");\n    if (diff === 0) return 0;\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    if (alignment === \"center\") {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n    return 0;\n  }\n  if (axis === \"x\") {\n    const diff = getDiff(\"left\");\n    if (diff === 0) return 0;\n    if (alignment === \"start\") {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n    if (alignment === \"end\") {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n      return shouldScroll ? distance : 0;\n    }\n    if (alignment === \"center\") {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n    return 0;\n  }\n  return 0;\n};\nexport { getRelativePosition };","map":{"version":3,"sources":["../../../src/use-scroll-into-view/utils/get-relative-position.ts"],"names":[],"mappings":"AAAY,MAAC,mBAAmB,GAAG,IAAA,IAO7B;EAAA,IAP8B;IAClC,IAAI;IACJ,MAAM;IACN,MAAM;IACN,SAAS;IACT,MAAM;IACN;EACF,CAAC,GAAA,IAAA;EACC,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;IACzD,OAAO,CAAC;EACZ;EACE,MAAM,cAAc,GAAG,CAAC,CAAC,MAAM;EAC/B,MAAM,aAAa,GAAG,MAAM,IAAI,QAAQ,CAAC,IAAI;EAC7C,MAAM,cAAc,GAAG,aAAa,CAAC,qBAAqB,CAAA,CAAE;EAC5D,MAAM,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAA,CAAE;EACrD,MAAM,OAAO,GAAI,QAAQ,IAAK,cAAc,CAAC,QAAQ,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC;EACjF,IAAI,IAAI,KAAK,GAAG,EAAE;IAChB,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;IAC3B,IAAI,IAAI,KAAK,CAAC,EACZ,OAAO,CAAC;IACV,IAAI,SAAS,KAAK,OAAO,EAAE;MACzB,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM;MAC9B,MAAM,YAAY,GAAG,QAAQ,IAAI,cAAc,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM;MACpF,OAAO,YAAY,GAAG,QAAQ,GAAG,CAAC;IACxC;IACI,MAAM,YAAY,GAAG,cAAc,GAAG,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW;IAChF,IAAI,SAAS,KAAK,KAAK,EAAE;MACvB,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,GAAG,YAAY,GAAG,cAAc,CAAC,MAAM;MACrE,MAAM,YAAY,GAAG,QAAQ,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM;MACrF,OAAO,YAAY,GAAG,QAAQ,GAAG,CAAC;IACxC;IACI,IAAI,SAAS,KAAK,QAAQ,EAAE;MAC1B,OAAO,IAAI,GAAG,YAAY,GAAG,CAAC,GAAG,cAAc,CAAC,MAAM,GAAG,CAAC;IAChE;IACI,OAAO,CAAC;EACZ;EACE,IAAI,IAAI,KAAK,GAAG,EAAE;IAChB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;IAC5B,IAAI,IAAI,KAAK,CAAC,EACZ,OAAO,CAAC;IACV,IAAI,SAAS,KAAK,OAAO,EAAE;MACzB,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM;MAC9B,MAAM,YAAY,GAAG,QAAQ,IAAI,cAAc,CAAC,KAAK,IAAI,CAAC,MAAM;MAChE,OAAO,YAAY,GAAG,QAAQ,GAAG,CAAC;IACxC;IACI,MAAM,WAAW,GAAG,cAAc,GAAG,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU;IAC7E,IAAI,SAAS,KAAK,KAAK,EAAE;MACvB,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,GAAG,WAAW,GAAG,cAAc,CAAC,KAAK;MACnE,MAAM,YAAY,GAAG,QAAQ,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,MAAM;MACjE,OAAO,YAAY,GAAG,QAAQ,GAAG,CAAC;IACxC;IACI,IAAI,SAAS,KAAK,QAAQ,EAAE;MAC1B,OAAO,IAAI,GAAG,WAAW,GAAG,CAAC,GAAG,cAAc,CAAC,KAAK,GAAG,CAAC;IAC9D;IACI,OAAO,CAAC;EACZ;EACE,OAAO,CAAC;AACV,CAAA","sourcesContent":["export const getRelativePosition = ({\n  axis,\n  target,\n  parent,\n  alignment,\n  offset,\n  isList,\n}): number => {\n  if (!target || (!parent && typeof document === 'undefined')) {\n    return 0;\n  }\n  const isCustomParent = !!parent;\n  const parentElement = parent || document.body;\n  const parentPosition = parentElement.getBoundingClientRect();\n  const targetPosition = target.getBoundingClientRect();\n\n  const getDiff = (property: 'top' | 'left'): number =>\n    targetPosition[property] - parentPosition[property];\n\n  if (axis === 'y') {\n    const diff = getDiff('top');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentHeight = isCustomParent ? parentPosition.height : window.innerHeight;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentHeight + targetPosition.height;\n      const shouldScroll = distance >= -targetPosition.height * (isList ? 0 : 1) || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentHeight / 2 + targetPosition.height / 2;\n    }\n\n    return 0;\n  }\n\n  if (axis === 'x') {\n    const diff = getDiff('left');\n\n    if (diff === 0) return 0;\n\n    if (alignment === 'start') {\n      const distance = diff - offset;\n      const shouldScroll = distance <= targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    const parentWidth = isCustomParent ? parentPosition.width : window.innerWidth;\n\n    if (alignment === 'end') {\n      const distance = diff + offset - parentWidth + targetPosition.width;\n      const shouldScroll = distance >= -targetPosition.width || !isList;\n\n      return shouldScroll ? distance : 0;\n    }\n\n    if (alignment === 'center') {\n      return diff - parentWidth / 2 + targetPosition.width / 2;\n    }\n\n    return 0;\n  }\n\n  return 0;\n};\n"]},"metadata":{},"sourceType":"module"}