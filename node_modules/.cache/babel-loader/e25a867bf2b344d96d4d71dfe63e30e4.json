{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps, getSize } from '@mantine/styles';\nimport useStyles from './Step.styles.js';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.js';\nimport { Transition } from '../../Transition/Transition.js';\nimport { Loader } from '../../Loader/Loader.js';\nimport { CheckboxIcon } from '../../Checkbox/CheckboxIcon.js';\nimport { Text } from '../../Text/Text.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultIconSizes = {\n  xs: 16,\n  sm: 18,\n  md: 20,\n  lg: 22,\n  xl: 24\n};\nconst defaultProps = {\n  withIcon: true,\n  size: \"md\",\n  radius: \"xl\",\n  allowStepClick: true,\n  iconPosition: \"left\",\n  __staticSelector: \"Step\"\n};\nconst getStepFragment = (Fragment, step) => {\n  if (typeof Fragment === \"function\") {\n    return /* @__PURE__ */React.createElement(Fragment, {\n      step\n    });\n  }\n  return Fragment;\n};\nconst Step = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"StepperStep\", defaultProps, props),\n    {\n      className,\n      step,\n      state,\n      color,\n      icon,\n      completedIcon,\n      progressIcon,\n      label,\n      description,\n      withIcon,\n      iconSize,\n      size,\n      radius,\n      loading,\n      allowStepClick,\n      allowStepSelect,\n      iconPosition,\n      __staticSelector,\n      classNames,\n      styles,\n      unstyled,\n      orientation,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"step\", \"state\", \"color\", \"icon\", \"completedIcon\", \"progressIcon\", \"label\", \"description\", \"withIcon\", \"iconSize\", \"size\", \"radius\", \"loading\", \"allowStepClick\", \"allowStepSelect\", \"iconPosition\", \"__staticSelector\", \"classNames\", \"styles\", \"unstyled\", \"orientation\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    iconSize,\n    radius,\n    allowStepClick,\n    iconPosition,\n    orientation\n  }, {\n    name: __staticSelector,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  const _iconSize = getSize({\n    size,\n    sizes: defaultIconSizes\n  });\n  const _icon = state === \"stepCompleted\" ? null : state === \"stepProgress\" ? progressIcon : icon;\n  const dataAttributes = {\n    \"data-progress\": state === \"stepProgress\" || void 0,\n    \"data-completed\": state === \"stepCompleted\" || void 0\n  };\n  return /* @__PURE__ */React.createElement(UnstyledButton, __spreadValues(__spreadValues({\n    className: cx(classes.step, className),\n    tabIndex: allowStepClick ? 0 : -1,\n    ref\n  }, dataAttributes), others), withIcon && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.stepWrapper\n  }, /* @__PURE__ */React.createElement(\"div\", __spreadValues({\n    className: classes.stepIcon\n  }, dataAttributes), /* @__PURE__ */React.createElement(Transition, {\n    mounted: state === \"stepCompleted\",\n    transition: \"pop\",\n    duration: 200\n  }, transitionStyles => /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.stepCompletedIcon,\n    style: transitionStyles\n  }, loading ? /* @__PURE__ */React.createElement(Loader, {\n    color: \"#fff\",\n    size: _iconSize,\n    className: classes.stepLoader\n  }) : getStepFragment(completedIcon, step) || /* @__PURE__ */React.createElement(CheckboxIcon, {\n    indeterminate: false,\n    width: _iconSize,\n    height: _iconSize\n  }))), state !== \"stepCompleted\" ? loading ? /* @__PURE__ */React.createElement(Loader, {\n    size: _iconSize,\n    color\n  }) : getStepFragment(_icon || icon, step) : null), orientation === \"vertical\" && /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.verticalSeparator, {\n      [classes.verticalSeparatorActive]: state === \"stepCompleted\"\n    })\n  })), (label || description) && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.stepBody\n  }, label && /* @__PURE__ */React.createElement(Text, {\n    className: classes.stepLabel\n  }, getStepFragment(label, step)), description && /* @__PURE__ */React.createElement(Text, {\n    className: classes.stepDescription,\n    color: \"dimmed\"\n  }, getStepFragment(description, step))));\n});\nStep.displayName = \"@mantine/core/Step\";\nexport { Step };","map":{"version":3,"sources":["../../../src/Stepper/Step/Step.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc;AACrC,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAqB;AACtD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;AAClD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB;AACxD,IAAI,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;EAAE,UAAU,EAAE,IAAI;EAAE,YAAY,EAAE,IAAI;EAAE,QAAQ,EAAE,IAAI;EAAE;AAAK,CAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AAC/J,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EAC7B,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAA,CAAE,CAAC,EAC5B,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACrC,IAAI,mBAAmB,EACrB,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;IACvC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACzC;EACE,OAAO,CAAC;AACV,CAAC;AACD,IAAI,SAAS,GAAG,CAAC,MAAM,EAAE,OAAO,KAAK;EACnC,IAAI,MAAM,GAAG,CAAA,CAAE;EACf,KAAK,IAAI,IAAI,IAAI,MAAM,EACrB,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAC9D,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;EAC/B,IAAI,MAAM,IAAI,IAAI,IAAI,mBAAmB,EACvC,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,MAAM,CAAC,EAAE;IAC5C,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,EAC9D,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC;EACnC;EACE,OAAO,MAAM;AACf,CAAC;AAYD,MAAM,gBAAgB,GAAG;EACvB,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE;AACN,CAAC;AACD,MAAM,YAAY,GAAG;EACnB,QAAQ,EAAE,IAAI;EACd,IAAI,EAAE,IAAI;EACV,MAAM,EAAE,IAAI;EACZ,cAAc,EAAE,IAAI;EACpB,YAAY,EAAE,MAAM;EACpB,gBAAgB,EAAE;AACpB,CAAC;AACD,MAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAK;EAC1C,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;IAClC,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE;MACnD;IACN,CAAK,CAAC;EACN;EACE,OAAO,QAAQ;AACjB,CAAC;AACW,MAAC,IAAI,GAAG,UAAU,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK;EAC7C,MAAM,EAAE,GAAG,wBAAwB,CAAC,aAAa,EAAE,YAAY,EAAE,KAAK,CAAC;IAAE;MACvE,SAAS;MACT,IAAI;MACJ,KAAK;MACL,KAAK;MACL,IAAI;MACJ,aAAa;MACb,YAAY;MACZ,KAAK;MACL,WAAW;MACX,QAAQ;MACR,QAAQ;MACR,IAAI;MACJ,MAAM;MACN,OAAO;MACP,cAAc;MACd,eAAe;MACf,YAAY;MACZ,gBAAgB;MAChB,UAAU;MACV,MAAM;MACN,QAAQ;MACR,WAAW;MACX;IACJ,CAAG,GAAG,EAAE;IAAE,MAAM,GAAG,SAAS,CAAC,EAAE,EAAE,CAC7B,WAAW,EACX,MAAM,EACN,OAAO,EACP,OAAO,EACP,MAAM,EACN,eAAe,EACf,cAAc,EACd,OAAO,EACP,aAAa,EACb,UAAU,EACV,UAAU,EACV,MAAM,EACN,QAAQ,EACR,SAAS,EACT,gBAAgB,EAChB,iBAAiB,EACjB,cAAc,EACd,kBAAkB,EAClB,YAAY,EACZ,QAAQ,EACR,UAAU,EACV,aAAa,EACb,SAAS,CACV,CAAC;EACF,MAAM;IAAE,OAAO;IAAE;EAAE,CAAE,GAAG,SAAS,CAAC;IAAE,KAAK;IAAE,QAAQ;IAAE,MAAM;IAAE,cAAc;IAAE,YAAY;IAAE;EAAW,CAAE,EAAE;IAAE,IAAI,EAAE,gBAAgB;IAAE,UAAU;IAAE,MAAM;IAAE,QAAQ;IAAE,OAAO;IAAE;EAAI,CAAE,CAAC;EAClL,MAAM,SAAS,GAAG,OAAO,CAAC;IAAE,IAAI;IAAE,KAAK,EAAE;EAAgB,CAAE,CAAC;EAC5D,MAAM,KAAK,GAAG,KAAK,KAAK,eAAe,GAAG,IAAI,GAAG,KAAK,KAAK,cAAc,GAAG,YAAY,GAAG,IAAI;EAC/F,MAAM,cAAc,GAAG;IACrB,eAAe,EAAE,KAAK,KAAK,cAAc,IAAI,KAAK,CAAC;IACnD,gBAAgB,EAAE,KAAK,KAAK,eAAe,IAAI,KAAK;EACxD,CAAG;EACD,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,cAAc,CAAC,cAAc,CAAC;IACvF,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,SAAS,CAAC;IACtC,QAAQ,EAAE,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC;EACJ,CAAG,EAAE,cAAc,CAAC,EAAE,MAAM,CAAC,EAAE,QAAQ,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAClF,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,EAAA,eAAkB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,cAAc,CAAC;IAC3D,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,EAAE,cAAc,CAAC,EAAA,eAAkB,KAAK,CAAC,aAAa,CAAC,UAAU,EAAE;IAClE,OAAO,EAAE,KAAK,KAAK,eAAe;IAClC,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;EACd,CAAG,EAAG,gBAAgB,IAAA,eAAqB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAClE,SAAS,EAAE,OAAO,CAAC,iBAAiB;IACpC,KAAK,EAAE;EACX,CAAG,EAAE,OAAO,GAAA,eAAmB,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE;IACvD,KAAK,EAAE,MAAM;IACb,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,CAAC,GAAG,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,YAAY,EAAE;IAC7F,aAAa,EAAE,KAAK;IACpB,KAAK,EAAE,SAAS;IAChB,MAAM,EAAE;EACZ,CAAG,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,eAAe,GAAG,OAAO,GAAA,eAAmB,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE;IACtF,IAAI,EAAE,SAAS;IACf;EACJ,CAAG,CAAC,GAAG,eAAe,CAAC,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,WAAW,KAAK,UAAU,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAC1H,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,iBAAiB,EAAE;MACvC,CAAC,OAAO,CAAC,uBAAuB,GAAG,KAAK,KAAK;IACnD,CAAK;EACL,CAAG,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,WAAW,KAAA,eAAqB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IACxE,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,EAAE,KAAK,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE;IACpD,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,EAAE,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE,WAAW,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE;IACzF,SAAS,EAAE,OAAO,CAAC,eAAe;IAClC,KAAK,EAAE;EACX,CAAG,EAAE,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAA;AACD,IAAI,CAAC,WAAW,GAAG,oBAAoB","sourcesContent":["import React, { forwardRef, FunctionComponent } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  Selectors,\n  MantineSize,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  getSize,\n} from '@mantine/styles';\nimport { Text } from '../../Text';\nimport { Loader } from '../../Loader';\nimport { CheckboxIcon } from '../../Checkbox';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { Transition } from '../../Transition';\nimport useStyles from './Step.styles';\n\nexport type StepStylesNames = Selectors<typeof useStyles>;\n\nexport type StepFragmentComponent = FunctionComponent<{ step: number }>;\n\nexport interface StepProps\n  extends DefaultProps<StepStylesNames>,\n    React.ComponentPropsWithoutRef<'button'> {\n  variant?: string;\n\n  /** Step index, controlled by Steps component **/\n  step?: number;\n\n  /** Step state, controlled by Steps component */\n  state?: 'stepInactive' | 'stepProgress' | 'stepCompleted';\n\n  /** Step color from theme.colors */\n  color?: MantineColor;\n\n  /** Should icon be displayed */\n  withIcon?: boolean;\n\n  /** Step icon, defaults to step index + 1 when rendered within Stepper */\n  icon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is completed */\n  completedIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step icon displayed when step is in progress */\n  progressIcon?: React.ReactNode | StepFragmentComponent;\n\n  /** Step label, render after icon */\n  label?: React.ReactNode | StepFragmentComponent;\n\n  /** Step description */\n  description?: React.ReactNode | StepFragmentComponent;\n\n  /** Icon wrapper size */\n  iconSize?: number;\n\n  /** Icon position relative to step body */\n  iconPosition?: 'right' | 'left';\n\n  /** Component size */\n  size?: MantineSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, \"xl\" by default */\n  radius?: MantineNumberSize;\n\n  /** Indicates loading state on step */\n  loading?: boolean;\n\n  /** Set to false to disable clicks on step */\n  allowStepClick?: boolean;\n\n  /** Should step selection be allowed */\n  allowStepSelect?: boolean;\n\n  /** Static selector base */\n  __staticSelector?: string;\n\n  /** Component orientation */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nconst defaultIconSizes = {\n  xs: 16,\n  sm: 18,\n  md: 20,\n  lg: 22,\n  xl: 24,\n};\n\nconst defaultProps: Partial<StepProps> = {\n  withIcon: true,\n  size: 'md',\n  radius: 'xl',\n  allowStepClick: true,\n  iconPosition: 'left',\n  __staticSelector: 'Step',\n};\n\nconst getStepFragment = (Fragment: StepFragmentComponent | React.ReactNode, step: number) => {\n  if (typeof Fragment === 'function') {\n    return <Fragment step={step} />;\n  }\n\n  return Fragment;\n};\n\nexport const Step = forwardRef<HTMLButtonElement, StepProps>((props: StepProps, ref) => {\n  const {\n    className,\n    step,\n    state,\n    color,\n    icon,\n    completedIcon,\n    progressIcon,\n    label,\n    description,\n    withIcon,\n    iconSize,\n    size,\n    radius,\n    loading,\n    allowStepClick,\n    allowStepSelect,\n    iconPosition,\n    __staticSelector,\n    classNames,\n    styles,\n    unstyled,\n    orientation,\n    variant,\n    ...others\n  } = useComponentDefaultProps('StepperStep', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { color, iconSize, radius, allowStepClick, iconPosition, orientation },\n    { name: __staticSelector, classNames, styles, unstyled, variant, size }\n  );\n\n  const _iconSize = getSize({ size, sizes: defaultIconSizes });\n  const _icon = state === 'stepCompleted' ? null : state === 'stepProgress' ? progressIcon : icon;\n  const dataAttributes = {\n    'data-progress': state === 'stepProgress' || undefined,\n    'data-completed': state === 'stepCompleted' || undefined,\n  };\n\n  return (\n    <UnstyledButton\n      className={cx(classes.step, className)}\n      tabIndex={allowStepClick ? 0 : -1}\n      ref={ref}\n      {...dataAttributes}\n      {...others}\n    >\n      {withIcon && (\n        <div className={classes.stepWrapper}>\n          <div className={classes.stepIcon} {...dataAttributes}>\n            <Transition mounted={state === 'stepCompleted'} transition=\"pop\" duration={200}>\n              {(transitionStyles) => (\n                <div className={classes.stepCompletedIcon} style={transitionStyles}>\n                  {loading ? (\n                    <Loader color=\"#fff\" size={_iconSize} className={classes.stepLoader} />\n                  ) : (\n                    getStepFragment(completedIcon, step) || (\n                      <CheckboxIcon indeterminate={false} width={_iconSize} height={_iconSize} />\n                    )\n                  )}\n                </div>\n              )}\n            </Transition>\n\n            {state !== 'stepCompleted' ? (\n              loading ? (\n                <Loader size={_iconSize} color={color} />\n              ) : (\n                getStepFragment(_icon || icon, step)\n              )\n            ) : null}\n          </div>\n          {orientation === 'vertical' && (\n            <div\n              className={cx(classes.verticalSeparator, {\n                [classes.verticalSeparatorActive]: state === 'stepCompleted',\n              })}\n            />\n          )}\n        </div>\n      )}\n\n      {(label || description) && (\n        <div className={classes.stepBody}>\n          {label && <Text className={classes.stepLabel}>{getStepFragment(label, step)}</Text>}\n          {description && (\n            <Text className={classes.stepDescription} color=\"dimmed\">\n              {getStepFragment(description, step)}\n            </Text>\n          )}\n        </div>\n      )}\n    </UnstyledButton>\n  );\n});\n\nStep.displayName = '@mantine/core/Step';\n"]},"metadata":{},"sourceType":"module"}