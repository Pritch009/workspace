{"ast":null,"code":"import { getBreakpointValue, getSize } from '@mantine/styles';\nfunction getSortedBreakpoints(theme, breakpoints) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n  const property = \"maxWidth\" in breakpoints[0] ? \"maxWidth\" : \"minWidth\";\n  const sorted = [...breakpoints].sort((a, b) => getBreakpointValue(getSize({\n    size: b[property],\n    sizes: theme.breakpoints\n  })) - getBreakpointValue(getSize({\n    size: a[property],\n    sizes: theme.breakpoints\n  })));\n  return property === \"minWidth\" ? sorted.reverse() : sorted;\n}\nexport { getSortedBreakpoints };","map":{"version":3,"sources":["../../../src/SimpleGrid/get-sorted-breakpoints/get-sorted-breakpoints.ts"],"names":[],"mappings":";AACO,SAAS,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAE;EACvD,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,EAAE;IAC5B,OAAO,WAAW;EACtB;EACE,MAAM,QAAQ,GAAG,UAAU,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,UAAU;EACvE,MAAM,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,kBAAkB,CAAC,OAAO,CAAC;IAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC;IAAE,KAAK,EAAE,KAAK,CAAC;EAAW,CAAE,CAAC,CAAC,GAAG,kBAAkB,CAAC,OAAO,CAAC;IAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC;IAAE,KAAK,EAAE,KAAK,CAAC;EAAW,CAAE,CAAC,CAAC,CAAC;EAC3M,OAAO,QAAQ,KAAK,UAAU,GAAG,MAAM,CAAC,OAAO,CAAA,CAAE,GAAG,MAAM;AAC5D","sourcesContent":["import { MantineTheme, getBreakpointValue, getSize } from '@mantine/styles';\n\nexport function getSortedBreakpoints<T extends Record<string, any>>(\n  theme: MantineTheme,\n  breakpoints: T[]\n) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = 'maxWidth' in breakpoints[0] ? 'maxWidth' : 'minWidth';\n  const sorted = [...breakpoints].sort(\n    (a, b) =>\n      getBreakpointValue(getSize({ size: b[property], sizes: theme.breakpoints })) -\n      getBreakpointValue(getSize({ size: a[property], sizes: theme.breakpoints }))\n  );\n\n  return property === 'minWidth' ? sorted.reverse() : sorted;\n}\n"]},"metadata":{},"sourceType":"module"}