{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport useStyles from './Text.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  variant: \"text\"\n};\nconst _Text = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Text\", defaultProps, props),\n    {\n      className,\n      size,\n      weight,\n      transform,\n      color,\n      align,\n      variant,\n      lineClamp,\n      truncate,\n      gradient,\n      inline,\n      inherit,\n      underline,\n      strikethrough,\n      italic,\n      classNames,\n      styles,\n      unstyled,\n      span,\n      __staticSelector\n    } = _a,\n    others = __objRest(_a, [\"className\", \"size\", \"weight\", \"transform\", \"color\", \"align\", \"variant\", \"lineClamp\", \"truncate\", \"gradient\", \"inline\", \"inherit\", \"underline\", \"strikethrough\", \"italic\", \"classNames\", \"styles\", \"unstyled\", \"span\", \"__staticSelector\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    lineClamp,\n    truncate,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    weight,\n    transform,\n    align,\n    gradient\n  }, {\n    unstyled,\n    name: __staticSelector || \"Text\",\n    variant,\n    size\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, {\n      [classes.gradient]: variant === \"gradient\"\n    }, className),\n    component: span ? \"span\" : \"div\"\n  }, others));\n});\n_Text.displayName = \"@mantine/core/Text\";\nconst Text = createPolymorphicComponent(_Text);\nexport { Text, _Text };","map":{"version":3,"sources":["../../src/Text/Text.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineGradient,\n  useComponentDefaultProps,\n  MantineColor,\n  MantineNumberSize,\n  Variants,\n} from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Box } from '../Box';\nimport useStyles from './Text.styles';\n\nexport interface TextProps extends DefaultProps {\n  __staticSelector?: string;\n\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Key of theme.fontSizes or any valid CSS value to set font-size */\n  size?: MantineNumberSize;\n\n  /** Key of theme.colors or any valid CSS color */\n  color?: 'dimmed' | MantineColor;\n\n  /** Sets font-weight css property */\n  weight?: React.CSSProperties['fontWeight'];\n\n  /** Sets text-transform css property */\n  transform?: React.CSSProperties['textTransform'];\n\n  /** Sets text-align css property */\n  align?: React.CSSProperties['textAlign'];\n\n  /** Link or text variant */\n  variant?: Variants<'text' | 'gradient'>;\n\n  /** CSS -webkit-line-clamp property */\n  lineClamp?: number;\n\n  /** CSS truncate overflowing text with an ellipsis */\n  truncate?: 'end' | 'start' | true;\n\n  /** Sets line-height to 1 for centering */\n  inline?: boolean;\n\n  /** Underline the text */\n  underline?: boolean;\n\n  /** Add strikethrough styles */\n  strikethrough?: boolean;\n\n  /** Adds font-style: italic style */\n  italic?: boolean;\n\n  /** Inherit font properties from parent element */\n  inherit?: boolean;\n\n  /** Controls gradient settings in gradient variant only */\n  gradient?: MantineGradient;\n\n  /** Shorthand for component=\"span\" */\n  span?: boolean;\n}\n\nconst defaultProps: Partial<TextProps> = {\n  variant: 'text',\n};\n\nexport const _Text = forwardRef<HTMLDivElement, TextProps>((props, ref) => {\n  const {\n    className,\n    size,\n    weight,\n    transform,\n    color,\n    align,\n    variant,\n    lineClamp,\n    truncate,\n    gradient,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    classNames,\n    styles,\n    unstyled,\n    span,\n    __staticSelector,\n    ...others\n  } = useComponentDefaultProps('Text', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    {\n      color,\n      lineClamp,\n      truncate,\n      inline,\n      inherit,\n      underline,\n      strikethrough,\n      italic,\n      weight,\n      transform,\n      align,\n      gradient,\n    },\n    { unstyled, name: __staticSelector || 'Text', variant, size }\n  );\n\n  return (\n    <Box\n      ref={ref}\n      className={cx(classes.root, { [classes.gradient]: variant === 'gradient' }, className)}\n      component={span ? 'span' : 'div'}\n      {...others}\n    />\n  );\n});\n\n_Text.displayName = '@mantine/core/Text';\n\nexport const Text = createPolymorphicComponent<'div', TextProps>(_Text);\n"]},"metadata":{},"sourceType":"module"}