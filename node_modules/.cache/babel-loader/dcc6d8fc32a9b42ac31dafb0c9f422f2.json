{"ast":null,"code":"import { createStyles, rem } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    color: _color\n  } = _ref;\n  const color = _color || (theme.colorScheme === \"dark\" ? \"dark\" : \"gray\");\n  const colors = theme.fn.variant({\n    color,\n    variant: \"light\"\n  });\n  return {\n    root: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n      lineHeight: theme.lineHeight,\n      padding: `${rem(2)} calc(${theme.spacing.xs} / 2)`,\n      borderRadius: theme.radius.sm,\n      color: theme.colorScheme === \"dark\" ? color === \"dark\" ? theme.colors.dark[0] : theme.white : theme.colors.dark[7],\n      backgroundColor: theme.colorScheme === \"dark\" && color === \"dark\" ? theme.colors.dark[5] : colors.background,\n      fontFamily: theme.fontFamilyMonospace,\n      fontSize: theme.fontSizes.xs\n    }),\n    block: {\n      padding: theme.spacing.xs,\n      margin: 0,\n      overflowX: \"auto\"\n    }\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../src/Code/Code.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { createStyles, MantineColor, rem } from '@mantine/styles';\n\nexport interface CodeStylesParams {\n  color: MantineColor;\n}\n\nexport default createStyles((theme, { color: _color }: CodeStylesParams) => {\n  const color = _color || (theme.colorScheme === 'dark' ? 'dark' : 'gray');\n  const colors = theme.fn.variant({ color, variant: 'light' });\n\n  return {\n    root: {\n      ...theme.fn.fontStyles(),\n      lineHeight: theme.lineHeight,\n      padding: `${rem(2)} calc(${theme.spacing.xs} / 2)`,\n      borderRadius: theme.radius.sm,\n      color:\n        theme.colorScheme === 'dark'\n          ? color === 'dark'\n            ? theme.colors.dark[0]\n            : theme.white\n          : theme.colors.dark[7],\n      backgroundColor:\n        theme.colorScheme === 'dark' && color === 'dark' ? theme.colors.dark[5] : colors.background,\n      fontFamily: theme.fontFamilyMonospace,\n      fontSize: theme.fontSizes.xs,\n    },\n\n    block: {\n      padding: theme.spacing.xs,\n      margin: 0,\n      overflowX: 'auto',\n    },\n  };\n});\n"]},"metadata":{},"sourceType":"module"}