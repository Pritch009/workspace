{"ast":null,"code":"function filterData(_ref) {\n  let {\n    data,\n    limit,\n    value,\n    filter\n  } = _ref;\n  const result = [];\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(value, data[i])) {\n      result.push(data[i]);\n    }\n    if (result.length >= limit) {\n      break;\n    }\n  }\n  return result;\n}\nexport { filterData };","map":{"version":3,"sources":["../../../src/Autocomplete/filter-data/filter-data.ts"],"names":[],"mappings":"AAAO,SAAS,UAAU,CAAA,IAAA,EAAiC;EAAA,IAAhC;IAAE,IAAI;IAAE,KAAK;IAAE,KAAK;IAAE;EAAM,CAAE,GAAA,IAAA;EACvD,MAAM,MAAM,GAAG,EAAE;EACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACvC,IAAI,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;MAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B;IACI,IAAI,MAAM,CAAC,MAAM,IAAI,KAAK,EAAE;MAC1B;IACN;EACA;EACE,OAAO,MAAM;AACf","sourcesContent":["import type { AutocompleteItem } from '../Autocomplete';\n\ninterface FilterData {\n  data: AutocompleteItem[];\n  limit: number;\n  value: string;\n  filter(value: string, item: AutocompleteItem): boolean;\n}\n\nexport function filterData({ data, limit, value, filter }: FilterData) {\n  const result = [];\n\n  for (let i = 0; i < data.length; i += 1) {\n    if (filter(value, data[i])) {\n      result.push(data[i]);\n    }\n\n    if (result.length >= limit) {\n      break;\n    }\n  }\n\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}