{"ast":null,"code":"import { useRef, useEffect } from 'react';\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\nfunction useClickOutside(handler, events, nodes) {\n  const ref = useRef();\n  useEffect(() => {\n    const listener = event => {\n      const {\n        target\n      } = event != null ? event : {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = (target == null ? void 0 : target.hasAttribute(\"data-ignore-outside-clicks\")) || !document.body.contains(target) && target.tagName !== \"HTML\";\n        const shouldTrigger = nodes.every(node => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n    (events || DEFAULT_EVENTS).forEach(fn => document.addEventListener(fn, listener));\n    return () => {\n      (events || DEFAULT_EVENTS).forEach(fn => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n  return ref;\n}\nexport { useClickOutside };","map":{"version":3,"sources":["../../src/use-click-outside/use-click-outside.ts"],"names":[],"mappings":";AACA,MAAM,cAAc,GAAG,CAAC,WAAW,EAAE,YAAY,CAAC;AAC3C,SAAS,eAAe,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE;EACtD,MAAM,GAAG,GAAG,MAAM,CAAA,CAAE;EACpB,SAAS,CAAC,MAAM;IACd,MAAM,QAAQ,GAAI,KAAK,IAAK;MAC1B,MAAM;QAAE;MAAM,CAAE,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,CAAA,CAAE;MAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;QACxB,MAAM,YAAY,GAAG,CAAC,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,4BAA4B,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,KAAK,MAAM;QAClK,MAAM,aAAa,GAAG,KAAK,CAAC,KAAK,CAAE,IAAI,IAAK,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAA,CAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC3F,aAAa,IAAI,CAAC,YAAY,IAAI,OAAO,CAAA,CAAE;MACnD,CAAO,MAAM,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QACvD,OAAO,CAAA,CAAE;MACjB;IACA,CAAK;IACD,CAAC,MAAM,IAAI,cAAc,EAAE,OAAO,CAAE,EAAE,IAAK,QAAQ,CAAC,gBAAgB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IACnF,OAAO,MAAM;MACX,CAAC,MAAM,IAAI,cAAc,EAAE,OAAO,CAAE,EAAE,IAAK,QAAQ,CAAC,mBAAmB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAC5F,CAAK;EACL,CAAG,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;EACzB,OAAO,GAAG;AACZ","sourcesContent":["import { useEffect, useRef } from 'react';\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  handler: () => void,\n  events?: string[] | null,\n  nodes?: (HTMLElement | null)[]\n) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    const listener = (event: any) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore =\n          target?.hasAttribute('data-ignore-outside-clicks') ||\n          (!document.body.contains(target) && target.tagName !== 'HTML');\n        const shouldTrigger = nodes.every((node) => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && handler();\n      } else if (ref.current && !ref.current.contains(target)) {\n        handler();\n      }\n    };\n\n    (events || DEFAULT_EVENTS).forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      (events || DEFAULT_EVENTS).forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, handler, nodes]);\n\n  return ref;\n}\n"]},"metadata":{},"sourceType":"module"}