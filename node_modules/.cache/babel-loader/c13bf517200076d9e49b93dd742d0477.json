{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { ThemeProvider, Global } from '@emotion/react';\nimport { DEFAULT_THEME } from './default-theme.js';\nimport { GlobalStyles } from './GlobalStyles.js';\nimport { MantineCssVariables } from './MantineCssVariables.js';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme.js';\nimport { filterProps } from './utils/filter-props/filter-props.js';\nimport { NormalizeCSS } from './NormalizeCSS.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nconst MantineProviderContext = createContext({\n  theme: DEFAULT_THEME\n});\nfunction useMantineTheme() {\n  var _a;\n  return ((_a = useContext(MantineProviderContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;\n}\nfunction useMantineProviderStyles(component) {\n  const theme = useMantineTheme();\n  const getStyles = name => {\n    var _a, _b, _c, _d;\n    return {\n      styles: ((_a = theme.components[name]) == null ? void 0 : _a.styles) || {},\n      classNames: ((_b = theme.components[name]) == null ? void 0 : _b.classNames) || {},\n      variants: (_c = theme.components[name]) == null ? void 0 : _c.variants,\n      sizes: (_d = theme.components[name]) == null ? void 0 : _d.sizes\n    };\n  };\n  if (Array.isArray(component)) {\n    return component.map(getStyles);\n  }\n  return [getStyles(component)];\n}\nfunction useMantineEmotionCache() {\n  var _a;\n  return (_a = useContext(MantineProviderContext)) == null ? void 0 : _a.emotionCache;\n}\nfunction useComponentDefaultProps(component, defaultProps, props) {\n  var _a;\n  const theme = useMantineTheme();\n  const contextPropsPayload = (_a = theme.components[component]) == null ? void 0 : _a.defaultProps;\n  const contextProps = typeof contextPropsPayload === \"function\" ? contextPropsPayload(theme) : contextPropsPayload;\n  return __spreadValues(__spreadValues(__spreadValues({}, defaultProps), contextProps), filterProps(props));\n}\nfunction MantineProvider(_ref) {\n  let {\n    theme,\n    emotionCache,\n    withNormalizeCSS = false,\n    withGlobalStyles = false,\n    withCSSVariables = false,\n    inherit = false,\n    children\n  } = _ref;\n  const ctx = useContext(MantineProviderContext);\n  const mergedTheme = mergeThemeWithFunctions(DEFAULT_THEME, inherit ? __spreadValues(__spreadValues({}, ctx.theme), theme) : theme);\n  return /* @__PURE__ */React.createElement(ThemeProvider, {\n    theme: mergedTheme\n  }, /* @__PURE__ */React.createElement(MantineProviderContext.Provider, {\n    value: {\n      theme: mergedTheme,\n      emotionCache\n    }\n  }, withNormalizeCSS && /* @__PURE__ */React.createElement(NormalizeCSS, null), withGlobalStyles && /* @__PURE__ */React.createElement(GlobalStyles, {\n    theme: mergedTheme\n  }), withCSSVariables && /* @__PURE__ */React.createElement(MantineCssVariables, {\n    theme: mergedTheme\n  }), typeof mergedTheme.globalStyles === \"function\" && /* @__PURE__ */React.createElement(Global, {\n    styles: mergedTheme.globalStyles(mergedTheme)\n  }), children));\n}\nMantineProvider.displayName = \"@mantine/core/MantineProvider\";\nexport { MantineProvider, useComponentDefaultProps, useMantineEmotionCache, useMantineProviderStyles, useMantineTheme };","map":{"version":3,"sources":["../../src/theme/MantineProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport type { EmotionCache } from '@emotion/cache';\nimport { ThemeProvider, Global } from '@emotion/react';\nimport { DEFAULT_THEME } from './default-theme';\nimport { GlobalStyles } from './GlobalStyles';\nimport { MantineCssVariables } from './MantineCssVariables';\nimport type { MantineThemeOverride, MantineTheme } from './types';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme';\nimport { filterProps } from './utils/filter-props/filter-props';\nimport { NormalizeCSS } from './NormalizeCSS';\n\ninterface MantineProviderContextType {\n  theme: MantineTheme;\n  emotionCache?: EmotionCache;\n}\n\nconst MantineProviderContext = createContext<MantineProviderContextType>({\n  theme: DEFAULT_THEME,\n});\n\nexport function useMantineTheme() {\n  return useContext(MantineProviderContext)?.theme || DEFAULT_THEME;\n}\n\nexport function useMantineProviderStyles(component: string | string[]) {\n  const theme = useMantineTheme();\n\n  const getStyles = (name: string) => ({\n    styles: theme.components[name]?.styles || {},\n    classNames: theme.components[name]?.classNames || {},\n    variants: theme.components[name]?.variants,\n    sizes: theme.components[name]?.sizes,\n  });\n\n  if (Array.isArray(component)) {\n    return component.map(getStyles);\n  }\n\n  return [getStyles(component)];\n}\n\nexport function useMantineEmotionCache() {\n  return useContext(MantineProviderContext)?.emotionCache;\n}\n\nexport function useComponentDefaultProps<T extends Record<string, any>, U extends Partial<T> = {}>(\n  component: string,\n  defaultProps: U,\n  props: T\n): T & {\n  [Key in Extract<keyof T, keyof U>]-?: U[Key] | NonNullable<T[Key]>;\n} {\n  const theme = useMantineTheme();\n  const contextPropsPayload = theme.components[component]?.defaultProps;\n  const contextProps =\n    typeof contextPropsPayload === 'function' ? contextPropsPayload(theme) : contextPropsPayload;\n\n  return { ...defaultProps, ...contextProps, ...filterProps(props) };\n}\n\nexport interface MantineProviderProps {\n  theme?: MantineThemeOverride;\n  emotionCache?: EmotionCache;\n  withNormalizeCSS?: boolean;\n  withGlobalStyles?: boolean;\n  withCSSVariables?: boolean;\n  children: React.ReactNode;\n  inherit?: boolean;\n}\n\nexport function MantineProvider({\n  theme,\n  emotionCache,\n  withNormalizeCSS = false,\n  withGlobalStyles = false,\n  withCSSVariables = false,\n  inherit = false,\n  children,\n}: MantineProviderProps) {\n  const ctx = useContext(MantineProviderContext);\n  const mergedTheme = mergeThemeWithFunctions(\n    DEFAULT_THEME,\n    inherit ? { ...ctx.theme, ...theme } : theme\n  );\n\n  return (\n    <ThemeProvider theme={mergedTheme}>\n      <MantineProviderContext.Provider value={{ theme: mergedTheme, emotionCache }}>\n        {withNormalizeCSS && <NormalizeCSS />}\n        {withGlobalStyles && <GlobalStyles theme={mergedTheme} />}\n        {withCSSVariables && <MantineCssVariables theme={mergedTheme} />}\n        {typeof mergedTheme.globalStyles === 'function' && (\n          <Global styles={mergedTheme.globalStyles(mergedTheme) as any} />\n        )}\n        {children}\n      </MantineProviderContext.Provider>\n    </ThemeProvider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n"]},"metadata":{},"sourceType":"module"}