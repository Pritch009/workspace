{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { RadioIcon } from './RadioIcon.js';\nimport { useRadioGroupContext } from './RadioGroup.context.js';\nimport { RadioGroup } from './RadioGroup/RadioGroup.js';\nimport useStyles from './Radio.styles.js';\nimport { extractSystemStyles } from '../Box/style-system-props/extract-system-styles/extract-system-styles.js';\nimport { InlineInput } from '../InlineInput/InlineInput.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  icon: RadioIcon,\n  transitionDuration: 100,\n  size: \"sm\",\n  labelPosition: \"right\"\n};\nconst Radio = forwardRef((props, ref) => {\n  var _b, _c;\n  const _a = useComponentDefaultProps(\"Radio\", defaultProps, props),\n    {\n      className,\n      style,\n      id,\n      label,\n      size,\n      title,\n      disabled,\n      color,\n      classNames,\n      styles,\n      sx,\n      icon: Icon,\n      transitionDuration,\n      wrapperProps,\n      unstyled,\n      labelPosition,\n      description,\n      error,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"style\", \"id\", \"label\", \"size\", \"title\", \"disabled\", \"color\", \"classNames\", \"styles\", \"sx\", \"icon\", \"transitionDuration\", \"wrapperProps\", \"unstyled\", \"labelPosition\", \"description\", \"error\", \"variant\"]);\n  const ctx = useRadioGroupContext();\n  const contextSize = (_b = ctx == null ? void 0 : ctx.size) != null ? _b : size;\n  const componentSize = props.size ? size : contextSize;\n  const {\n    classes\n  } = useStyles({\n    color,\n    transitionDuration,\n    labelPosition,\n    error: !!error\n  }, {\n    name: \"Radio\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size: componentSize\n  });\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value === rest.value,\n    name: (_c = rest.name) != null ? _c : ctx.name,\n    onChange: ctx.onChange\n  } : {};\n  return /* @__PURE__ */React.createElement(InlineInput, __spreadValues(__spreadValues({\n    className,\n    sx,\n    style,\n    id: uuid,\n    size: componentSize,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    __staticSelector: \"Radio\",\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || void 0,\n    variant\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.inner\n  }, /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    ref,\n    className: classes.radio,\n    type: \"radio\",\n    id: uuid,\n    disabled\n  }, rest), contextProps)), /* @__PURE__ */React.createElement(Icon, {\n    className: classes.icon,\n    \"aria-hidden\": true\n  })));\n});\nRadio.displayName = \"@mantine/core/Radio\";\nRadio.Group = RadioGroup;\nexport { Radio };","map":{"version":3,"sources":["../../src/Radio/Radio.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { extractSystemStyles } from '../Box';\nimport { RadioIcon } from './RadioIcon';\nimport { useRadioGroupContext } from './RadioGroup.context';\nimport { RadioGroup } from './RadioGroup/RadioGroup';\nimport { InlineInput, InlineInputStylesNames } from '../InlineInput';\nimport useStyles, { RadioStylesParams } from './Radio.styles';\n\nexport type RadioStylesNames = Selectors<typeof useStyles> | InlineInputStylesNames;\n\nexport interface RadioProps\n  extends DefaultProps<RadioStylesNames, RadioStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'size'> {\n  variant?: string;\n\n  /** Radio label */\n  label?: React.ReactNode;\n\n  /** Active radio color from theme.colors */\n  color?: MantineColor;\n\n  /** Predefined label fontSize, radio width, height and border-radius */\n  size?: MantineSize;\n\n  /** Replace default icon */\n  icon?: React.FC<React.ComponentPropsWithoutRef<'svg'>>;\n\n  /** Animation duration in ms */\n  transitionDuration?: number;\n\n  /** Props spread to root element */\n  wrapperProps?: Record<string, any>;\n\n  /** Position of label */\n  labelPosition?: 'left' | 'right';\n\n  /** description, displayed after label */\n  description?: React.ReactNode;\n\n  /** Displays error message after input */\n  error?: React.ReactNode;\n}\n\nconst defaultProps: Partial<RadioProps> = {\n  icon: RadioIcon,\n  transitionDuration: 100,\n  size: 'sm',\n  labelPosition: 'right',\n};\n\ntype RadioComponent = ForwardRefWithStaticComponents<RadioProps, { Group: typeof RadioGroup }>;\n\nexport const Radio: RadioComponent = forwardRef<HTMLInputElement, RadioProps>((props, ref) => {\n  const {\n    className,\n    style,\n    id,\n    label,\n    size,\n    title,\n    disabled,\n    color,\n    classNames,\n    styles,\n    sx,\n    icon: Icon,\n    transitionDuration,\n    wrapperProps,\n    unstyled,\n    labelPosition,\n    description,\n    error,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Radio', defaultProps, props);\n  const ctx = useRadioGroupContext();\n\n  const contextSize = ctx?.size ?? size;\n  const componentSize = props.size ? size : contextSize;\n\n  const { classes } = useStyles(\n    { color, transitionDuration, labelPosition, error: !!error },\n    { name: 'Radio', classNames, styles, unstyled, variant, size: componentSize }\n  );\n\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value === rest.value,\n        name: rest.name ?? ctx.name,\n        onChange: ctx.onChange,\n      }\n    : {};\n\n  return (\n    <InlineInput\n      className={className}\n      sx={sx}\n      style={style}\n      id={uuid}\n      size={componentSize}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      __staticSelector=\"Radio\"\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || undefined}\n      variant={variant}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <div className={classes.inner}>\n        <input\n          ref={ref}\n          className={classes.radio}\n          type=\"radio\"\n          id={uuid}\n          disabled={disabled}\n          {...rest}\n          {...contextProps}\n        />\n        <Icon className={classes.icon} aria-hidden />\n      </div>\n    </InlineInput>\n  );\n}) as any;\n\nRadio.displayName = '@mantine/core/Radio';\nRadio.Group = RadioGroup;\n"]},"metadata":{},"sourceType":"module"}