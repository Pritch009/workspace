{"ast":null,"code":"import { useContext, createContext } from 'react';\nconst InputWrapperContext = createContext({\n  offsetBottom: false,\n  offsetTop: false,\n  describedBy: void 0\n});\nconst InputWrapperProvider = InputWrapperContext.Provider;\nconst useInputWrapperContext = () => useContext(InputWrapperContext);\nexport { InputWrapperProvider, useInputWrapperContext };","map":{"version":3,"sources":["../../src/Input/InputWrapper.context.ts"],"names":[],"mappings":";AACA,MAAM,mBAAmB,GAAG,aAAa,CAAC;EACxC,YAAY,EAAE,KAAK;EACnB,SAAS,EAAE,KAAK;EAChB,WAAW,EAAE,KAAK;AACpB,CAAC,CAAC;AACU,MAAC,oBAAoB,GAAG,mBAAmB,CAAC,QAAA;AAC5C,MAAC,sBAAsB,GAAG,CAAA,KAAM,UAAU,CAAC,mBAAmB,CAAA","sourcesContent":["import { createContext, useContext } from 'react';\n\ninterface InputWrapperContextValue {\n  offsetTop: boolean;\n  offsetBottom: boolean;\n  describedBy: string;\n}\n\nconst InputWrapperContext = createContext<InputWrapperContextValue>({\n  offsetBottom: false,\n  offsetTop: false,\n  describedBy: undefined,\n});\n\nexport const InputWrapperProvider = InputWrapperContext.Provider;\nexport const useInputWrapperContext = () => useContext(InputWrapperContext);\n"]},"metadata":{},"sourceType":"module"}