{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroup } from './ChipGroup/ChipGroup.js';\nimport { useChipGroup } from './ChipGroup.context.js';\nimport useStyles from './Chip.styles.js';\nimport { extractSystemStyles } from '../Box/style-system-props/extract-system-styles/extract-system-styles.js';\nimport { Box } from '../Box/Box.js';\nimport { CheckIcon } from '../Checkbox/CheckboxIcon.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  type: \"checkbox\",\n  size: \"sm\",\n  radius: \"xl\",\n  variant: \"outline\"\n};\nconst Chip = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Chip\", defaultProps, props),\n    {\n      radius,\n      type,\n      size,\n      variant,\n      disabled,\n      id,\n      color,\n      children,\n      className,\n      classNames,\n      style,\n      styles,\n      checked,\n      defaultChecked,\n      onChange,\n      sx,\n      wrapperProps,\n      value,\n      unstyled\n    } = _a,\n    others = __objRest(_a, [\"radius\", \"type\", \"size\", \"variant\", \"disabled\", \"id\", \"color\", \"children\", \"className\", \"classNames\", \"style\", \"styles\", \"checked\", \"defaultChecked\", \"onChange\", \"sx\", \"wrapperProps\", \"value\", \"unstyled\"]);\n  const ctx = useChipGroup();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius,\n    color\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Chip\",\n    variant,\n    size\n  });\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  const contextProps = ctx ? {\n    checked: ctx.isChipSelected(value),\n    onChange: ctx.onChange,\n    type: ctx.multiple ? \"checkbox\" : \"radio\"\n  } : {};\n  const _checked = contextProps.checked || _value;\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    style,\n    sx\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    type,\n    className: classes.input,\n    checked: _checked,\n    onChange: event => setValue(event.currentTarget.checked),\n    id: uuid,\n    disabled,\n    ref,\n    value\n  }, contextProps), rest)), /* @__PURE__ */React.createElement(\"label\", {\n    htmlFor: uuid,\n    \"data-checked\": _checked || void 0,\n    \"data-disabled\": disabled || void 0,\n    className: classes.label\n  }, _checked && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.iconWrapper\n  }, /* @__PURE__ */React.createElement(CheckIcon, {\n    className: classes.checkIcon\n  })), children));\n});\nChip.displayName = \"@mantine/core/Chip\";\nChip.Group = ChipGroup;\nexport { Chip };","map":{"version":3,"sources":["../../src/Chip/Chip.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n  Variants,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { Box, extractSystemStyles } from '../Box';\nimport { CheckIcon } from '../Checkbox';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport { useChipGroup } from './ChipGroup.context';\nimport useStyles, { ChipStylesParams } from './Chip.styles';\n\nexport type ChipStylesNames = Selectors<typeof useStyles>;\n\nexport interface ChipProps\n  extends DefaultProps<ChipStylesNames, ChipStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'size' | 'onChange'> {\n  /** Key of theme.radius or any valid CSS value to set border-radius, \"xl\" by default */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineNumberSize;\n\n  /** Chip input type */\n  type?: 'radio' | 'checkbox';\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: Variants<'outline' | 'filled' | 'light'>;\n\n  /** Chip label */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default value for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?(checked: boolean): void;\n\n  /** Active color from theme, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Static id to bind input with label */\n  id?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<ChipProps> = {\n  type: 'checkbox',\n  size: 'sm',\n  radius: 'xl',\n  variant: 'outline',\n};\n\ntype ChipComponent = ForwardRefWithStaticComponents<ChipProps, { Group: typeof ChipGroup }>;\n\nexport const Chip: ChipComponent = forwardRef<HTMLInputElement, ChipProps>((props, ref) => {\n  const {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Chip', defaultProps, props);\n\n  const ctx = useChipGroup();\n  const uuid = useId(id);\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const { classes, cx } = useStyles(\n    { radius, color },\n    { classNames, styles, unstyled, name: 'Chip', variant, size }\n  );\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: ctx.onChange,\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      className={cx(classes.root, className)}\n      style={style}\n      sx={sx}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        className={classes.input}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        className={classes.label}\n      >\n        {_checked && (\n          <span className={classes.iconWrapper}>\n            <CheckIcon className={classes.checkIcon} />\n          </span>\n        )}\n        {children}\n      </label>\n    </Box>\n  );\n}) as any;\n\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"]},"metadata":{},"sourceType":"module"}