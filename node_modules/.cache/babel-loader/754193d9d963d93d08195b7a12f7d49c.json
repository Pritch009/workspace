{"ast":null,"code":"import { transitions } from '../transitions.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nconst transitionStatuses = {\n  entering: \"in\",\n  entered: \"in\",\n  exiting: \"out\",\n  exited: \"out\",\n  \"pre-exiting\": \"out\",\n  \"pre-entering\": \"out\"\n};\nfunction getTransitionStyles(_ref) {\n  let {\n    transition,\n    state,\n    duration,\n    timingFunction\n  } = _ref;\n  const shared = {\n    transitionDuration: `${duration}ms`,\n    transitionTimingFunction: timingFunction\n  };\n  if (typeof transition === \"string\") {\n    if (!(transition in transitions)) {\n      return null;\n    }\n    return __spreadValues(__spreadValues(__spreadValues({\n      transitionProperty: transitions[transition].transitionProperty\n    }, shared), transitions[transition].common), transitions[transition][transitionStatuses[state]]);\n  }\n  return __spreadValues(__spreadValues(__spreadValues({\n    transitionProperty: transition.transitionProperty\n  }, shared), transition.common), transition[transitionStatuses[state]]);\n}\nexport { getTransitionStyles };","map":{"version":3,"sources":["../../../src/Transition/get-transition-styles/get-transition-styles.ts"],"names":[],"mappings":";AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc;AACrC,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAqB;AACtD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;AAClD,IAAI,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC,oBAAoB;AACxD,IAAI,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,KAAK,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;EAAE,UAAU,EAAE,IAAI;EAAE,YAAY,EAAE,IAAI;EAAE,QAAQ,EAAE,IAAI;EAAE;AAAK,CAAE,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;AAC/J,IAAI,cAAc,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK;EAC7B,KAAK,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAA,CAAE,CAAC,EAC5B,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACrC,IAAI,mBAAmB,EACrB,KAAK,IAAI,IAAI,IAAI,mBAAmB,CAAC,CAAC,CAAC,EAAE;IACvC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAC5B,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;EACzC;EACE,OAAO,CAAC;AACV,CAAC;AAED,MAAM,kBAAkB,GAAG;EACzB,QAAQ,EAAE,IAAI;EACd,OAAO,EAAE,IAAI;EACb,OAAO,EAAE,KAAK;EACd,MAAM,EAAE,KAAK;EACb,aAAa,EAAE,KAAK;EACpB,cAAc,EAAE;AAClB,CAAC;AACM,SAAS,mBAAmB,CAAA,IAAA,EAKhC;EAAA,IALiC;IAClC,UAAU;IACV,KAAK;IACL,QAAQ;IACR;EACF,CAAC,GAAA,IAAA;EACC,MAAM,MAAM,GAAG;IACb,kBAAkB,EAAG,GAAE,QAAS,IAAG;IACnC,wBAAwB,EAAE;EAC9B,CAAG;EACD,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;IAClC,IAAI,EAAE,UAAU,IAAI,WAAW,CAAC,EAAE;MAChC,OAAO,IAAI;IACjB;IACI,OAAO,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC;MAClD,kBAAkB,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC;IAClD,CAAK,EAAE,MAAM,CAAC,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,UAAU,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;EACpG;EACE,OAAO,cAAc,CAAC,cAAc,CAAC,cAAc,CAAC;IAClD,kBAAkB,EAAE,UAAU,CAAC;EACnC,CAAG,EAAE,MAAM,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;AACxE","sourcesContent":["import { MantineTransition, transitions } from '../transitions';\n\nconst transitionStatuses = {\n  entering: 'in',\n  entered: 'in',\n  exiting: 'out',\n  exited: 'out',\n  'pre-exiting': 'out',\n  'pre-entering': 'out',\n} as const;\n\nexport function getTransitionStyles({\n  transition,\n  state,\n  duration,\n  timingFunction,\n}: {\n  transition: MantineTransition;\n  state: keyof typeof transitionStatuses;\n  duration: number;\n  timingFunction: React.CSSProperties['transitionTimingFunction'];\n}): React.CSSProperties {\n  const shared = {\n    transitionDuration: `${duration}ms`,\n    transitionTimingFunction: timingFunction,\n  };\n\n  if (typeof transition === 'string') {\n    if (!(transition in transitions)) {\n      return null;\n    }\n\n    return {\n      transitionProperty: transitions[transition].transitionProperty,\n      ...shared,\n      ...transitions[transition].common,\n      ...transitions[transition][transitionStatuses[state]],\n    };\n  }\n\n  return {\n    transitionProperty: transition.transitionProperty,\n    ...shared,\n    ...transition.common,\n    ...transition[transitionStatuses[state]],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}