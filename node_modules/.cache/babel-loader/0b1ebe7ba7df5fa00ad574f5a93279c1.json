{"ast":null,"code":"import React from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ModalRoot } from './ModalRoot/ModalRoot.js';\nimport { ModalContent } from './ModalContent/ModalContent.js';\nimport { ModalBase, ModalBaseDefaultProps } from '../ModalBase/ModalBase.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = __spreadProps(__spreadValues({}, ModalBaseDefaultProps), {\n  transitionProps: {\n    duration: 200,\n    transition: \"pop\"\n  },\n  withOverlay: true,\n  withCloseButton: true\n});\nfunction Modal(props) {\n  const _a = useComponentDefaultProps(\"Modal\", defaultProps, props),\n    {\n      title,\n      withOverlay,\n      overlayProps,\n      withCloseButton,\n      closeButtonProps,\n      children\n    } = _a,\n    others = __objRest(_a, [\"title\", \"withOverlay\", \"overlayProps\", \"withCloseButton\", \"closeButtonProps\", \"children\"]);\n  const hasHeader = !!title || withCloseButton;\n  return /* @__PURE__ */React.createElement(ModalRoot, __spreadValues({}, others), withOverlay && /* @__PURE__ */React.createElement(ModalBase.Overlay, __spreadValues({}, overlayProps)), /* @__PURE__ */React.createElement(ModalContent, null, hasHeader && /* @__PURE__ */React.createElement(ModalBase.Header, null, title && /* @__PURE__ */React.createElement(ModalBase.Title, null, title), withCloseButton && /* @__PURE__ */React.createElement(ModalBase.CloseButton, __spreadValues({}, closeButtonProps))), /* @__PURE__ */React.createElement(ModalBase.Body, null, children)));\n}\nModal.Root = ModalRoot;\nModal.CloseButton = ModalBase.CloseButton;\nModal.Overlay = ModalBase.Overlay;\nModal.Content = ModalContent;\nModal.Header = ModalBase.Header;\nModal.Title = ModalBase.Title;\nModal.Body = ModalBase.Body;\nModal.NativeScrollArea = ModalBase.NativeScrollArea;\nexport { Modal };","map":{"version":3,"sources":["../../src/Modal/Modal.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport {\n  ModalBase,\n  ModalBaseDefaultProps,\n  ModalBaseOverlayProps,\n  ModalBaseCloseButtonProps,\n} from '../ModalBase';\nimport { ModalRoot, ModalRootProps } from './ModalRoot/ModalRoot';\nimport { ModalContent } from './ModalContent/ModalContent';\n\nexport interface ModalProps extends Omit<ModalRootProps, 'title'> {\n  /** Modal title */\n  title?: React.ReactNode;\n\n  /** Determines whether overlay should be rendered, true by default */\n  withOverlay?: boolean;\n\n  /** Props added to Overlay component, use configure opacity, background color, styles and other properties */\n  overlayProps?: ModalBaseOverlayProps;\n\n  /** Modal content */\n  children?: React.ReactNode;\n\n  /** Determines whether close button should be rendered, true by default */\n  withCloseButton?: boolean;\n\n  /** Props added to close button */\n  closeButtonProps?: ModalBaseCloseButtonProps;\n}\n\nconst defaultProps: Partial<ModalProps> = {\n  ...ModalBaseDefaultProps,\n  transitionProps: { duration: 200, transition: 'pop' },\n  withOverlay: true,\n  withCloseButton: true,\n};\n\nexport function Modal(props: ModalProps) {\n  const {\n    title,\n    withOverlay,\n    overlayProps,\n    withCloseButton,\n    closeButtonProps,\n    children,\n    ...others\n  } = useComponentDefaultProps('Modal', defaultProps, props);\n\n  const hasHeader = !!title || withCloseButton;\n\n  return (\n    <ModalRoot {...others}>\n      {withOverlay && <ModalBase.Overlay {...overlayProps} />}\n      <ModalContent>\n        {hasHeader && (\n          <ModalBase.Header>\n            {title && <ModalBase.Title>{title}</ModalBase.Title>}\n            {withCloseButton && <ModalBase.CloseButton {...closeButtonProps} />}\n          </ModalBase.Header>\n        )}\n\n        <ModalBase.Body>{children}</ModalBase.Body>\n      </ModalContent>\n    </ModalRoot>\n  );\n}\n\nModal.Root = ModalRoot;\nModal.CloseButton = ModalBase.CloseButton;\nModal.Overlay = ModalBase.Overlay;\nModal.Content = ModalContent;\nModal.Header = ModalBase.Header;\nModal.Title = ModalBase.Title;\nModal.Body = ModalBase.Body;\nModal.NativeScrollArea = ModalBase.NativeScrollArea;\n"]},"metadata":{},"sourceType":"module"}