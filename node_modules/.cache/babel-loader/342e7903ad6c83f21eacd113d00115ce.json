{"ast":null,"code":"import { createStyles, getStylesRef, getSize, rem } from '@mantine/styles';\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nconst SATURATION_HEIGHTS = {\n  xs: rem(100),\n  sm: rem(110),\n  md: rem(120),\n  lg: rem(140),\n  xl: rem(160)\n};\nvar useStyles = createStyles((theme, _params, _ref) => {\n  let {\n    size\n  } = _ref;\n  return {\n    saturationThumb: {\n      ref: getStylesRef(\"saturationThumb\")\n    },\n    saturation: {\n      boxSizing: \"border-box\",\n      position: \"relative\",\n      height: getSize({\n        size,\n        sizes: SATURATION_HEIGHTS\n      }),\n      borderRadius: theme.radius.sm,\n      margin: `calc(${getSize({\n        size,\n        sizes: THUMB_SIZES\n      })} / 2)`,\n      WebkitTapHighlightColor: \"transparent\",\n      [`&:focus .${getStylesRef(\"saturationThumb\")}`]: __spreadValues({}, theme.focusRing === \"always\" || theme.focusRing === \"auto\" ? theme.focusRingStyles.styles(theme) : theme.focusRingStyles.resetStyles(theme)),\n      [`&:focus:not(:focus-visible) .${getStylesRef(\"saturationThumb\")}`]: __spreadValues({}, theme.focusRing === \"auto\" || theme.focusRing === \"never\" ? theme.focusRingStyles.resetStyles(theme) : null)\n    },\n    saturationOverlay: __spreadValues({\n      boxSizing: \"border-box\",\n      borderRadius: theme.radius.sm\n    }, theme.fn.cover(`calc(${getSize({\n      size,\n      sizes: THUMB_SIZES\n    })} * -1 / 2 - ${rem(1)})`))\n  };\n});\nexport default useStyles;","map":{"version":3,"sources":["../../../src/ColorPicker/Saturation/Saturation.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import { createStyles, getStylesRef, rem, getSize } from '@mantine/styles';\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles';\n\nconst SATURATION_HEIGHTS = {\n  xs: rem(100),\n  sm: rem(110),\n  md: rem(120),\n  lg: rem(140),\n  xl: rem(160),\n};\n\nexport default createStyles((theme, _params, { size }) => ({\n  saturationThumb: {\n    ref: getStylesRef('saturationThumb'),\n  },\n\n  saturation: {\n    boxSizing: 'border-box',\n    position: 'relative',\n    height: getSize({ size, sizes: SATURATION_HEIGHTS }),\n    borderRadius: theme.radius.sm,\n    margin: `calc(${getSize({ size, sizes: THUMB_SIZES })} / 2)`,\n    WebkitTapHighlightColor: 'transparent',\n\n    [`&:focus .${getStylesRef('saturationThumb')}`]: {\n      ...(theme.focusRing === 'always' || theme.focusRing === 'auto'\n        ? theme.focusRingStyles.styles(theme)\n        : theme.focusRingStyles.resetStyles(theme)),\n    },\n\n    [`&:focus:not(:focus-visible) .${getStylesRef('saturationThumb')}`]: {\n      ...(theme.focusRing === 'auto' || theme.focusRing === 'never'\n        ? theme.focusRingStyles.resetStyles(theme)\n        : null),\n    },\n  },\n\n  saturationOverlay: {\n    boxSizing: 'border-box',\n    borderRadius: theme.radius.sm,\n    ...theme.fn.cover(`calc(${getSize({ size, sizes: THUMB_SIZES })} * -1 / 2 - ${rem(1)})`),\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}