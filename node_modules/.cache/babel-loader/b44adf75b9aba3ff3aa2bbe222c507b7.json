{"ast":null,"code":"function isMarkFilled(_ref) {\n  let {\n    mark,\n    offset,\n    value,\n    inverted = false\n  } = _ref;\n  return inverted ? typeof offset === \"number\" ? mark.value <= offset || mark.value >= value : mark.value >= value : typeof offset === \"number\" ? mark.value >= offset && mark.value <= value : mark.value <= value;\n}\nexport { isMarkFilled };","map":{"version":3,"sources":["../../../src/Slider/Marks/is-mark-filled.ts"],"names":[],"mappings":"AAAO,SAAS,YAAY,CAAA,IAAA,EAA4C;EAAA,IAA3C;IAAE,IAAI;IAAE,MAAM;IAAE,KAAK;IAAE,QAAQ,GAAG;EAAK,CAAE,GAAA,IAAA;EACpE,OAAO,QAAQ,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,KAAK;AACnN","sourcesContent":["interface IsMarkFilled {\n  mark: { value: number; label?: any };\n  offset?: number;\n  value: number;\n  inverted?: boolean;\n}\n\nexport function isMarkFilled({ mark, offset, value, inverted = false }: IsMarkFilled) {\n  return inverted\n    ? typeof offset === 'number'\n      ? mark.value <= offset || mark.value >= value\n      : mark.value >= value\n    : typeof offset === 'number'\n    ? mark.value >= offset && mark.value <= value\n    : mark.value <= value;\n}\n"]},"metadata":{},"sourceType":"module"}