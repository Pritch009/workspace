{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Indicator.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nconst defaultProps = {\n  position: \"top-end\",\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  processing: false,\n  size: 10,\n  radius: 1e3,\n  zIndex: getDefaultZIndex(\"app\")\n};\nconst Indicator = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Indicator\", defaultProps, props),\n    {\n      children,\n      position,\n      offset,\n      size,\n      radius,\n      inline,\n      withBorder,\n      className,\n      color,\n      styles,\n      label,\n      classNames,\n      disabled,\n      zIndex,\n      unstyled,\n      processing,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"children\", \"position\", \"offset\", \"size\", \"radius\", \"inline\", \"withBorder\", \"className\", \"color\", \"styles\", \"label\", \"classNames\", \"disabled\", \"zIndex\", \"unstyled\", \"processing\", \"variant\"]);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    position,\n    offset,\n    radius,\n    inline,\n    color,\n    withBorder,\n    zIndex,\n    withLabel: !!label\n  }, {\n    name: \"Indicator\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, className)\n  }, others), !disabled && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.indicator, classes.common)\n  }, label), processing && /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.processing, classes.common)\n  })), children);\n});\nIndicator.displayName = \"@mantine/core/Indicator\";\nexport { Indicator };","map":{"version":3,"sources":["../../src/Indicator/Indicator.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { forwardRef } from 'react';\nimport {\n  Selectors,\n  DefaultProps,\n  MantineColor,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  getDefaultZIndex,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport { IndicatorPosition } from './Indicator.types';\nimport useStyles, { IndicatorStylesParams } from './Indicator.styles';\n\nexport type IndicatorStylesNames = Selectors<typeof useStyles>;\n\nexport interface IndicatorProps\n  extends DefaultProps<IndicatorStylesNames, IndicatorStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Element that should have an indicator */\n  children: React.ReactNode;\n\n  /** Indicator position relative to child element */\n  position?: IndicatorPosition;\n\n  /** Changes position offset, usually used when element has border-radius */\n  offset?: number;\n\n  /** Determines whether indicator container should be an inline element */\n  inline?: boolean;\n\n  /** Indicator width and height */\n  size?: number | string;\n\n  /** Indicator label */\n  label?: React.ReactNode;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, 1000rem by default */\n  radius?: MantineNumberSize;\n\n  /** Color from theme.colors or any other valid CSS color value */\n  color?: MantineColor;\n\n  /** Determines whether indicator should have border */\n  withBorder?: boolean;\n\n  /** When component is disabled it renders children without indicator */\n  disabled?: boolean;\n\n  /** Indicator processing animation */\n  processing?: boolean;\n\n  /** Indicator z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n}\n\nconst defaultProps: Partial<IndicatorProps> = {\n  position: 'top-end',\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  processing: false,\n  size: 10,\n  radius: 1000,\n  zIndex: getDefaultZIndex('app'),\n};\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>((props, ref) => {\n  const {\n    children,\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    withBorder,\n    className,\n    color,\n    styles,\n    label,\n    classNames,\n    disabled,\n    zIndex,\n    unstyled,\n    processing,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Indicator', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { position, offset, radius, inline, color, withBorder, zIndex, withLabel: !!label },\n    { name: 'Indicator', classNames, styles, unstyled, variant, size }\n  );\n\n  return (\n    <Box ref={ref} className={cx(classes.root, className)} {...others}>\n      {!disabled && (\n        <>\n          <div className={cx(classes.indicator, classes.common)}>{label}</div>\n          {processing && <div className={cx(classes.processing, classes.common)} />}\n        </>\n      )}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.displayName = '@mantine/core/Indicator';\n"]},"metadata":{},"sourceType":"module"}