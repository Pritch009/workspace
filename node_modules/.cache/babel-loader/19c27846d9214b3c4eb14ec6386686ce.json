{"ast":null,"code":"import { cloneElement } from 'react';\nimport { isElement } from '@mantine/utils';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\nfunction FocusTrap(_ref) {\n  let {\n    children,\n    active = true,\n    refProp = \"ref\"\n  } = _ref;\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children == null ? void 0 : children.ref);\n  if (!isElement(children)) {\n    return children;\n  }\n  return cloneElement(children, {\n    [refProp]: ref\n  });\n}\nFocusTrap.displayName = \"@mantine/core/FocusTrap\";\nexport { FocusTrap };","map":{"version":3,"sources":["../../src/FocusTrap/FocusTrap.tsx"],"names":[],"mappings":";;;AAGO,SAAS,SAAS,CAAA,IAAA,EAItB;EAAA,IAJuB;IACxB,QAAQ;IACR,MAAM,GAAG,IAAI;IACb,OAAO,GAAG;EACZ,CAAC,GAAA,IAAA;EACC,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC;EACzC,MAAM,GAAG,GAAG,YAAY,CAAC,YAAY,EAAE,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC;EAChF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;IACxB,OAAO,QAAQ;EACnB;EACE,OAAO,YAAY,CAAC,QAAQ,EAAE;IAAE,CAAC,OAAO,GAAG;EAAG,CAAE,CAAC;AACnD;AACA,SAAS,CAAC,WAAW,GAAG,yBAAyB","sourcesContent":["import React, { cloneElement } from 'react';\nimport { isElement } from '@mantine/utils';\nimport { useFocusTrap, useMergedRef } from '@mantine/hooks';\n\nexport interface FocusTrapProps {\n  /** Element at which focus should be trapped, should support ref prop */\n  children: any;\n\n  /** Determines whether focus should be trapped within child element */\n  active?: boolean;\n\n  /** Prop that should be used to access component ref */\n  refProp?: string;\n}\n\nexport function FocusTrap({\n  children,\n  active = true,\n  refProp = 'ref',\n}: FocusTrapProps): React.ReactElement {\n  const focusTrapRef = useFocusTrap(active);\n  const ref = useMergedRef(focusTrapRef, children?.ref);\n\n  if (!isElement(children)) {\n    return children;\n  }\n\n  return cloneElement(children, { [refProp]: ref });\n}\n\nFocusTrap.displayName = '@mantine/core/FocusTrap';\n"]},"metadata":{},"sourceType":"module"}