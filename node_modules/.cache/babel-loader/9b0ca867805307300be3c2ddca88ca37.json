{"ast":null,"code":"import React from 'react';\nimport { getPosition } from '../utils/get-position/get-position.js';\nimport { isMarkFilled } from './is-mark-filled.js';\nimport useStyles from './Marks.styles.js';\nimport { Box } from '../../Box/Box.js';\nfunction Marks(_ref) {\n  let {\n    marks,\n    color,\n    size,\n    thumbSize,\n    min,\n    max,\n    value,\n    classNames,\n    styles,\n    offset,\n    onChange,\n    disabled,\n    unstyled,\n    inverted,\n    variant\n  } = _ref;\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    disabled,\n    thumbSize\n  }, {\n    name: \"Slider\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  const items = marks.map((mark, index) => /* @__PURE__ */React.createElement(Box, {\n    className: classes.markWrapper,\n    sx: {\n      left: `${getPosition({\n        value: mark.value,\n        min,\n        max\n      })}%`\n    },\n    key: index\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.mark, {\n      [classes.markFilled]: isMarkFilled({\n        mark,\n        value,\n        offset,\n        inverted\n      })\n    })\n  }), mark.label && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.markLabel,\n    onMouseDown: event => {\n      event.stopPropagation();\n      !disabled && onChange(mark.value);\n    },\n    onTouchStart: event => {\n      event.stopPropagation();\n      !disabled && onChange(mark.value);\n    }\n  }, mark.label)));\n  return /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.marksContainer\n  }, items);\n}\nMarks.displayName = \"@mantine/core/SliderMarks\";\nexport { Marks };","map":{"version":3,"sources":["../../../src/Slider/Marks/Marks.tsx"],"names":[],"mappings":";;;;;AAKO,SAAS,KAAK,CAAA,IAAA,EAgBlB;EAAA,IAhBmB;IACpB,KAAK;IACL,KAAK;IACL,IAAI;IACJ,SAAS;IACT,GAAG;IACH,GAAG;IACH,KAAK;IACL,UAAU;IACV,MAAM;IACN,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR;EACF,CAAC,GAAA,IAAA;EACC,MAAM;IAAE,OAAO;IAAE;EAAE,CAAE,GAAG,SAAS,CAAC;IAAE,KAAK;IAAE,QAAQ;IAAE;EAAS,CAAE,EAAE;IAAE,IAAI,EAAE,QAAQ;IAAE,UAAU;IAAE,MAAM;IAAE,QAAQ;IAAE,OAAO;IAAE;EAAI,CAAE,CAAC;EAClI,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAA,eAAqB,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE;IAChF,SAAS,EAAE,OAAO,CAAC,WAAW;IAC9B,EAAE,EAAE;MAAE,IAAI,EAAG,GAAE,WAAW,CAAC;QAAE,KAAK,EAAE,IAAI,CAAC,KAAK;QAAE,GAAG;QAAE;MAAG,CAAE,CAAE;IAAE,CAAE;IAChE,GAAG,EAAE;EACT,CAAG,EAAA,eAAkB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAC5C,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE;MAC1B,CAAC,OAAO,CAAC,UAAU,GAAG,YAAY,CAAC;QAAE,IAAI;QAAE,KAAK;QAAE,MAAM;QAAE;MAAQ,CAAE;IAC1E,CAAK;EACL,CAAG,CAAC,EAAE,IAAI,CAAC,KAAK,IAAA,eAAoB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAC3D,SAAS,EAAE,OAAO,CAAC,SAAS;IAC5B,WAAW,EAAG,KAAK,IAAK;MACtB,KAAK,CAAC,eAAe,CAAA,CAAE;MACvB,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IACvC,CAAK;IACD,YAAY,EAAG,KAAK,IAAK;MACvB,KAAK,CAAC,eAAe,CAAA,CAAE;MACvB,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;IACvC;EACA,CAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;EAChB,OAAA,eAAuB,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE;IAChD,SAAS,EAAE,OAAO,CAAC;EACvB,CAAG,EAAE,KAAK,CAAC;AACX;AACA,KAAK,CAAC,WAAW,GAAG,2BAA2B","sourcesContent":["import React from 'react';\nimport { DefaultProps, MantineNumberSize, MantineColor, Selectors } from '@mantine/styles';\nimport { Box } from '../../Box';\nimport { getPosition } from '../utils/get-position/get-position';\nimport { isMarkFilled } from './is-mark-filled';\nimport useStyles from './Marks.styles';\n\nexport type MarksStylesNames = Selectors<typeof useStyles>;\n\nexport interface MarksProps extends DefaultProps<MarksStylesNames> {\n  marks: { value: number; label?: React.ReactNode }[];\n  size: MantineNumberSize;\n  thumbSize?: number;\n  color: MantineColor;\n  min: number;\n  max: number;\n  value: number;\n  onChange(value: number): void;\n  offset?: number;\n  disabled: boolean;\n  inverted?: boolean;\n  variant: string;\n}\n\nexport function Marks({\n  marks,\n  color,\n  size,\n  thumbSize,\n  min,\n  max,\n  value,\n  classNames,\n  styles,\n  offset,\n  onChange,\n  disabled,\n  unstyled,\n  inverted,\n  variant,\n}: MarksProps) {\n  const { classes, cx } = useStyles(\n    { color, disabled, thumbSize },\n    { name: 'Slider', classNames, styles, unstyled, variant, size }\n  );\n\n  const items = marks.map((mark, index) => (\n    <Box\n      className={classes.markWrapper}\n      sx={{ left: `${getPosition({ value: mark.value, min, max })}%` }}\n      key={index}\n    >\n      <div\n        className={cx(classes.mark, {\n          [classes.markFilled]: isMarkFilled({ mark, value, offset, inverted }),\n        })}\n      />\n      {mark.label && (\n        // eslint-disable-next-line jsx-a11y/no-static-element-interactions\n        <div\n          className={classes.markLabel}\n          onMouseDown={(event) => {\n            event.stopPropagation();\n            !disabled && onChange(mark.value);\n          }}\n          onTouchStart={(event) => {\n            event.stopPropagation();\n            !disabled && onChange(mark.value);\n          }}\n        >\n          {mark.label}\n        </div>\n      )}\n    </Box>\n  ));\n\n  return <div className={classes.marksContainer}>{items}</div>;\n}\n\nMarks.displayName = '@mantine/core/SliderMarks';\n"]},"metadata":{},"sourceType":"module"}