{"ast":null,"code":"import { useEffect } from 'react';\nfunction useWindowEvent(type, listener, options) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, [type, listener]);\n}\nexport { useWindowEvent };","map":{"version":3,"sources":["../../src/use-window-event/use-window-event.ts"],"names":[],"mappings":";AACO,SAAS,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;EACtD,SAAS,CAAC,MAAM;IACd,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC;IAChD,OAAO,MAAM,MAAM,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC;EACpE,CAAG,EAAE,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACtB","sourcesContent":["import { useEffect } from 'react';\n\nexport function useWindowEvent<K extends string>(\n  type: K,\n  listener: K extends keyof WindowEventMap\n    ? (this: Window, ev: WindowEventMap[K]) => void\n    : (this: Window, ev: CustomEvent) => void,\n  options?: boolean | AddEventListenerOptions\n) {\n  useEffect(() => {\n    window.addEventListener(type, listener, options);\n    return () => window.removeEventListener(type, listener, options);\n  }, [type, listener]);\n}\n"]},"metadata":{},"sourceType":"module"}