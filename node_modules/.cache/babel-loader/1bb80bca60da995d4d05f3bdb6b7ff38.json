{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Progress.styles.js';\nimport { Tooltip } from '../Tooltip/Tooltip.js';\nimport { Box } from '../Box/Box.js';\nimport { Text } from '../Text/Text.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\nfunction getCumulativeSections(sections) {\n  return sections.reduce((acc, section) => {\n    acc.sections.push(__spreadProps(__spreadValues({}, section), {\n      accumulated: acc.accumulated\n    }));\n    acc.accumulated += section.value;\n    return acc;\n  }, {\n    accumulated: 0,\n    sections: []\n  }).sections;\n}\nconst defaultProps = {\n  size: \"md\",\n  radius: \"sm\",\n  striped: false,\n  animate: false,\n  label: \"\"\n};\nconst Progress = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Progress\", defaultProps, props),\n    {\n      className,\n      value,\n      color,\n      size,\n      radius,\n      striped,\n      animate,\n      label,\n      \"aria-label\": ariaLabel,\n      classNames,\n      styles,\n      sections,\n      unstyled,\n      variant\n    } = _a,\n    others = __objRest(_a, [\"className\", \"value\", \"color\", \"size\", \"radius\", \"striped\", \"animate\", \"label\", \"aria-label\", \"classNames\", \"styles\", \"sections\", \"unstyled\", \"variant\"]);\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    color,\n    radius\n  }, {\n    name: \"Progress\",\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    size\n  });\n  const segments = Array.isArray(sections) ? getCumulativeSections(sections).map((_b, index) => {\n    var _c = _b,\n      {\n        tooltip,\n        accumulated,\n        value: sectionValue,\n        label: sectionLabel,\n        color: sectionColor\n      } = _c,\n      sectionProps = __objRest(_c, [\"tooltip\", \"accumulated\", \"value\", \"label\", \"color\"]);\n    return /* @__PURE__ */React.createElement(Tooltip.Floating, {\n      label: tooltip,\n      disabled: !tooltip,\n      key: index\n    }, /* @__PURE__ */React.createElement(Box, __spreadProps(__spreadValues({}, sectionProps), {\n      className: cx(classes.bar, sectionProps.className),\n      \"data-striped\": striped || animate || void 0,\n      \"data-animate\": animate || void 0,\n      sx: {\n        width: `${sectionValue}%`,\n        left: `${accumulated}%`,\n        backgroundColor: theme.fn.variant({\n          variant: \"filled\",\n          primaryFallback: false,\n          color: sectionColor || theme.primaryColor\n        }).background\n      }\n    }), sectionLabel && /* @__PURE__ */React.createElement(Text, {\n      className: classes.label\n    }, sectionLabel)));\n  }) : null;\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref\n  }, others), segments || /* @__PURE__ */React.createElement(\"div\", {\n    role: \"progressbar\",\n    \"aria-valuemax\": 100,\n    \"aria-valuemin\": 0,\n    \"aria-valuenow\": value,\n    \"aria-label\": ariaLabel,\n    className: classes.bar,\n    style: {\n      width: `${value}%`\n    },\n    \"data-striped\": striped || animate || void 0,\n    \"data-animate\": animate || void 0\n  }, label ? /* @__PURE__ */React.createElement(Text, {\n    className: classes.label\n  }, label) : \"\"));\n});\nProgress.displayName = \"@mantine/core/Progress\";\nexport { Progress };","map":{"version":3,"sources":["../../src/Progress/Progress.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport { Text } from '../Text';\nimport { Tooltip } from '../Tooltip';\nimport useStyles, { ProgressStylesParams } from './Progress.styles';\n\nexport type ProgressStylesNames = Selectors<typeof useStyles>;\n\ninterface ProgressSection extends React.ComponentPropsWithRef<'div'> {\n  value: number;\n  color: MantineColor;\n  label?: string;\n  tooltip?: React.ReactNode;\n}\n\nexport interface ProgressProps\n  extends DefaultProps<ProgressStylesNames, ProgressStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Percent of filled bar (0-100) */\n  value?: number;\n\n  /** Progress color from theme */\n  color?: MantineColor;\n\n  /** Height of progress bar */\n  size?: MantineNumberSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Adds stripes */\n  striped?: boolean;\n\n  /** Whether to animate striped progress bars */\n  animate?: boolean;\n\n  /** Text to be placed inside the progress bar */\n  label?: string;\n\n  /** Replaces value if present, renders multiple sections instead of single one */\n  sections?: ProgressSection[];\n}\n\nfunction getCumulativeSections(\n  sections: ProgressSection[]\n): (ProgressSection & { accumulated: number })[] {\n  return sections.reduce(\n    (acc, section) => {\n      acc.sections.push({ ...section, accumulated: acc.accumulated });\n      acc.accumulated += section.value;\n      return acc;\n    },\n    { accumulated: 0, sections: [] }\n  ).sections;\n}\n\nconst defaultProps: Partial<ProgressProps> = {\n  size: 'md',\n  radius: 'sm',\n  striped: false,\n  animate: false,\n  label: '',\n};\n\nexport const Progress = forwardRef<HTMLDivElement, ProgressProps>((props, ref) => {\n  const {\n    className,\n    value,\n    color,\n    size,\n    radius,\n    striped,\n    animate,\n    label,\n    'aria-label': ariaLabel,\n    classNames,\n    styles,\n    sections,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('Progress', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles(\n    { color, radius },\n    { name: 'Progress', classNames, styles, unstyled, variant, size }\n  );\n\n  const segments = Array.isArray(sections)\n    ? getCumulativeSections(sections).map(\n        (\n          {\n            tooltip,\n            accumulated,\n            value: sectionValue,\n            label: sectionLabel,\n            color: sectionColor,\n            ...sectionProps\n          },\n          index\n        ) => (\n          <Tooltip.Floating label={tooltip} disabled={!tooltip} key={index}>\n            <Box\n              {...sectionProps}\n              className={cx(classes.bar, sectionProps.className)}\n              data-striped={striped || animate || undefined}\n              data-animate={animate || undefined}\n              sx={{\n                width: `${sectionValue}%`,\n                left: `${accumulated}%`,\n                backgroundColor: theme.fn.variant({\n                  variant: 'filled',\n                  primaryFallback: false,\n                  color: sectionColor || theme.primaryColor,\n                }).background,\n              }}\n            >\n              {sectionLabel && <Text className={classes.label}>{sectionLabel}</Text>}\n            </Box>\n          </Tooltip.Floating>\n        )\n      )\n    : null;\n\n  return (\n    <Box className={cx(classes.root, className)} ref={ref} {...others}>\n      {segments || (\n        <div\n          role=\"progressbar\"\n          aria-valuemax={100}\n          aria-valuemin={0}\n          aria-valuenow={value}\n          aria-label={ariaLabel}\n          className={classes.bar}\n          style={{ width: `${value}%` }}\n          data-striped={striped || animate || undefined}\n          data-animate={animate || undefined}\n        >\n          {label ? <Text className={classes.label}>{label}</Text> : ''}\n        </div>\n      )}\n    </Box>\n  );\n});\n\nProgress.displayName = '@mantine/core/Progress';\n"]},"metadata":{},"sourceType":"module"}