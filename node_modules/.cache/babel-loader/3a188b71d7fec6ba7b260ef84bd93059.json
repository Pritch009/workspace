{"ast":null,"code":"import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles.js';\nimport { useTransition } from './use-transition.js';\nfunction Transition(_ref) {\n  let {\n    keepMounted,\n    transition,\n    duration = 250,\n    exitDuration = duration,\n    mounted,\n    children,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  } = _ref;\n  const {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction\n  } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited\n  });\n  if (transitionDuration === 0) {\n    return mounted ? /* @__PURE__ */React.createElement(React.Fragment, null, children({})) : keepMounted ? children({\n      display: \"none\"\n    }) : null;\n  }\n  return transitionStatus === \"exited\" ? keepMounted ? children({\n    display: \"none\"\n  }) : null : /* @__PURE__ */React.createElement(React.Fragment, null, children(getTransitionStyles({\n    transition,\n    duration: transitionDuration,\n    state: transitionStatus,\n    timingFunction: transitionTimingFunction\n  })));\n}\nTransition.displayName = \"@mantine/core/Transition\";\nexport { Transition };","map":{"version":3,"sources":["../../src/Transition/Transition.tsx"],"names":[],"mappings":";;;AAGO,SAAS,UAAU,CAAA,IAAA,EAYvB;EAAA,IAZwB;IACzB,WAAW;IACX,UAAU;IACV,QAAQ,GAAG,GAAG;IACd,YAAY,GAAG,QAAQ;IACvB,OAAO;IACP,QAAQ;IACR,cAAc;IACd,MAAM;IACN,SAAS;IACT,OAAO;IACP;EACF,CAAC,GAAA,IAAA;EACC,MAAM;IAAE,kBAAkB;IAAE,gBAAgB;IAAE;EAAwB,CAAE,GAAG,aAAa,CAAC;IACvF,OAAO;IACP,YAAY;IACZ,QAAQ;IACR,cAAc;IACd,MAAM;IACN,SAAS;IACT,OAAO;IACP;EACJ,CAAG,CAAC;EACF,IAAI,kBAAkB,KAAK,CAAC,EAAE;IAC5B,OAAO,OAAO,GAAA,eAAmB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAA,CAAE,CAAC,CAAC,GAAG,WAAW,GAAG,QAAQ,CAAC;MAAE,OAAO,EAAE;IAAM,CAAE,CAAC,GAAG,IAAI;EACjJ;EACE,OAAO,gBAAgB,KAAK,QAAQ,GAAG,WAAW,GAAG,QAAQ,CAAC;IAAE,OAAO,EAAE;EAAM,CAAE,CAAC,GAAG,IAAI,GAAA,eAAmB,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,mBAAmB,CAAC;IACjL,UAAU;IACV,QAAQ,EAAE,kBAAkB;IAC5B,KAAK,EAAE,gBAAgB;IACvB,cAAc,EAAE;EACpB,CAAG,CAAC,CAAC,CAAC;AACN;AACA,UAAU,CAAC,WAAW,GAAG,0BAA0B","sourcesContent":["import React from 'react';\nimport { getTransitionStyles } from './get-transition-styles/get-transition-styles';\nimport { useTransition } from './use-transition';\nimport { MantineTransition } from './transitions';\n\nexport interface TransitionProps {\n  /** If set element will not be unmounted from the DOM when it is hidden, display: none styles will be added instead */\n  keepMounted?: boolean;\n\n  /** Predefined transition name or transition styles */\n  transition: MantineTransition;\n\n  /** Transition duration in ms */\n  duration?: number;\n\n  /** Exit transition duration in ms */\n  exitDuration?: number;\n\n  /** Transition timing function, defaults to theme.transitionTimingFunction */\n  timingFunction?: string;\n\n  /** When true, component will be mounted */\n  mounted: boolean;\n\n  /** Render function with transition styles argument */\n  children(styles: React.CSSProperties): React.ReactElement<any, any>;\n\n  /** Calls when exit transition ends */\n  onExited?: () => void;\n\n  /** Calls when exit transition starts */\n  onExit?: () => void;\n\n  /** Calls when enter transition starts */\n  onEnter?: () => void;\n\n  /** Calls when enter transition ends */\n  onEntered?: () => void;\n}\n\nexport type TransitionOverride = Partial<Omit<TransitionProps, 'mounted'>>;\n\nexport function Transition({\n  keepMounted,\n  transition,\n  duration = 250,\n  exitDuration = duration,\n  mounted,\n  children,\n  timingFunction,\n  onExit,\n  onEntered,\n  onEnter,\n  onExited,\n}: TransitionProps) {\n  const { transitionDuration, transitionStatus, transitionTimingFunction } = useTransition({\n    mounted,\n    exitDuration,\n    duration,\n    timingFunction,\n    onExit,\n    onEntered,\n    onEnter,\n    onExited,\n  });\n\n  if (transitionDuration === 0) {\n    return mounted ? <>{children({})}</> : keepMounted ? children({ display: 'none' }) : null;\n  }\n\n  return transitionStatus === 'exited' ? (\n    keepMounted ? (\n      children({ display: 'none' })\n    ) : null\n  ) : (\n    <>\n      {children(\n        getTransitionStyles({\n          transition,\n          duration: transitionDuration,\n          state: transitionStatus,\n          timingFunction: transitionTimingFunction,\n        })\n      )}\n    </>\n  );\n}\n\nTransition.displayName = '@mantine/core/Transition';\n"]},"metadata":{},"sourceType":"module"}